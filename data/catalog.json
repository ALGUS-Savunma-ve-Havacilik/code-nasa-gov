[
  {
    "Update_Date": "2017-07-07",
    "Public Code Repo": "https://github.com/nasa/apod-api",
    "Description": "Astronomy Picture of the Day API service. A microservice written in Python which may be run on Google App Engine with the Flask micro framework.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Headquarters",
    "External Link": "https://github.com/nasa/apod-api",
    "Contributors": [
      "brian.a.thomas@nasa.gov",
      "jennifer.n.betancourt@nasa.gov"
    ],
    "Labor_Hours": 320,
    "Categories": [
      "API",
      "Images"
    ],
    "Software": "APOD API"
  },
  {
    "Update_Date": "2017-10-10",
    "Public Code Repo": "https://github.com/nasa/VirtualADAPT",
    "Description": "VirtualADAPT is a high-fidelity, Matlab Simulink-based simulation testbed that emulates the Advanced Diagnostic and Prognostic Testbed (ADAPT) electrical power system hardware for running offline health management experiments. This simulation testbed models all components of the ADAPT hardware within the power storage and power distribution subsystems. The physical components of the testbed, i.e., the batteries, relays, and the loads, are replaced by simulation modules that generate the same dynamic behaviors as the hardware test bed.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/VirtualADAPT",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov",
      "indranilroychoudhury",
      "matthewjdaigle"
    ],
    "Labor_Hours": 2512,
    "Categories": [
      "Electrical Power System",
      "Simulation"
    ],
    "Software": "Virtual ADAPT"
  },
  {
    "Update_Date": "2011-12-02",
    "Public Code Repo": "https://app.assembla.com/spaces/viewpoints/documents",
    "Description": "Viewpoints (vp) is a visualization tool for exploring large, multidimensional data. It enables rapid interactive analysis of data sets containing >> 106 samples, limited only by available RAM, with an arbitrary number of attributes (or dimensions) per sample. Viewpoints was originaly created for analyzing data sets from current and upcoming NASA space science missions but it has now been used in areas ranging from aeronautical engineering, quantum chemistry, and computational fluid dynamics to virology, finance, aviation safety, and web server log mining.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://app.assembla.com/spaces/viewpoints/wiki/Home",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov",
      "creon@nas.nasa.gov"
    ],
    "Labor_Hours": 21424,
    "Categories": [
      "visualization"
    ],
    "Software": "Viewpoints: Software for Visualization of Multivariate Data"
  },
  {
    "Update_Date": "2016-09-07",
    "Public Code Repo": "https://github.com/nasa/MISR-Toolkit",
    "Description": "The MISR Toolkit is a simplified programming interface to access MISR L1B2, L2 conventional and ancillary data products. It is an interface built upon HDF-EOS that knows about MISR data products.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://nasa.github.io/MISR-Toolkit/html/index.html",
    "Contributors": [
      "jason.duley@nasa.gov",
      "Brian Rheingans",
      "Jason Matthews",
      "Charles Thompson",
      "Sebastian Val"
    ],
    "Labor_Hours": 73536,
    "Categories": [
      "Toolkit",
      "Visualization",
      "Analysis",
      "Earth Science"
    ],
    "Software": "MISR Toolkit"
  },
  {
    "Update_Date": "2016-10-03",
    "Public Code Repo": "https://github.com/nasa/Abaverify",
    "Description": "A python package built on unittest for running verification tests on Abaqus user subroutines.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-18938-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov",
      "Andrew Bergan",
      "Frank Leone"
    ],
    "Labor_Hours": 1184,
    "Categories": [
      "FEA",
      "Abaqus",
      "User Subroutines",
      "Unit Tests",
      "Integration Tests",
      "Fortran"
    ],
    "Software": "Abaqus User Subroutine Verification (abaverify)"
  },
  {
    "Update_Date": "2015-12-12",
    "Public Code Repo": "https://github.com/mrtommyb/ktransit",
    "Description": "Formerly known as PyTransit. This python package contains routines to create and/or fit a transiting planet model. The underlying model is a Fortran implementation of the Mandel & Agol (2002) limb darkened transit model. The code will calculate a full orbital model and eccentricity can be allowed to vary.",
    "License": [
      "GPLv3"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/mrtommyb/ktransit",
    "Contributors": [
      "thomas.barclay@nasa.gov"
    ],
    "Labor_Hours": 1184,
    "Categories": [
      "Kepler"
    ],
    "Software": "ktransit"
  },
  {
    "Update_Date": "2015-05-26",
    "Public Code Repo": "http://dfm.io/kplr/",
    "Description": "kplr provides a lightweight Pythonic interface to the catalogs and data. Below, I'll describe the features provided by kplr but to get things started, letâ€™s see an example of how you would go about finding the published parameters of a KOI and download the light curve data.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://dan.iel.fm/kplr/",
    "Contributors": [
      "jason.duley@nasa.gov",
      "dfm"
    ],
    "Labor_Hours": 528,
    "Categories": [
      "Kepler"
    ],
    "Software": "kplr"
  },
  {
    "Update_Date": "2015-05-26",
    "Public Code Repo": "https://github.com/dfm/ketu",
    "Description": "The search for transiting exoplanets in K2 data.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/dfm/ketu",
    "Contributors": [
      "jason.duley@nasa.gov",
      "dfm"
    ],
    "Labor_Hours": 2432,
    "Categories": [
      "Kepler"
    ],
    "Software": "ketu"
  },
  {
    "Update_Date": "2016-06-10",
    "Public Code Repo": "https://github.com/hpparvi/k2ps",
    "Description": "Oxford K2 planet search pipeline. Searches for transit-like signals from the k2sc-detrended light curves.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/hpparvi/k2ps",
    "Contributors": [
      "hpparvi@gmail.com",
      "benjaminpope",
      "hpparvi"
    ],
    "Labor_Hours": 352,
    "Categories": [
      "Kepler"
    ],
    "Software": "k2ps"
  },
  {
    "Update_Date": "2015-11-24",
    "Public Code Repo": "https://github.com/rodluger/everest",
    "Description": "EPIC Variability Extraction and Removal for Exoplanet Science Targets: A pipeline for de-trending K2 light curves with pixel level decorrelation and Gaussian processes. Here you'll find the Python code used to generate the EVEREST catalog, as well as tools for accessing and interacting with the de-trended light curves.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://rodluger.github.io/everest/",
    "Contributors": [
      "nicholas.k.saunders@nasa.gov",
      "rodluger",
      "nksaunders",
      "dfm"
    ],
    "Labor_Hours": 5568,
    "Categories": [
      "Kepler"
    ],
    "Software": "everest"
  },
  {
    "Update_Date": "2015-11-24",
    "Public Code Repo": "https://github.com/barentsen/k2mosaic",
    "Description": "K2mosaic is a command-line tool that makes it easy to combine CCD pixel data obtained by NASA's Kepler space telescope into wide-field images. The need for this tool arises from the fact that the two-wheeled extended Kepler mission, K2, observed large clusters and moving targets (e.g. planets, comets, and asteroids). ",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/barentsen/k2mosaic",
    "Contributors": [
      "geert.barentsen@nasa.gov"
    ],
    "Labor_Hours": 352,
    "Categories": [
      "Kepler"
    ],
    "Software": "K2mosaic"
  },
  {
    "Update_Date": "2015-11-24",
    "Public Code Repo": "https://github.com/KeplerGO/kadenza",
    "Description": "Converts raw cadence target data from the Kepler space telescope into astronomer-friendly FITS files.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/KeplerGO/kadenza",
    "Contributors": [
      "jessie.dotson@nasa.gov"
    ],
    "Labor_Hours": 736,
    "Categories": [
      "Kepler"
    ],
    "Software": "kadenza"
  },
  {
    "Update_Date": "2015-11-24",
    "Public Code Repo": "https://github.com/KeplerGO/K2ephem",
    "Description": "Command-line tool to check whether a Solar System body is (or was) observable by NASA's K2 mission",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://keplerscience.arc.nasa.gov/software.html#k2ephem",
    "Contributors": [
      "jessie.dotson@nasa.gov"
    ],
    "Labor_Hours": 80,
    "Categories": [
      "Kepler"
    ],
    "Software": "K2ephem"
  },
  {
    "Update_Date": "2014-02-07",
    "Public Code Repo": "https://github.com/KeplerGO/K2fov",
    "Description": "The K2fov Python package allows users to check whether a target is in the field of view of K2. In particular, the package adds the K2onSilicon and K2findCampaigns tools to the command line, which allow the visibility of targets to be checked during one (K2onSilicon) or all (K2findCampaigns) campaigns, respectively.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://keplerscience.arc.nasa.gov/software.html#k2fov",
    "Contributors": [
      "jessie.dotson@nasa.gov"
    ],
    "Labor_Hours": 8112,
    "Categories": [
      "Kepler"
    ],
    "Software": "K2fov"
  },
  {
    "Update_Date": "2016-06-20",
    "Public Code Repo": "https://github.com/ceos-seo/Data_Cube_v2",
    "Description": "The CEOS Data Cube Platform provides a flexible model to address these needs. The CEOS Data Cube Platform is a data processing platform for Earth science data, with a focus on remote-sensing data.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/ceos-seo/Data_Cube_v2",
    "Contributors": [
      "Brian.D.Killough@nasa.gov"
    ],
    "Labor_Hours": 1150160,
    "Categories": [
      "Data cube",
      "ceos-seo"
    ],
    "Software": "CEOS Data Cube Platform v.2 (CEOS2)"
  },
  {
    "Update_Date": "2015-09-21",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/METRIC",
    "Description": "METRIC was developed for estimating evapotranspiration from landsat imagery and weather station data. It includes a short tutorial on the download method of properly formatted weather data. The easiest way to interface with the METRIC model is to add the python toolbox file \"pyt\" in arcmap and follow the user prompts.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/METRIC",
    "Contributors": [
      "mrb364",
      "Jwely"
    ],
    "Labor_Hours": 1424,
    "Categories": [
      "evapotranspiration",
      "landsat imagery",
      "NASA-DEVELOP"
    ],
    "Software": "Coastal Mid-Atlantic METRIC Model"
  },
  {
    "Update_Date": "2016-06-16",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/DSAT",
    "Description": "Drought Severity Assessment Tool (formerly Drought Severity Assessment - Decision Support Tool)",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/DSAT",
    "Contributors": [
      "mrb364",
      "Jwely",
      "vickiely",
      "Smewhen"
    ],
    "Labor_Hours": 2544,
    "Categories": [
      "Drought",
      "water resources",
      "NASA-DEVELOP"
    ],
    "Software": "Drought Severity Assessment Tool (DSAT)"
  },
  {
    "Update_Date": "2016-08-01",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/LaSTMoV",
    "Description": "Land Surface Temperature MODIS Visualization (LaSTMoV). Used to create heat vulnerability maps for Maricopa County using MYD11A1 V005 data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/LaSTMoV",
    "Contributors": [
      "mrb364",
      "Jwely"
    ],
    "Labor_Hours": 144,
    "Categories": [
      "Land Surface Temperature",
      "MODIS",
      "Visualization",
      "NASA-DEVELOP"
    ],
    "Software": "Land Surface Temperature MODIS Visualization (LaSTMoV)"
  },
  {
    "Update_Date": "2016-06-24",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/DRIP-SLIP",
    "Description": "Landslide identification and extreme precipitation monitoring software. Detect spectral changes from Landsat imagery that may indicate landslides in Nepal.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/NASA-DEVELOP/DRIP-SLIP",
    "Contributors": [
      "aakash.ahamed@nasa.gov"
    ],
    "Labor_Hours": 352,
    "Categories": [
      "landslide",
      "precipitation monitoring",
      "LANDSAT",
      "NASA-DEVELOP"
    ],
    "Software": "DEVELOP DRIP and SLIP Landslide Detection Package (DRIP-SLIP)"
  },
  {
    "Update_Date": "2015-01-15",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/dnppy",
    "Description": "DEVELOP National Program Python package for use with NASA data and GIS. dnppy is a collection of functions and classes for download, format, and analysis of NASA satelite data and anciliary NOAA datasets",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://nasa-develop.github.io/dnppy/",
    "Contributors": [
      "Jwely"
    ],
    "Labor_Hours": 5888,
    "Categories": [
      "GIS",
      "NOAA",
      "satellite DATA"
    ],
    "Software": "dnppy"
  },
  {
    "Update_Date": "2014-09-05",
    "Public Code Repo": "http://www-cave.larc.nasa.gov/LFLcode/Ed4_LaRC_FuLiou201501.tar.gz",
    "Description": "Data collected in the CAVE effort are meant for use in validation studies of Clouds & The Earths Radiant Energy System (CERES) instruments operating on the Suomi NPP and Earth Observing Systems(EOS)Terra & Aqua & Tropical Rainfall Measurement Mission (TRMM) satellites.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "http://www-cave.larc.nasa.gov/index.html",
    "Contributors": [
      "Seiji.Kato@NASA.gov"
    ],
    "Labor_Hours": 45552,
    "Categories": [
      "validation",
      "CERES",
      "ARM"
    ],
    "Software": "CERES/ARM Validation Experiment (CAVE)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://github.com/nasa/MM",
    "Description": "The Memory Manager application (MM) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. ",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://software.nasa.gov/software/GSC-16011-1",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 24416,
    "Categories": [
      "CFE",
      "CFS",
      "Core Flight System",
      "memory management"
    ],
    "Software": "Core Flight System (CFS) Memory Manager Application Version 2"
  },
  {
    "Update_Date": "2015-03-04",
    "Public Code Repo": "https://github.com/vightel/ojo-processing",
    "Description": "Training materials on how to generate various products from NASA sources (and others) and store them on the cloud (AWS S3). Use the Open GeoSocial API for data distribution, visualization, discovery and sharing via social networks",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://ojo-streamer.herokuapp.com/",
    "Contributors": [
      "dalia.b.kirschbaum@nasa.gov"
    ],
    "Labor_Hours": 1840,
    "Categories": [
      "earth sciences",
      "landslides"
    ],
    "Software": "Landslide Hazard Assessment for Situational Awareness (LHASA)"
  },
  {
    "Update_Date": "2015-03-04",
    "Public Code Repo": "https://github.com/vightel/ojo-bot",
    "Description": "This is a prototype data processor/publisher for NASA.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/vightel/ojo-bot",
    "Contributors": [
      "dalia.b.kirschbaum@nasa.gov"
    ],
    "Labor_Hours": 93280,
    "Categories": [
      "earth sciences",
      "landslides"
    ],
    "Software": "OJO Bot"
  },
  {
    "Update_Date": "2015-09-17",
    "Public Code Repo": "https://github.com/psycopaths/psyco",
    "Description": "jpf-psyco generates symbolic interfaces for software components using concolic execution.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/m/groups/rse/papers/Giannakopoulou-CAV12.pdf",
    "Contributors": [
      "dimitra.giannakopoulou@nasa.gov"
    ],
    "Labor_Hours": 5664,
    "Categories": [
      "symbolic learning",
      "temporal interfaces",
      "component methods"
    ],
    "Software": "PSYCO: A Predicate-based Symbolic Compositional Reasoning environment"
  },
  {
    "Update_Date": "2014-01-28",
    "Public Code Repo": "https://github.com/pkolano/retools",
    "Description": "Retools is a set of modifications to the commonly used open source utilities bzip2, gzip, rsync, and tar that automatically selects the Lustre stripe count for created and/or extracted files according to the sizes of the files involved. By striping large files over a higher number of physical disks and small files over a lower number, aggregate I/O bandwidth for large files is maximized and the impact to the file system due to small files is minimized. These tools support the typical workflow in high performance computing environments where users compress large files and/or aggregate multiple small files into a single archive during remote transfers. Once uncompressed/unarchived into their original form, these files will be optimally striped for subsequent operations.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://pkolano.github.io/projects/retools.html",
    "Contributors": [
      "Paul.Kolano@nasa.gov"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "utility",
      "disk striping",
      "Lustre file systems"
    ],
    "Software": "Restriping Tools for Lustre (Retools)"
  },
  {
    "Update_Date": "2012-05-11",
    "Public Code Repo": "https://github.com/neogeographytoolkit/stereopipeline",
    "Description": "The NASA Ames Stereo Pipeline (ASP) is a suite of free and open source automated geodesy and stereogrammetry tools designed for processing stereo imagery captured from satellites (around Earth and other planets), robotic rovers, aerial cameras, and historical imagery, with and without accurate camera pose information. It produces cartographic products, including digital elevation models (DEMs), ortho-projected imagery, 3D models, and bundle-adjusted networks of cameras. ASP's data products are suitable for science analysis, mission planning, and public outreach.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/tech/asr/intelligent-robotics/ngt/stereo/",
    "Contributors": [
      "stereo-pipeline@lists.nasa.gov",
      "oleg-alexandrov",
      "ScottMcMichael",
      "broxtronix",
      "novas0x2a",
      "khusmann",
      "ljexplore",
      "anefian",
      "SmithB",
      "dshean",
      "trey0",
      "mstyer",
      "rbeyer",
      "harguess",
      "saravkin",
      "jlaura"
    ],
    "Labor_Hours": 104608,
    "Categories": [
      "geodesy",
      "stereogrammetry",
      "tools",
      "satellites imagery"
    ],
    "Software": "Neo-Geography Toolkit (NGT)"
  },
  {
    "Update_Date": "2011-09-16",
    "Public Code Repo": "https://sourceforge.net/projects/irg-verve/files/latest/download",
    "Description": "VERVE (Visual Environment for Remote Virtual Exploration) is a collection of software components for visualizing, monitoring, and commanding robots in remote environments. VERVE is developed by the Intelligent Robotics Group at NASA Ames Research Center and is part of the NASA Ensemble software ecosystem.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://sourceforge.net/p/irg-verve/wiki/VERVE%20Wiki%20Home/",
    "Contributors": [
      "maria.bualat@nasa.gov"
    ],
    "Labor_Hours": 271488,
    "Categories": [
      "virtual environment",
      "robots"
    ],
    "Software": "Visual Environment for Remote Virtual Exploration (VERVE)"
  },
  {
    "Update_Date": "2010-09-27",
    "Public Code Repo": "https://github.com/pkolano/mutil",
    "Description": "Copies between local file systems are a daily activity. Files are constantly being moved to locations accessible by systems with different functions and/or storage limits, being backed up and restored, or being moved due to upgraded and/or replaced hardware. Hence, maximizing the performance of copies as well as checksums that ensure the integrity of copies is desirable to minimize the turnaround time of user and administrator activities. Modern parallel file systems provide very high performance for such operations using a variety of techniques such as striping files across multiple disks to increase aggregate I/O bandwidth and spreading disks across multiple servers to increase aggregate interconnect bandwidth.",
    "License": [
      "LGPL"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://pkolano.github.io/projects/mutil.html",
    "Contributors": [
      "paul.kolano@nasa.gov"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "mutil",
      "system administration",
      "file copying"
    ],
    "Software": "Multi-threaded Copy Program (MCP)"
  },
  {
    "Update_Date": "2009-11-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/nu-anomica/nu-anomica.zip",
    "Description": "One-class nu-Support Vector machine (SVMs) learning technique maps the input data into a much higher dimensional space and then uses a small portion of the training data (support vectors) to parametrize the decision surface that can linearly separate nu fraction of training points (labeled as anomalies) from the rest.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/nu-anomica/",
    "Contributors": [
      "peter.c.mehlitz@nasa.gov"
    ],
    "Labor_Hours": 272,
    "Categories": [
      "SVM",
      "Support Vector Machine"
    ],
    "Software": "nu-Anomica"
  },
  {
    "Update_Date": "2016-04-26",
    "Public Code Repo": "https://github.com/NASARace/race",
    "Description": "The Runtime for Airspace Concept Evaluation (RACE) is a software architecture and framework to build configurable, highly concurrent and distributed message based systems. Among other things, RACE can be used to rapidly build simulations that span several machines (including synchronized displays), interface existing hardware simulators and other live data feeds, and incorporate sophisticated visualization components such as NASAâ€™s WorldWind viewer.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASARace/race/blob/master/README.md",
    "Contributors": [
      "peter.c.mehlitz@nasa.gov"
    ],
    "Labor_Hours": 23232,
    "Categories": [
      "Airspace Simulation"
    ],
    "Software": "RACE - Runtime for Airspace Concept Evaluation"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://github.com/nasa/pymdptoolbox",
    "Description": "The MDP toolbox for Python by Sam Cordwell provides classes and functions for the resolution of descrete-time Markov Decision Processes. The list of algorithms that have been implemented includes backwards induction, linear programming, policy iteration, q-learning and value iteration along with several variations.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/pymdptoolbox",
    "Contributors": [
      "michael.bloem@nasa.gov"
    ],
    "Labor_Hours": 1456,
    "Categories": [
      "Markov Decision Process",
      "MDP",
      "Decision Making",
      "IRL"
    ],
    "Software": "Inverse Reinforcement Learning (IRL) Augmentation for PyMDPToolbox"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://github.com/xgds",
    "Description": "xGDS (Exploration Ground Data Systems) synthesizes real world data (from sensors, robots, ROVs, mobile devices, etc) and human observations into rich, digital maps and displays for analysis, decision making, and collaboration. xGDS evolved from our work developing tools to control, monitor and collect data from autonomous rovers supporting NASA's terrestrial field science research. xGDS is a highly collaborative, interactive suite of web software.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/tech/asr/groups/intelligent-robotics/xgds/",
    "Contributors": [
      "terry.fong@nasa.gov"
    ],
    "Labor_Hours": 666480,
    "Categories": [
      "Ground Data Systems",
      "Maps",
      "Decision Making"
    ],
    "Software": "xGDS"
  },
  {
    "Update_Date": "2017-02-15",
    "Public Code Repo": "https://github.com/nasa/PRECiSA",
    "Description": "PRECiSA is a fully automatic analyzer for the estimation of round-off errors of floating-point valued functional expressions. ",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "http://precisa.nianet.org",
    "Contributors": [
      "cesar.a.munoz@nasa.gov"
    ],
    "Labor_Hours": 7120,
    "Categories": [
      "PVS",
      "Floating-point Round-off Errors",
      "Static Analysis"
    ],
    "Software": "Program Round-Off Certifier via Static Analysis (PRECiSA) with Kodiak Integration"
  },
  {
    "Update_Date": "2016-08-19",
    "Public Code Repo": "https://github.com/nasa/icarous",
    "Description": "ICAROUS is a software architecture that enables the robust integration of mission specific software modules and highly assured core software modules for building safety-centric autonomous unmanned aircraft applications.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://shemesh.larc.nasa.gov/fm/ICAROUS/",
    "Contributors": [
      "cesar.a.munoz@nasa.gov"
    ],
    "Labor_Hours": 299392,
    "Categories": [
      "UAS",
      "Geofencing",
      "Detect and Avoid"
    ],
    "Software": "Independent Configurable Architecture for Reliable Operations of Unmanned Systems with Distributed On-board Services (ICAROUS-2)"
  },
  {
    "Update_Date": "2016-09-14",
    "Public Code Repo": "https://github.com/nasa/polycarp",
    "Description": "PolyCARP is a package of algorithms, including both their formal models and software implementations, for computing containment, collision, resolution, and recovery information for polygons. The intended applications of PolyCARP are related, but not limited, to safety critical systems in air traffic management.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://shemesh.larc.nasa.gov/fm/PolyCARP",
    "Contributors": [
      "cesar.a.munoz@nasa.gov"
    ],
    "Labor_Hours": 110528,
    "Categories": [
      "UAV",
      "Geofencing"
    ],
    "Software": "PolyCARP: Algorithms and Software for Computations with Polygons"
  },
  {
    "Update_Date": "2014-04-23",
    "Public Code Repo": "https://github.com/nasa/wellclear",
    "Description": "DAIDALUS is a reference implementation of a detect and avoid concept intended to support the integration of Unmanned Aircraft Systems into civil airspace. The WellClear repository includes definitions in Matlab of a family of well-clear violation volumes.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://shemesh.larc.nasa.gov/fm/DAIDALUS/",
    "Contributors": [
      "cesar.a.munoz@nasa.gov"
    ],
    "Labor_Hours": 207456,
    "Categories": [
      "UAS",
      "Detect and Avoid",
      "Well-Clear"
    ],
    "Software": "Detect and Avoid Alerting Logic for Unmanned Systems (DAIDALUS) with Dynamic Well-Clear Separation Volumes"
  },
  {
    "Update_Date": "2016-08-18",
    "Public Code Repo": "https://github.com/nasa/PrognosticsAlgorithmLibrary",
    "Description": "The Prognostics Algorithm Library is a suite of algorithms implemented in the MATLAB programming language for model-based prognostics (remaining life computation). It includes algorithms for state estimation and prediction, including uncertainty propagation. The algorithms take as inputs component models developed in Matlab, and perform estimation and prediction functions. The library allows the rapid development of prognostics solutions for given models of components and systems. Different algorithms can be easily swapped to do comparative studies and evaluations of different algorithms to select the best for the application at hand.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/PrognosticsAlgorithmLibrary/wiki",
    "Contributors": [
      "matthewjdaigle"
    ],
    "Labor_Hours": 384,
    "Categories": [
      "Framework",
      "Toolbox",
      "Prognostics",
      "PHM",
      "Health Management"
    ],
    "Software": "Prognostics Algorithm Library"
  },
  {
    "Update_Date": "2016-08-18",
    "Public Code Repo": "https://github.com/nasa/PrognosticsModelLibrary",
    "Description": "The Prognostics Model Library is a modeling framework focused on defining and building models for prognostics (computation of remaining useful life) of engineering systems, and provides a set of prognostics models for select components developed within this framework, suitable for use in prognostics applications for these components. The library currently includes models for valves, pumps, and batteries. The Prognostics Model Library is implemented in MATLAB. The implementation consists of a set of utilities for defining a model (specifying variables, parameters, and equations), simulating the model, and embedding it within common model-based prognostics algorithms. A user can use existing models within the library or construct new models with the provided framework.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/PrognosticsModelLibrary/wiki",
    "Contributors": [
      "matthewjdaigle"
    ],
    "Labor_Hours": 656,
    "Categories": [
      "Framework",
      "Toolbox",
      "Prognostics",
      "PHM",
      "Health Management"
    ],
    "Software": "Prognostics Model Library"
  },
  {
    "Update_Date": "2016-04-18",
    "Public Code Repo": "https://github.com/nasa/QuIP",
    "Description": "QuIP provides an interactive environment for computing and presenting images and image sequences, manipulating and storing arbitrary data, and general scientific computing and plotting.  The current release supports unix-like operating systems (tested on Linux and Mac OSX), and Apple's iOS mobile operating system.  GPU acceleration is supported with either CUDA or OpenCL.  There is built-in support for psychophysical experimentation, with general-purpose staircase routines and analysis of psychometric functions.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/QuIP/wiki",
    "Contributors": [
      "Jeff Mulligan"
    ],
    "Labor_Hours": 157216,
    "Categories": [
      "Image Processing",
      "Graphics",
      "Visualization",
      "Psychophysics",
      "Analysis",
      "Mobile",
      "Toolkit",
      "Simulation",
      "Framework"
    ],
    "Software": "Portable Environment for Quick Image Processing (QuIP)"
  },
  {
    "Update_Date": "2016-02-29",
    "Public Code Repo": "https://github.com/nasa-gibs/worldview-options-eosdis",
    "Description": "This repository contains the configuration used by Worldview on the Earthdata site. See the Worldview repository for more information. This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa-gibs/worldview-options-eosdis",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 21152,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "Tiled WMS",
      "global imagery browse services",
      "gibs",
      "branding",
      "onearth"
    ],
    "Software": "Worldview Options Eosdis"
  },
  {
    "Update_Date": "2016-01-28",
    "Public Code Repo": "https://github.com/nasa-gibs/worldview-design",
    "Description": "This repository contains the wireframes and designs for NASA Worldview. This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa-gibs/worldview-design",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 6896,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "Tiled WMS",
      "global imagery browse services",
      "gibs",
      "design",
      "onearth"
    ],
    "Software": "Worldview Design"
  },
  {
    "Update_Date": "2015-05-05",
    "Public Code Repo": "https://github.com/nasa-gibs/worldview-options-template",
    "Description": "This repository contains the generic branding with basic configuration for NASA Worldview.This code was originally developed at NASA/Goddard Space Flight Center for the Earth Science Data and Information System (ESDIS) project.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa-gibs/worldview-options-template",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 176,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "Tiled WMS",
      "global imagery browse services",
      "gibs",
      "branding",
      "onearth"
    ],
    "Software": "Worldview Options Template"
  },
  {
    "Update_Date": "2016-02-05",
    "Public Code Repo": "https://github.com/nasa-gibs/mrf",
    "Description": "The source code contains the Meta Raster Format (MRF) specification and plugin for GDAL, which is a part of the OnEarth software package. OnEarth consists of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The Meta Raster Format and OnEarth software were originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool, the Lunar Mapping and Modeling Project (LMMP), and GIBS.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-gibs/mrf",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 864,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "Tiled WMS",
      "global imagery browse services",
      "gibs",
      "mrf",
      "onearth"
    ],
    "Software": "Meta Raster Format (mrf)"
  },
  {
    "Update_Date": "2015-08-31",
    "Public Code Repo": "https://github.com/nasa-gibs/data-curtains",
    "Description": "NASA's Data Curtains from Space is a Google Summer of Code 2015 Project for the Cesium Community developed by Abhishek Potnis under the guidance of Mike McGann and Ryan Boller at NASA. Data Curtains from Space uses Cesium to better visualize data from the CALIPSO satellite, which is used to study clouds and aerosols in the atmosphere.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-gibs/data-curtains",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 53584,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "Tiled WMS",
      "global imagery browse services",
      "gibs",
      "onearth",
      "data visualization"
    ],
    "Software": "Data Curtains"
  },
  {
    "Update_Date": "2016-02-12",
    "Public Code Repo": "https://github.com/nasa-gibs/onearth",
    "Description": "OnEarth is a software package consisting of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The software was originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool, the Lunar Mapping and Modeling Project (LMMP), and Worldview.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-gibs/onearth",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 28816,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "global imagery browse services",
      "gibs",
      "onearth",
      "Tiled WMS"
    ],
    "Software": "OnEarth"
  },
  {
    "Update_Date": "2016-02-12",
    "Public Code Repo": "https://github.com/nasa-gibs/onearth-boxes",
    "Description": "OnEarth-Boxes is a system that creates VM images for use in running, testing, and experimenting with the OnEarth and MRF tools. It uses Packer to produce a variety of pre-built VMs in different formats. OnEarth-Boxes comes pre-configured with NASA Blue Marble and MODIS Aerosol imagery layers, in 4 separate projections. There are OpenLayers endpoints for testing with WMTS, as well as TWMS/KML and Mapserver endpoints.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-gibs/onearth-boxes",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 160,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "global imagery browse services",
      "gibs",
      "onearth",
      "Tiled WMS"
    ],
    "Software": "OnEarth Boxes"
  },
  {
    "Update_Date": "2015-05-20",
    "Public Code Repo": "https://github.com/nasa-gibs/gibs-web-examples",
    "Description": "This project shows how to use GIBS as a tile source for OpenLayers, Leaflet, Cesium, Bing, and Google Maps.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-gibs/gibs-web-examples",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 13104,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "global imagery browse services",
      "gibs",
      "onearth",
      "Tiled WMS"
    ],
    "Software": "GIBS Web Examples"
  },
  {
    "Update_Date": "2015-04-03",
    "Public Code Repo": "https://github.com/nasa-gibs/ol3",
    "Description": "This repository contains changes to OpenLayers 3 used by Worldview.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa-gibs/ol3",
    "Contributors": [
      "support@earthdata.nasa.gov"
    ],
    "Labor_Hours": 64640,
    "Categories": [
      "worldview",
      "earth data science",
      "eosdis",
      "global imagery browse services",
      "gibs",
      "onearth",
      "Tiled WMS"
    ],
    "Software": "Open Layers 3"
  },
  {
    "Update_Date": "2016-01-22",
    "Public Code Repo": "https://github.com/nasa/WinASSIST",
    "Description": "The WinASSIST program uses a rule-oriented language to automatically generate input files for the SURE/WinSURE program. The user describes the failure behavior and recovery behavior of a fault-tolerant computer system in an abstract language. The WinASSIST program then automatically generates a corresponding semi-Markov model. The abstract language allows efficient description of large, complex systems. A one-page WinASSIST-language description may result in a semi-Markov model with thousands of states and transitions. The WinASSIST program also provides model-reduction techniques to facilitate efficient modeling of large systems.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/WinASSIST",
    "Contributors": [
      "rwbutler4"
    ],
    "Labor_Hours": 14528,
    "Categories": [
      "NASA",
      "Reliability Analysis",
      "Markov Model Generation",
      "Fault Tolerance"
    ],
    "Software": "WinASSIST: (Windows Abstract Semi-Markov Specification Interface To The SURE Tool)"
  },
  {
    "Update_Date": "2016-01-22",
    "Public Code Repo": "https://github.com/nasa/WinSURE",
    "Description": "WinSURE is a reliability analysis program used for calculating upper and lower bounds on for the operational and death state probabilities for a large class of semi-Markov models. The program is especially suited for the analysis of fault-tolerant reconfigurable systems. The calculated bounds are close enough (usually within 5 percent of each other) for use in reliability studies of ultra-reliable computer systems. The SURE bounding theorems have algebraic solutions and are consequently computationally efficient even for large and complex systems. SURE can optionally regard a specified parameter as a variable over a range of values, enabling an automatic sensitivity analysis.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/WinSURE",
    "Contributors": [
      "rwbutler4"
    ],
    "Labor_Hours": 24544,
    "Categories": [
      "NASA",
      "Reliability Analysis",
      "Markov Model Generation",
      "Fault Tolerance"
    ],
    "Software": "Windows Semi-Markov Range Evaluator (WinSURE)"
  },
  {
    "Update_Date": "2011-09-13",
    "Public Code Repo": "https://github.com/cboshuizen/AXCS",
    "Description": "AXCS enables smartphones and other mobile devices to be utilized as a ground-based test bed for operations in extreme environments. For NASA, the technology is currently being used to evaluate hardware for balloon launches. The software's tool kits provide environmental and situational measurements, command and data handing (CD&H) functions, events timing, data logging, and communications with external devices.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/cboshuizen/AXCS",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 5392,
    "Categories": [
      "operations",
      "mobile devices"
    ],
    "Software": "Autonomous eXplorer Control System (AXCS)"
  },
  {
    "Update_Date": "2012-05-22",
    "Public Code Repo": "https://sourceforge.net/projects/gmat/files/latest/download",
    "Description": "GMAT is a software system for mission analysis and trajectory optimization, estimation, and prediction. The technology can be used to design spacecraft trajectories, optimize maneuvers, perform orbit determination, visualize and communicate mission parameters, and understand a mission's trade space.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/gmat/",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 2140848,
    "Categories": [
      "Design and Integration Tools"
    ],
    "Software": "General Mission Analysis Tool (GMAT), Revision 2012a"
  },
  {
    "Update_Date": "2015-01-08",
    "Public Code Repo": "https://github.com/pkolano/savors",
    "Description": "Savors is a tool for security event monitoring, analysis, and response. The technology scales to real-world environments and uses high-end computing resources on-demand to compile behavior profiles that point to anomalous behavior. Auralization allows both monitoring and analysis to be performed in parallel and draws attention to critical events in one tool when utilizing another. Remote data access and response capabilities across distributed resources are enabled using grid computing that provides a secure, single sign-on environment.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://pkolano.github.io/projects/savors.html",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 2816,
    "Categories": [
      "Design and Integration Tools"
    ],
    "Software": "Savors: A Scalable Aural-Visual Environment for Security Event Monitoring, Analysis, And Response"
  },
  {
    "Update_Date": "2015-03-12",
    "Public Code Repo": "https://sourceforge.net/projects/cfs-cfdp/files/latest/download",
    "Description": "The CCSDS File Delivery Protocol (CFDP) application (CF) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFDP application provides the capability to transmit and receive files to/from the ground. Tables are used to allow flexibility in specifying directory priorities and configurations.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-cfdp",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 41120,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) CCSDS File Delivery Protocol (CFDP)"
  },
  {
    "Update_Date": "2015-03-13",
    "Public Code Repo": "https://sourceforge.net/projects/cfs-cs/files/latest/download",
    "Description": "The Checksum application (CS) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. Checksum (CS) is one of the reusable applications that make up the Core Flight System (CFS). The technology performs memory integrity management by verifying the contents of critical flight memory regions. Unexpected changes in memory (i.e., due to an SEU) are reported to ground operators.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa/cs",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 37984,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Checksum Application"
  },
  {
    "Update_Date": "2015-08-04",
    "Public Code Repo": "https://github.com/nasa/ds",
    "Description": "The Data Storage application (DS) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The DS application provides the ability to store data (i.e., messages) into files. Tables are used to provide the flexibility for specifying messages.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-ds",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 24704,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Data Storage (DS) Application"
  },
  {
    "Update_Date": "2015-03-20",
    "Public Code Repo": "https://github.com/nasa/fm",
    "Description": "FM provides the user commands to perform the following operations: copy file, move file, rename file, delete file(s), close file, concatenate file, decompress file, delete directory contents, create directory, remove directory, obtain file information, obtain open file listing, and obtain directory listings.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-fm",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 37872,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) File Manager (FM) Application"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/hs",
    "Description": "The plug-and-play CFS Health and Safety application is compatible with the Core Flight Executive (cFE) and uses the Operating System Abstraction Layer (OSAL), both of which were developed by Goddard Space Flight Center in order to provide a reusable, platform-independent, mission-independent, layered architecture for hosting applications. The technology can be used for any government or commercial spacecraft.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-hs",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 20752,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Health and Safety Application"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/hk",
    "Description": "The Housekeeping application (HK) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFS Housekeeping application provides the ability to organize data from various packets into new packets in order to best utilize the telemetry bandwidth available for a mission.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-hk",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 12624,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Housekeeping (HK) Application"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/lc",
    "Description": "The Limit Checker application (LC) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The Limit Checker (LC) application is responsible for monitoring telemetry values.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-lc",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 43168,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Limit Checker (LC) Application"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/md",
    "Description": "The Memory Dwell application telemeters the contents of table-defined addresses at a table-defined dwell rate. Addresses can be processed using symbols if the target processor/operating system includes symbols.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-md",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 18528,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Memory Dwell Application"
  },
  {
    "Update_Date": "2015-05-31",
    "Public Code Repo": "https://github.com/nasa/sch",
    "Description": "The Scheduler application (SCH) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The Scheduler application uses a one-second major timeframe, which is divided into a designer-determined collection of equally divided minor timeframes. The technology is configurable and table-driven to provide greater flexibility.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-sch",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 20752,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Scheduler Application"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/sbn",
    "Description": "The Software Bus Network application (SBN) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The SBN serves as a plug-in to the cFE framework to transfer messages across process/processor interfaces. The technology has three primary functions: to establish and maintain a connection to each peer over available process/processor interfaces; to distribute and maintain a subscription message database for each peer; and to distribute messages to peers that have subscribed to message identifiers.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-sbn",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 2768,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Software Bus Network (SBN) Application"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/sc",
    "Description": "The Stored Command application (SC) is a core Flight System (cFS) application that is a plug in to the Core Flight Executive (cFE) component of the cFS. The CFS SC application provides the ability to execute onboard absolute-time and relative-time command sequences. The technology offers a generic implementation that can be configured by a user to fit the needs of a specific mission.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/cfs-sc",
    "Contributors": [
      "gsfc-softwarerelease@mail.nasa.gov"
    ],
    "Labor_Hours": 18528,
    "Categories": [
      "vehicle management (space/air/ground)"
    ],
    "Software": "Core Flight System (CFS) Stored Command (SC) Application"
  },
  {
    "Update_Date": "2013-04-26",
    "Public Code Repo": "https://sourceforge.net/projects/darcxdb3",
    "Description": "This innovation will query using a suite of operators in the Netmark/XDB query language to retrieve elements based on the absolute value of tags in the XML source. In an earlier version of the software, element retrieval was based solely on 'full-text' term searches of the tags and their values.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://sourceforge.net/projects/darcxdb3",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov",
      "Chris Knight"
    ],
    "Labor_Hours": 96848,
    "Categories": [
      "Data Servers Processing and Handling",
      "Data Warehousing",
      "Front-Ends",
      "XML"
    ],
    "Software": "Netmark eXtensible DataBase, Data Access and Retrieval Composition (XDB3-DARC)"
  },
  {
    "Update_Date": "2016-01-11",
    "Public Code Repo": "http://ritchielee.net/wp-content/uploads/2015/11/libnfg-snap-1.0.zip",
    "Description": "The libnfg software library describes how humans interact with their environment and with other humans. The tool provides a Monte Carlo analysis of user-specified 'network-form games', which are flexible modeling methodologies that combine Bayes nets and game theory to model complex systems.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://ritchielee.net/software/libnfg-snap-1-0/",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 72544,
    "Categories": [
      "Crew and Life Support"
    ],
    "Software": "Network-Form Game Software Library (libnfg)"
  },
  {
    "Update_Date": "2011-07-20",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/projects/autobayes",
    "Description": "AutoBayes uses extended Bayesian networks, a powerful symbolic system, and algorithm schemas to automatically generate efficient and customized programs for data analysis. It generates a standardized design document containing a graphical representation of the Bayesian network and of the details regarding the code's generation.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/autobayes/",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 26928,
    "Categories": [
      "Data and Image Processing"
    ],
    "Software": "AutoBayes: Automatic Design of Customized Analysis Algorithms and Programs"
  },
  {
    "Update_Date": "2010-09-10",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/projects/mpd",
    "Description": "MPD is a powerful and effective iterative algorithm for signal decomposition and feature extraction. The technology decomposes any signal into linear combinations of its dictionary elements, or 'atoms.'",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://c3.nasa.gov/dashlink/resources/125/",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 400,
    "Categories": [
      "Data and Image Processing"
    ],
    "Software": "Highly Scalable Matching Pursuit Signal Decomposition Algorithm (MPD)"
  },
  {
    "Update_Date": "2013-03-28",
    "Public Code Repo": "https://github.com/nasa/pvslib/tree/master/Hypatheon-1.2",
    "Description": "The Hypatheon suite of software tools provide a searchable database capability for the specialized domain of formalized mathematics. The technology is designed to be a companion to a specific tool called PVS, which supports an emerging type of advanced software verification intended for safety-critical systems. Hypatheon aims to enhance PVS users' productivity by first indexing the mathematical theories rendered in the PVS specification language, then making their contents searchable by an interactive software tool.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-18232-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov"
    ],
    "Labor_Hours": 7296,
    "Categories": [
      "Data and Image Processing"
    ],
    "Software": "Hypatheon-Searchable Database Capability for Formalized Mathematics"
  },
  {
    "Update_Date": "2016-01-11",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/projects/mts-search",
    "Description": "This software allows the user to specify a time series over multiple variables to search within massive datasets. The tool will return a listing of events (a time series) from the database that spans multiple variables and is within a threshold distance from the query. Experiments on numerous real aviation datasets have demonstrated the algorithm's capability to uncover potential aircraft safety events (as validated by multiple aviation safety experts and airlines).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/mts-search/",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 240,
    "Categories": [
      "Data and Image Processing"
    ],
    "Software": "Multivariate Time Series Search Capability to Identify Complex Patterns in Large Datasets"
  },
  {
    "Update_Date": "2008-06-16",
    "Public Code Repo": "https://github.com/kleb/nasarb",
    "Description": "A home for NASA's open source Ruby software.  funit (Fortran unit testing framework.) fortran (Fortran utilities.) watch-paths (Poor man's file monitoring.) namelists (Generates webpage for creating namelists found in Fortran programs.) uq4sim (Uncertainty quantification for simulation.)",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/kleb/nasarb",
    "Contributors": [
      "larc-sra@mail.nasa.gov"
    ],
    "Labor_Hours": 4080,
    "Categories": [
      "Data and Image Processing"
    ],
    "Software": "NASA Ruby"
  },
  {
    "Update_Date": "2012-03-31",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/project/wiring",
    "Description": "Providing a toolbox of functionality for MATLAB, this NASA-developed software detects precursor wiring faults (e.g., chafing) in shielded impedance-controlled cabling using measurements from off-the-shelf, time-domain reflectometry or vector-network analyzer hardware. The technology combines high-fidelity analytical physics models for signal propagation with fast Bayesian inference algorithms for intrinsic cable and fault-parameter retrieval.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/project/wiring/",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 7504,
    "Categories": [
      "Electronics and Electrical Power"
    ],
    "Software": "Physics-Model-Based Wiring Fault Detection Toolbox for MATLAB"
  },
  {
    "Update_Date": "2016-07-26",
    "Public Code Repo": "https://github.com/nasa/DERT",
    "Description": "Desktop Exploration of Remote Terrain (DERT) is a software tool for exploring large Digital Terrain Models (DTMs) in 3D. It aids in understanding topography and spatial relationships of terrain features, as well as performing simple analysis tasks relevant to the planetary science community.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/DERT",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 31696,
    "Categories": [
      "Environmental Science",
      "Earth",
      "Air",
      "Space",
      "Exoplanet"
    ],
    "Software": "Desktop Exploration of Remote Terrain (DERT)"
  },
  {
    "Update_Date": "2012-04-05",
    "Public Code Repo": "https://github.com/geocam/geocamShare",
    "Description": "GeoCam is a geospatial system for disaster response that consists of (1) low-cost consumer hardware (i.e., a digital camera or cell phone, position/orientation sensors, and an optional embedded controller) and (2) a Web-based workflow that enables images and other geo-referenced data to be shared and viewed in a variety of ways. GeoCam includes software that computes image location and provides for geo-rectification, KML-formatted geospatial data generation, image management, and geo-referenced data sharing.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/geocam/geocamShare",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 272,
    "Categories": [
      "Environmental Science",
      "Earth",
      "Air",
      "Space",
      "Exoplanet"
    ],
    "Software": "GeoCam, Version 2"
  },
  {
    "Update_Date": "2015-12-16",
    "Public Code Repo": "https://github.com/KeplerGO/PyKE/",
    "Description": "The Kepler archive contains time-series data calibrated and reduced from detector pixels. The pipelined reduction includes the removal of time-series trends systematic to a spacecraft and its environment. PyKE is a tool to create light curves with user-chosen pixel apertures and cotrend and/or detrend data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://keplerscience.arc.nasa.gov/software.html#pyke",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 11104,
    "Categories": [
      "Environmental Science",
      "Earth",
      "Air",
      "Space",
      "Exoplanet"
    ],
    "Software": "Kepler Community Data Analysis Tools (PyKE)"
  },
  {
    "Update_Date": "2011-03-30",
    "Public Code Repo": "https://github.com/nasa/europa",
    "Description": "EUROPA is a general-purpose, reusable, artificial intelligence software system. The tool generates plans for performing complex activities in parallel. Functionality includes the capability of verifying that a plan satisfies all constraints.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/europa",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 122064,
    "Categories": [
      "Autonomous Systems"
    ],
    "Software": "Extendable Uniform Remote Operations Planning Architecture (EUROPA) 2.1"
  },
  {
    "Update_Date": "2015-01-09",
    "Public Code Repo": "https://github.com/NASA-Tensegrity-Robotics-Toolkit/NTRTsim",
    "Description": "The NASA Tensegrity Robotics Toolkit (NTRT) is a collection of C and MATLAB software modules for the modeling, simulation, and control of Tensegrity Robots. Tensegrity Robots are a biologically inspired approach to building robots based on the tension networks of tensegrity structures, which have no rigid connections between elements. The NTRT was created to enable: the rapid co-exploration of structures and controls in a physics based simulation environment; the development of tensegrity robotics algorithms such as structural analysis, kinematics, and motion planning; and the validation of the algorithms and controls on hardware prototypes of the tensegrity robots.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASA-Tensegrity-Robotics-Toolkit/NTRTsim",
    "Contributors": [
      "arc-sra-team@mail.nasa.gov"
    ],
    "Labor_Hours": 59904,
    "Categories": [
      "Autonomous Systems"
    ],
    "Software": "NASA Tensegrity Robotics Toolkit (NTRT) v1"
  },
  {
    "Update_Date": "2015-02-28",
    "Public Code Repo": "https://github.com/alotau/dwsolver",
    "Description": "This implementation of the Dantzig-Wolfe decomposition is built upon the GNU Linear Programming Kit. The technology provides a command-line tool for solving properly decomposed linear programs.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasajoey/dwsolver",
    "Contributors": [
      "Joseph Rios"
    ],
    "Labor_Hours": 66784,
    "Categories": [
      "Aeronautics",
      "Linear Programming",
      "Optimization"
    ],
    "Software": "Parallel Dantzig-Wolfe Decomposition"
  },
  {
    "Update_Date": "2017-07-12",
    "Public Code Repo": "https://github.com/nasa/utm-apis",
    "Description": "This repository contains the collection of OpenAPI specification APIs within the NASA's research version of the UTM System.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/utm-apis",
    "Contributors": [
      "Joseph Rios"
    ],
    "Labor_Hours": 5696,
    "Categories": [
      "Aeronautics",
      "Linear Programming",
      "Optimization"
    ],
    "Software": "utm-apis"
  },
  {
    "Update_Date": "2015-12-03",
    "Public Code Repo": "https://github.com/nasa/NASTRAN-95",
    "Description": "NASTRAN is the NASA Structural Analysis System, a finite element analysis program (FEA) completed in the early 1970's. It was the first of its kind and opened the door to computer-aided engineering. Subsections of a design can be modeled and then larger groupings of these elements can again be modeled. NASTRAN can handle elastic stability analysis, complex eigenvalues for vibration and dynamic stability analysis, dynamic response for transient and steady state loads, and random excitation, and static response to concentrated and distributed loads, thermal expansion, and enforced deformations.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/NASTRAN-95",
    "Contributors": [
      "larc-sra@mail.nasa.gov",
      "jasonduley"
    ],
    "Labor_Hours": 235200,
    "Categories": [
      "FEA",
      "Structural Analysis",
      "CAD",
      "NASTRAN"
    ],
    "Software": "NASA STRuctrual ANalysis (NASTRAN)"
  },
  {
    "Update_Date": "2015-12-02",
    "Public Code Repo": "https://github.com/nasa/GTM_DesignSim",
    "Description": "The GTM_DesignSim is a Matlab/Simulink simulation intended for design and analysis of flight control laws. It models the dynamics of a 5.5% scale model of a generic transport aircraft. The simulation was developed to allow fault accommodating control algorithms to be developed and refined in simulation before being tested on an experimental subscale model.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/GTM_DesignSim/wiki",
    "Contributors": [
      "davidecox"
    ],
    "Labor_Hours": 560,
    "Categories": [
      "Framework",
      "Toolkit",
      "Web",
      "Simulation",
      "Flight Control"
    ],
    "Software": "Flight Dynamics Simulation of a Generic Transport Model"
  },
  {
    "Update_Date": "2015-10-12",
    "Public Code Repo": "https://github.com/nasa/VICAR",
    "Description": "VICAR, which stands for Video Image Communication And Retrieval, is a general purpose image processing software system that has been developed since 1966 to digitally process multi-dimensional imaging data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://www-mipl.jpl.nasa.gov/vicar_open.html",
    "Contributors": [
      "Bob Deen"
    ],
    "Labor_Hours": 690832,
    "Categories": [
      "VICAR",
      "Image Processing",
      "Toolkit",
      "Visualization",
      "Analysis",
      "Graphics"
    ],
    "Software": "VICAR - Video Image Communication And Retrieval"
  },
  {
    "Update_Date": "2015-09-08",
    "Public Code Repo": "https://github.com/nasa/ipv6_python",
    "Description": "An extension module intended to allow more advanced manipulation of IPv6 sockets in Python (ie: flow labels)",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/ipv6_python/wiki",
    "Contributors": [
      "jishac"
    ],
    "Labor_Hours": 368,
    "Categories": [
      "Python",
      "Network",
      "Networking",
      "Sockets",
      "IP",
      "IPv6",
      "Flow Labels"
    ],
    "Software": "IPv6 Python Extension Module"
  },
  {
    "Update_Date": "2016-04-28",
    "Public Code Repo": "https://github.com/nasa/channel-emulator",
    "Description": "The Channel  Emulator (CE) is a  software-based network testing tool.  Its primary functions are providing framing services, acting as a flexible protocol gateway, and providing network emulation capabilities.",
    "License": [
      "GPLv2"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/channel-emulator/wiki",
    "Contributors": [
      "tkollar",
      "jishac"
    ],
    "License Link": "http://www.gnu.org/licenses/old-licenses/gpl-2.0.html",
    "Labor_Hours": 27584,
    "License Description": "This free and copyleft software license is an older version of GPL3.",
    "Categories": [
      "Network",
      "IP",
      "Delay",
      "Error",
      "Channel",
      "Emulation",
      "Framing",
      "AOS",
      "TM"
    ],
    "Software": "Channel Emulator"
  },
  {
    "Update_Date": "2017-06-29",
    "Public Code Repo": "https://github.com/nasa/multipath-tcp-tools",
    "Description": "A collection tools for analysis, display, and configuration of the Multipath Transmission Control Protocol (MPTCP)",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/multipath-tcp-tools",
    "Contributors": [
      "jishac"
    ],
    "License Link": "https://github.com/nasa/multipath-tcp-tools/blob/master/LICENSE",
    "Labor_Hours": 3040,
    "License Description": "NASA Open Source",
    "Categories": [
      "Network",
      "IP",
      "TCP",
      "Transmission Control Protocol",
      "Multipath",
      "MPTCP",
      "Plotting",
      "Analysis",
      "Plot",
      "Communication"
    ],
    "Software": "Multipath TCP (MPTCP) Tools, Analytics, and Configurations"
  },
  {
    "Update_Date": "2015-09-03",
    "Public Code Repo": "https://github.com/nasa/earthdata-search",
    "Description": "Earthdata Search is a web application developed by NASA EOSDIS to enable data discovery, search, comparison, visualization, and access across EOSDIS' Earth Science data holdings.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://search.earthdata.nasa.gov",
    "Contributors": [
      "Patrick Quinn",
      "Bo Sun",
      "Matthew Crouch",
      "Jeff Siarto"
    ],
    "License Link": "https://www.apache.org/licenses/LICENSE-2.0",
    "Labor_Hours": 159792,
    "License Description": "This free software license includes certain patent termination and indemnification provisions, compatible with GPL3.",
    "Categories": [
      "Earth Science",
      "EOSDIS",
      "GIBS",
      "OPeNDAP",
      "Remote Sensing",
      "Data Discovery",
      "Data Filtering",
      "Data Visualization"
    ],
    "Software": "Earthdata Search Web Application"
  },
  {
    "Update_Date": "2015-07-07",
    "Public Code Repo": "https://github.com/nasa/PyBlock",
    "Description": "This Python package will calculate beam blockage in polarimetric weather radar data using the specific differential phase (KDP) and fully self-consistent (FSC) methods of Timothy J. Lang et al. (2009; J. Atmos. Oceanic Technol.).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/PyBlock/wiki",
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 1984,
    "Categories": [
      "Earth Science",
      "Toolkit",
      "Meteorology",
      "Radar",
      "Precipitation",
      "GPM"
    ],
    "Software": "Python Polarimetric Radar Beam Blockage Calculation (PyBlock)"
  },
  {
    "Update_Date": "2015-07-07",
    "Public Code Repo": "https://github.com/nasa/DualPol",
    "Description": "Python module that facilitates precipitation retrievals (e.g., hydrometeor type, precipitation rate, precipitation mass, particle size distribution information) from polarimetric weather radar data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/DualPol/wiki",
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 592,
    "Categories": [
      "Earth Science",
      "Toolkit",
      "Meteorology",
      "Precipitation",
      "Radar",
      "GPM"
    ],
    "Software": "Python Interface to Dual-Pol Radar Algorithms (DualPol)"
  },
  {
    "Update_Date": "2015-07-07",
    "Public Code Repo": "https://github.com/nasa/SingleDop",
    "Description": "SingleDop is a software module, written in the Python programming language, that will retrieve two-dimensional low-level winds from either real or simulated Doppler weather radar data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/SingleDop/wiki",
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 912,
    "Categories": [
      "Earth Science",
      "Toolkit",
      "Meteorology",
      "Radar",
      "Doppler",
      "Winds"
    ],
    "Software": "Single Doppler Retrieval Toolkit (SingleDop)"
  },
  {
    "Update_Date": "2015-12-02",
    "Public Code Repo": "https://github.com/nasa/NASTRAN-93",
    "Description": "NASTRAN is the NASA Structural Analysis System, a finite element analysis program (FEA) completed in the early 1970's. It was the first of its kind and opened the door to computer-aided engineering. Subsections of a design can be modeled and then larger groupings of these elements can again be modeled. NASTRAN can handle elastic stability analysis, complex eigenvalues for vibration and dynamic stability analysis, dynamic response for transient and steady state loads, and random excitation, and static response to concentrated and distributed loads, thermal expansion, and enforced deformations.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/NASTRAN-93",
    "Contributors": [
      "jason.duley@nasa.gov"
    ],
    "Labor_Hours": 229792,
    "Categories": [
      "FEA",
      "Structural Analysis",
      "CAD",
      "NASTRAN"
    ],
    "Software": "NASTRAN 93"
  },
  {
    "Update_Date": "2015-06-15",
    "Public Code Repo": "https://github.com/nasa/openmctweb",
    "Description": "Open MCT is an open source and web-based mission control framework for visualization of data on desktop and mobile devices. Open MCT is designed for analysis, visualization, operation, and support of spacecraft missions. Open MCT provides an extensible plugin system allowing it to be integrated with existing ground systems, and adapted to support multiple missions as well as non-space applications.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/openmctweb",
    "Contributors": [
      "VWoeltjen",
      "larkin",
      "charlesh88",
      "brianwyu",
      "akhenry"
    ],
    "License Link": "https://www.apache.org/licenses/LICENSE-2.0",
    "Labor_Hours": 16000,
    "License Description": "This free software license includes certain patent termination and indemnification provisions, compatible with GPL3.",
    "Categories": [
      "Framework",
      "Platform",
      "Web",
      "operations"
    ],
    "Software": "Open MCT"
  },
  {
    "Update_Date": "2015-04-13",
    "Public Code Repo": "https://github.com/nasa/EADINLite",
    "Description": "This code was created to support the Distributed Engine Control task as part of the Fixed Wing Aeronautics project. The purpose of this research was to enable multiple microcontrollers to speak with eacho ther per the protocol specified in the preliminary release of EADIN BUS. EADIN BUS is a candidate for distributed control systems on aircraft engines. The primary use of this code was to assist in the modeling of small local networks which contain 16 or fewer nodes. This communication protocol differs from typical internet protocols by using a master node which distributes information between nodes through a call and response system. The RS-485 network is simplex and thus does not allow multiple nodes to talk at the same time. No time synchronization between  nodes is required for this network. These factors enable the master to request information from sensors and command actuators, one at a time. In the current implementation, no information is passed from individual nodes without first going through the master node. While other communication protocols do exist like ModbusMaster and simple-modbus, the speed of these communication protocols on the RS-485 network was not sufficient for our needs which required message send to reply receipt times of 1 millisecond. Additionally, the other protocols did not implement the same message system as specified by the preliminary documents regarding the EADIN protocol.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/EADINLite/wiki",
    "Contributors": [
      "ehariton"
    ],
    "License Link": "https://www.apache.org/licenses/LICENSE-2.0",
    "Labor_Hours": 320,
    "License Description": "This free software license includes certain patent termination and indemnification provisions, compatible with GPL3.",
    "Categories": [
      "Communication",
      "Protocol",
      "Microcontroller"
    ],
    "Software": "EADIN Communication Protocol"
  },
  {
    "Update_Date": "2015-03-16",
    "Public Code Repo": "https://github.com/apache/climate",
    "Description": "Apache Open Climate Workbench provides a Climate Science library and a suite of tools built on top of it to facilitate multi-model and multi-observation comparisons and visualizations for Climate Scientists.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://climate.apache.org/",
    "Contributors": [
      "Mr. Michael Joyce",
      "Dr. Chris A. Mattmann",
      "Mr. Paul Ramirez",
      "Dr. Lewis John McGibbney",
      "Dr. Kim Whitehall",
      "Ms. Shakeh Khudikyan",
      "Mr. Maziyar Boustani"
    ],
    "License Link": "https://www.apache.org/licenses/LICENSE-2.0",
    "Labor_Hours": 15792,
    "License Description": "This free software license includes certain patent termination and indemnification provisions, compatible with GPL3.",
    "Categories": [
      "Climate Science",
      "Climate",
      "Toolkit",
      "Web",
      "Visualization",
      "Analysis"
    ],
    "Software": "Apache Open Climate Workbench"
  },
  {
    "Update_Date": "2014-11-13",
    "Public Code Repo": "https://github.com/nasa/libSPRITE",
    "Contributors": [
      "dheater"
    ],
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/libSPRITE/wiki",
    "Labor_Hours": 87072,
    "Description": "libSPRITE is a set of libraries that have been used on several past projects including flight, technology demonstration, and simulation projects.\n\nlibSPRITE provides a diverse set of functions to attempt to simplify coding and reduce code errors. For example, libSPRITE defines engineering units as types (i.e., Meters or Radians instead of double or int). It includes an engineering unit aware math library.\n\nlibSPRITE includes a task scheduling system that abstracts pthreads and includes a publish subscribe data system for data routing.\n\nIn addition, libSPRITE includes an optional binding to the Lua scripting language for configuring the program, setting parameters, running Lua scripts within C++ tasks and even interacting with the application during runtime.",
    "Categories": [
      "framework",
      "library",
      "middleware"
    ],
    "Software": "libSPRITE"
  },
  {
    "Update_Date": "2014-08-20",
    "Public Code Repo": "https://github.com/nasa/OpenSPIFe",
    "Description": "The Scheduling and Planning Interface for Exploration (SPIFe) is an integrated planning and scheduling toolkit based on hundreds of hours of expert observation, use, and refinement of state-of-the-art planning and scheduling technology for several applications within NASA.",
    "License": [
      "ALv2",
      "EPL",
      "MPLv2",
      "LGPL"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/OpenSPIFe",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "abencomo",
      "robert-nado"
    ],
    "Labor_Hours": 254192,
    "Categories": [
      "Planning",
      "tool",
      "scheduling"
    ],
    "Software": "Open Scheduling and Planning Interface for Exploration (OpenSPIFe)"
  },
  {
    "Update_Date": "2014-10-22",
    "Public Code Repo": "https://github.com/nasa/XPlaneConnect",
    "Description": "The X-Plane Communications Toolbox (XPC) is an open source research tool used to interact with the commercial flight simulator software X-Plane. XPC allows users to control aircraft and receive state information from aircraft simulated in X-Plane using functions written in C or MATLAB in real time over the network. This research tool has been used to visualize flight paths, test control algorithms, simulate an active airspace, or generate out-the-window visuals for in-house flight simulation software.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/XPlaneConnect/wiki",
    "Contributors": [
      "teubert"
    ],
    "Labor_Hours": 7888,
    "Categories": [
      "Flight Simulation",
      "Research Tools"
    ],
    "Software": "X-Plane Communication Toolbox (XPC)"
  },
  {
    "Update_Date": "2014-08-26",
    "Public Code Repo": "https://github.com/nasa/MCT-Plugins",
    "Description": "This plug-in allows users to create satellites in MCT and track their orbits, in real-time, through various views: Satellite Orbits in 3D via the Earth View plug-in. Real-time locations on a 2D Mercator Projection (A new to MCT; created within this plug-in). All of the views that come standard with the core-MCT distribution (i.e.: MultiColumn View, Plots over time, Alpha, etc.).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa/MCT-Plugins/wiki",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "VWoeltjen",
      "harleigh",
      "DanBerrios",
      "danielpacak"
    ],
    "Labor_Hours": 11888,
    "Categories": [
      "MCT",
      "Mission Critical Technologies",
      "plug-in",
      "telemetry",
      "tracking",
      "satellite",
      "imagery"
    ],
    "Software": "MCT-Plugins"
  },
  {
    "Update_Date": "2014-08-26",
    "Public Code Repo": "https://github.com/nasa/T-MATS",
    "Description": "An open source thermodynamic modeling package completed on behalf of NASA. The Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS) package offers a MATLAB/Simulink toolbox that gives a developer the ability to create simulations of such thermodynamic systems as turbomachinery and gas turbines.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/T-MATS",
    "Languages": [
      "Matlab"
    ],
    "Contributors": [
      "chapman178",
      "cheesie67",
      "DanBerrios",
      "danielpacak"
    ],
    "Labor_Hours": 17600,
    "Categories": [
      "tool",
      "analysis",
      "modeling",
      "thermodynamics",
      "TMATS",
      "control system",
      "numerical methods",
      "Newton-Raphson",
      "Jacobian Calculation",
      "Propulsion",
      "Aircraft Engine",
      "Jet",
      "Turbofan",
      "Turbojet",
      "Compressor",
      "Turbine",
      "Nozzle",
      "Inlet",
      "open source"
    ],
    "Software": "Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS)"
  },
  {
    "Update_Date": "2014-07-10",
    "Public Code Repo": "https://github.com/nasa/mct",
    "Description": "Mission Control Technologies is a real-time monitoring and visualization platform.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/mct/wiki",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "VWoeltjen",
      "DanBerrios",
      "alpearson",
      "harleigh",
      "adamcrume",
      "kptran",
      "danielpacak",
      "dtran320",
      "phallbic",
      "bhong",
      "chriswebster"
    ],
    "Labor_Hours": 99248,
    "Categories": [
      "monitoring",
      "visualization",
      "MCT",
      "control",
      "application",
      "spacelfight",
      "mission"
    ],
    "Software": "mct"
  },
  {
    "Update_Date": "2016-03-29",
    "Public Code Repo": "https://github.com/nasa/CertWare",
    "Description": "CertWare is a collection of tools intended to support the development of safety, assurance, or dependability cases. CertWare adopts several types of structured argument models and provides an implementation of tools to support writing and verifying arguments using the chosen model. The implementations are a baseline meant to be enhanced and further integrated into development tools chains. Both textual and graphical editors are implemented. The implementation is done in Eclipse, as a large collection of Eclipse plugins and features, using several model generation tools to facilitate implementation and maintenance. See the Meta-Models section below for the kinds of models already incorporated into the workbench.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/CertWare",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "mrbcuda",
      "mrbkt"
    ],
    "Labor_Hours": 1141072,
    "Categories": [
      "CertWare",
      "safety cases",
      "project management",
      "planning",
      "metrics"
    ],
    "Software": "CertWare Safety Case Workbench Software"
  },
  {
    "Update_Date": "2014-07-30",
    "Public Code Repo": "https://github.com/nasa/SCRD",
    "Description": "The SCRD is a flexible system that can be easily updated or modified for ongoing legislative mandates and is able to provide robust accounting tools for posting and adjusting payments.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Center of Excellence for Collaboration",
    "External Link": "https://github.com/nasa/SCRD",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "rsial2"
    ],
    "Labor_Hours": 197552,
    "Categories": [
      "repository",
      "deposits",
      "re-deposits",
      "payment",
      "tracking"
    ],
    "Software": "SCRD"
  },
  {
    "Update_Date": "2014-06-17",
    "Public Code Repo": "https://github.com/nasa/NASA-3D-Resources",
    "Description": "Here you'll find a growing collection of 3D models, textures, and images from inside NSA. All of these resources are free to download and use.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/NASA-3D-Resources",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "jasonduley"
    ],
    "Labor_Hours": 48,
    "Categories": [
      "repository",
      "3D",
      "models",
      "imagery",
      "images",
      "printing"
    ],
    "Software": "NASA-3D-Resources"
  },
  {
    "Update_Date": "2014-09-17",
    "Public Code Repo": "https://github.com/nasa/digital-strategy",
    "Description": "Machine-readable schema for NASA's response to the president's digital strategy.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/digital-strategy",
    "Languages": [
      "CSS"
    ],
    "Contributors": [
      "jasonduley",
      "seanherron"
    ],
    "Labor_Hours": 1168,
    "Categories": [
      "repository",
      "citizen",
      "developer",
      "digital strategy"
    ],
    "Software": "Digital-Strategy"
  },
  {
    "Update_Date": "2014-05-13",
    "Public Code Repo": "https://github.com/nasa/eefs",
    "Description": "This is the EEPROM File System Project (EEFS). It is a simple file system for memory devices such as EEPROM, RAM, ROM, etc. t can be used as a simple file system to boot an embedded system running vxWorks, RTEMS, or even no operating system. An EEFS image can be created on the development host, providing a single file to burn into an image that is loaded on a target.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa/eefs/",
    "Languages": [
      "C"
    ],
    "Contributors": [
      "acudmore"
    ],
    "Labor_Hours": 3552,
    "Categories": [
      "file system",
      "eefs",
      "EEPROM File System Project"
    ],
    "Software": "EEPROM File System"
  },
  {
    "Update_Date": "2014-05-05",
    "Public Code Repo": "https://github.com/nasa/osal",
    "Description": "This distribution contains:The OS Abstraction Layer Library, Tests and example applications for the following targets: Generic PPC running vxWorks 6.x (Tested on vxWorks 6.4), Axiom m5235BCC Coldfire Evaluation board running the RTEMS 4.10 Operating System, A PC running Linux (Tested on CentOS 5.x and 6.x 32 bit), The sparc/sis simulator running RTEMS 4.10.2, A directory structure and makefiles to manage it all.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/nasa/osal",
    "Languages": [
      "C"
    ],
    "Contributors": [
      "acudmore"
    ],
    "Labor_Hours": 27296,
    "Categories": [
      "operating system abstraction layer library",
      "application",
      "flight software systems"
    ],
    "Software": "Operating System Abstraction Layer (OSAL)"
  },
  {
    "Update_Date": "2014-04-07",
    "Public Code Repo": "https://github.com/nasa/CoECI-CMS-Healthcare-Fraud-Prevention",
    "Description": "Code from the Healthcare Fraud Prevention Partnership (HFPP) through United States Centers for Medicare & Medicaid Services (CMS) challenge in collaboration with NASA's Center of Excellence for Collaboration (CoECI), Harvard, and TopCoder developed software that supports a data exchange network that enables healthcare insurance-paying entities in both the public and private sector to safely and securely share information for purposes of prevention and detection of fraud, waste and abuse across partners.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Center of Excellence for Collaboration",
    "External Link": "https://github.com/nasa/CoECI-CMS-Healthcare-Fraud-Prevention",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "nasarader",
      "rsial2"
    ],
    "Labor_Hours": 47280,
    "Categories": [
      "HFPP",
      "Medicare & Medicaid Services",
      "fraud prevention"
    ],
    "Software": "CoECI-CMS-Healthcare-Fraud-Prevention"
  },
  {
    "Update_Date": "2014-01-14",
    "Public Code Repo": "https://github.com/nasa/coeci-cms-mpsp",
    "Description": "This is the Medicaid Provider Enrollment Screening Portal Project multi-state, multi-program provider screening application capable of risk scoring, credentialing validation, identify authentication, and sanction checks, that lowered the burden on providers and reduced administrative and infrastructure expenses for states and federal programs.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Center of Excellence for Collaboration",
    "External Link": "https://github.com/nasa/coeci-cms-mpsp",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "cyberjag",
      "alamora",
      "ksirmons"
    ],
    "Labor_Hours": 335984,
    "Categories": [
      "medicaid",
      "enrollment",
      "screening"
    ],
    "Software": "coeci-cms-mpsp"
  },
  {
    "Update_Date": "2013-12-31",
    "Public Code Repo": "https://github.com/nasa/cash",
    "Description": "Cassini Structured Homepages uses LDAP authorization to provide a security layer to webpage content.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Center of Excellence for Collaboration",
    "External Link": "https://github.com/nasa/cash",
    "Languages": [
      "Shell"
    ],
    "Contributors": [
      "dlconner"
    ],
    "Labor_Hours": 944,
    "Categories": [
      "Cassini",
      "security"
    ],
    "Software": "cash"
  },
  {
    "Update_Date": "2013-12-31",
    "Public Code Repo": "https://github.com/nasa/autodoc",
    "Description": "The Automatic Documentation software creates Microsoft Documents automatically using Text and Template files.",
    "License": [
      "ASL"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/autodoc",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "dlconner"
    ],
    "Labor_Hours": 640,
    "Categories": [
      "document",
      "templates",
      "application",
      "automation"
    ],
    "Software": "autodoc"
  },
  {
    "Update_Date": "2013-12-03",
    "Public Code Repo": "https://github.com/NASA-Tournament-Lab/CoECI-USAID-Atrocity-Prevention-Model",
    "Description": "Code from the United States Agency for International Development (USAID) and Humanity United (HU) challenge for Atrocity Prevention Modeling in collaboration with NASA's Center of Excellence for Collaboration (CoECI). This package contains the top 5 solutions submitted for the 'Tech Challenge for Atrocity Prevention' competition.",
    "License": [
      "ALv2"
    ],
    "Instructional Material": "https://github.com/nasa/CoECI-USAID-Atrocity-Prevention-Model/blob/master/readme",
    "NASA Center": "Center of Excellence for Collaboration",
    "External Link": "https://community.topcoder.com/longcontest/?module=ViewProblemStatement&rd=15761&pm=12634",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "rsial2",
      "AetBoston",
      "nasarader"
    ],
    "Labor_Hours": 2944,
    "Categories": [
      "Analytics",
      "algorithm",
      "data mining",
      "prediction"
    ],
    "Software": "COECI-USAID-Atrocity-Prevention-Model"
  },
  {
    "Update_Date": "2013-11-06",
    "Public Code Repo": "https://github.com/NASA-Tournament-Lab/coeci-cms-mpsp",
    "Description": "Code from the United States Centers for Medicare & Medicaid Services (CMS) challenge in collaboration with NASA's Center of Excellence for Collaboration (CoECI), Harvard, and TopCoder developed an iPhone app and reporting web application used to track and compile transfers of value (e.g. gift, meal, speaking fee) from industry manufacturers (e.g. pharmaceutical companies) to physicians.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Center of Excellence for Collaboration",
    "External Link": "https://github.com/nasa/CoECI-CMS-Open-Payment",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "nasarader"
    ],
    "Labor_Hours": 335984,
    "Categories": [
      "Analytics",
      "reporting",
      "tracking",
      "application"
    ],
    "Software": "CoECI-CMS-Open-Payment"
  },
  {
    "Update_Date": "2013-09-28",
    "Public Code Repo": "https://github.com/nasa/39A",
    "Description": "39A is the software used to power the 2013 International Space Apps Challenge, a global hackathon focusing on space technology and issues.",
    "License": [
      "ALv2"
    ],
    "Instructional Material": "https://github.com/nasa/39A/blob/master/README.rst",
    "NASA Center": "Kennedy Space Center",
    "External Link": "https://github.com/nasa/39A",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "skytland"
    ],
    "Labor_Hours": 24496,
    "Categories": [
      "software",
      "International Space Apps Challenge",
      "2013",
      "operations"
    ],
    "Software": "39A"
  },
  {
    "Update_Date": "2013-09-03",
    "Public Code Repo": "https://github.com/nasa/VADER",
    "Description": "This repository consists of the various scripts required to make our VADER system work. The variable emissivity radiator aerogel insulation blanket dual zone thermal control experiment suite for responsive space (STP-H3-VADER) investigation tests a variable emissivity radiator and a new form of multilayer insulation that uses Aerogel as the thermal isolator in order to protect the spacecraft from the harsh extremes of the space environment. The Aerogel material provides a more durable, lighter and cheaper alternative to traditional spacecraft thermal blankets. The use of this material could reduce the costs related to spaceflight by reducing the required spacecraft mass and increasing design efficiency.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/VADER/blob/master/README.txt",
    "NASA Center": "Johnson Space Center",
    "External Link": "https://github.com/nasa/VADER/wiki",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "pmosbach",
      "ecabuhay",
      "jdtunage"
    ],
    "Labor_Hours": 43184,
    "Categories": [
      "software",
      "operations",
      "VADER"
    ],
    "Software": "VADER"
  },
  {
    "Update_Date": "2013-06-14",
    "Public Code Repo": "https://github.com/nasa/data.nasa.gov",
    "Description": "This is the source code for the WordPress theme that powers data.nasa.gov. Data.nasa.gov is NASA's flagship platform for sharing information about the vast data we collect and store over 100 years of U.S. aeronautics and space data. Developers, technologists, entrepreneurs, citizen scientists, and many others can contribute directly to the exploration of space and Earth by helping to create new ways of looking at this data.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/data.nasa.gov/blob/master/README.md",
    "NASA Center": "Headquarters",
    "External Link": "https://github.com/nasa/data.nasa.gov",
    "Languages": [
      "PHP"
    ],
    "Contributors": [
      "seanherron"
    ],
    "Labor_Hours": 5584,
    "Categories": [
      "software",
      "operations",
      "open source",
      "datasets",
      "NASA"
    ],
    "Software": "data.nasa.gov"
  },
  {
    "Update_Date": "2016-07-28",
    "Public Code Repo": "https://github.com/nasa/code.nasa.gov",
    "Description": "This is the source code for the WordPress theme that powers code.nasa.gov. Code.nasa.gov expands NASA's open source activities, surfaces existing activities, and guides internal and external groups in open development, release, and contribution. In doing so, NASA hopes to lower barriers to building open technology in partnership with the public.",
    "License": [
      "ALv2"
    ],
    "Instructional Material": "https://github.com/nasa/code.nasa.gov/blob/master/README.md",
    "NASA Center": "Headquarters",
    "External Link": "https://github.com/nasa/code.nasa.gov",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "seanherron"
    ],
    "Labor_Hours": 5456,
    "Categories": [
      "software",
      "operations",
      "open source",
      "code",
      "NASA"
    ],
    "Software": "code.nasa.gov"
  },
  {
    "Update_Date": "2013-01-13",
    "Public Code Repo": "https://github.com/nasa/OpenVSP",
    "Description": "OpenVSP is a parametric aircraft geometry tool that allows the user to create a 3D model of an aircraft defined by common engineering parameters.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/OpenVSP/blob/master/README",
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/OpenVSP",
    "Languages": [
      "C++"
    ],
    "Contributors": [
      "ramcdona"
    ],
    "Labor_Hours": 87968,
    "Categories": [
      "repository",
      "tool",
      "open source",
      "3D model",
      "NASA"
    ],
    "Software": "Vehicle Sketch Pad (VSP)"
  },
  {
    "Update_Date": "2011-12-28",
    "Public Code Repo": "https://github.com/nasa/OpenMDAO-Framework",
    "Description": "OpenMDAO is an open-source Multidisciplinary Design Analysis and Optimization (MDAO) framework, written in Python. It helps users solve complex problems by allowing them to link together analysis codes from multiple disciplines at multiple levels of fidelity. The development effort for OpenMDAO is being led out of the NASA Glenn Research Center in the MDAO branch. The development effort is being funded by the Fundamental Aeronautic Program, Subsonic Fixe Wing project. The ultimate goal is to provide a flexible common analysis platform that can be shared between industry, academia, and government.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/OpenMDAO-Framework/blob/dev/README.txt",
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/OpenMDAO-Framework",
    "Languages": [
      "Python"
    ],
    "Contributors": [
      "naylor-b",
      "Kenneth-T-Moore",
      "justinopenmdao",
      "swryan",
      "pziegfeld",
      "setowns1",
      "JustinSGray",
      "cnkavanaugh",
      "hschilling",
      "kmarsteller",
      "eshendricks"
    ],
    "Labor_Hours": 102336,
    "Categories": [
      "analytics",
      "code",
      "open source"
    ],
    "Software": "Open MDAO Version 0.1: The Next Generation Multidisciplinary Design Analysis and Optimization (MDAO) Open Source Framework"
  },
  {
    "Update_Date": "2011-12-21",
    "Public Code Repo": "https://github.com/nasa/StereoPipeline",
    "Description": "The NASA Ames Stereo Pipeline is a suite of automated geodesy & stereogrammetry tools designed for processing planetary imagery captured from orbiting and landed robotic explorers on other planets.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/StereoPipeline/blob/master/README",
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/StereoPipeline",
    "Languages": [
      "C++"
    ],
    "Contributors": [
      "zmoratto",
      "broxtronix",
      "novas0x2a",
      "khusmann",
      "anefian",
      "trey0",
      "mstyer",
      "rbeyer",
      "mdhancher",
      "harguess",
      "saravkin"
    ],
    "Labor_Hours": 31504,
    "Categories": [
      "NGT",
      "Neo-Geography Toolkit",
      "NASA",
      "open source",
      "geodesy",
      "stereogrammetry",
      "imagery"
    ],
    "Software": "StereoPipeline"
  },
  {
    "Update_Date": "2011-12-23",
    "Public Code Repo": "https://github.com/nasa/World-Wind-Java",
    "Description": "World Wind, an open source 3D interactive world viewer, was created by NASA's Learning Technologies project, and released in mid-2004. It is now developed by NASA staff and open source community developers.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/World-Wind-Java/blob/master/README.txt",
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/World-Wind-Java",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "tgaskins"
    ],
    "Labor_Hours": 944864,
    "Categories": [
      "3D",
      "SDK",
      "imagery"
    ],
    "Software": "Java World Wind"
  },
  {
    "Update_Date": "2011-11-29",
    "Public Code Repo": "https://github.com/nasa/visionworkbench",
    "Description": "The NASA Vision Workbench is a general purpose image processing and computer vision library developed by the Autonomous Systems and Robotics (ASR) Area in the Intelligent Systems Division at the NASA Ames Research Center.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/visionworkbench/blob/master/README",
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/visionworkbench",
    "Languages": [
      "C++"
    ],
    "Contributors": [
      "zmoratto",
      "broxtronix",
      "novas0x2a",
      "khusmann",
      "anefian",
      "trey0",
      "mstyer",
      "mdhancher",
      "harguess",
      "iansaxton",
      "radishman",
      "ekpneo",
      "mallan",
      "iceboundflame"
    ],
    "Labor_Hours": 93856,
    "Categories": [
      "image processing",
      "imagery",
      "computer vision library"
    ],
    "Software": "NASA Vision Workbench (VW), Version 3"
  },
  {
    "Update_Date": "2011-06-30",
    "Public Code Repo": "https://github.com/nasa/NASA-Space-Weather-Media-Viewer",
    "Description": "Space weather media viewer.",
    "License": [
      "NASA Open Source"
    ],
    "Instructional Material": "https://github.com/nasa/NASA-Space-Weather-Media-Viewer/blob/master/README",
    "NASA Center": "Ames Research Center",
    "External Link": "https://play.google.com/store/apps/details?id=air.NasaSpaceViewer",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "MatthewValverde"
    ],
    "Labor_Hours": 6480,
    "Categories": [
      "media",
      "viewer",
      "imagery",
      "space",
      "weather",
      "Google",
      "Android"
    ],
    "Software": "NASA-Space-Weather-Media-Viewer"
  },
  {
    "Update_Date": "2014-09-10",
    "Public Code Repo": "https://sourceforge.net/projects/tascnasa",
    "Description": "Tool for Analysis of Surface Cracks (TASC) is a computer program created in MATLAB to enable easy computation of nonlinear J-integral solutions for surface cracked plates in tension by accessing and interpolating between the 600 nonlinear surface crack solutions documented in NASA/TP-2011-217480. The only required inputs are the surface crack dimensions (2c and a), plate cross-section dimensions (W and B), and linear plus power law material properties of elastic modulus, yield strength, and strain hardening coefficient. With the geometry and material parameters entered, TASC interpolates to the appropriate J(Î¦) vs. crack mouth opening displacement (CMOD) and far-field tension stress, Ïƒ, vs. CMOD solution, providing the full solution as CMOD ranges from zero out to the CMOD limit of the solution space for the given input parameters. TASC was developed by the Material and Processes Laboratory at NASA's Marshall Space Flight Center.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://sourceforge.net/projects/tascnasa/",
    "Languages": [
      "MATLAB"
    ],
    "Contributors": [
      "pa-allen"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "technology",
      "tool",
      "analysis",
      "surface",
      "cracks",
      "displacement"
    ],
    "Software": "Tool for Analysis of Surface Cracks (TASC)"
  },
  {
    "Update_Date": "2018-02-04",
    "Public Code Repo": "http://oodt.apache.org/",
    "Description": "Apache OODT is NASA's first project to be stewarded at the open source Apache Software Foundation. OODT is middleware for information integration and for science data processing and retrieval. It provides components including file management, workflow management, resource management, and automated remote data acquisition, file crawling and ingestion, and science algorithm wrapping and integration.",
    "License": [
      "ALv2"
    ],
    "Component modules": [
      "agility",
      "app",
      "balance",
      "catalog",
      "cli",
      "commons",
      "core",
      "crawler",
      "curator",
      "filemgr",
      "grid",
      "metadata",
      "mvn",
      "opendapps",
      "pcs",
      "pge",
      "product",
      "profile",
      "protocol",
      "pushpull",
      "resource",
      "sso",
      "tools",
      "webapp",
      "workflow",
      "xmlps",
      "xmlquery"
    ],
    "Industry": [
      "Federally Funded Research and Development Centre"
    ],
    "Instructional Material": "https://cwiki.apache.org/confluence/display/OODT/Home",
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://oodt.apache.org",
    "Languages": [
      "Java",
      "Python"
    ],
    "Contributors": [
      "Dr. Chris A. Mattmann",
      "Mr. Paul Ramirez",
      "Mr. Maziyar Boustani",
      "Ms. Shakeh Khudikyan",
      "Mr. Mike Joyce",
      "Mr. Rishi Verma",
      "Dr. Lewis John McGibbney",
      "Mr. Tyler Palsulich"
    ],
    "Platform Requirements": [
      "*nix Environment"
    ],
    "Labor_Hours": 124368,
    "Component module URLs": [
      "http://svn.apache.org/repos/asf/oodt/trunk/agility/",
      "http://svn.apache.org/repos/asf/oodt/trunk/app/",
      "http://svn.apache.org/repos/asf/oodt/trunk/balance/",
      "http://svn.apache.org/repos/asf/oodt/trunk/catalog/",
      "http://svn.apache.org/repos/asf/oodt/trunk/cli/",
      "http://svn.apache.org/repos/asf/oodt/trunk/commons/",
      "http://svn.apache.org/repos/asf/oodt/trunk/core/",
      "http://svn.apache.org/repos/asf/oodt/trunk/crawler/",
      "http://svn.apache.org/repos/asf/oodt/trunk/curator/",
      "http://svn.apache.org/repos/asf/oodt/trunk/filemgr/",
      "http://svn.apache.org/repos/asf/oodt/trunk/grid/",
      "http://svn.apache.org/repos/asf/oodt/trunk/metadata/",
      "http://svn.apache.org/repos/asf/oodt/trunk/mvn/",
      "http://svn.apache.org/repos/asf/oodt/trunk/opendapps/",
      "http://svn.apache.org/repos/asf/oodt/trunk/pcs/",
      "http://svn.apache.org/repos/asf/oodt/trunk/pge/",
      "http://svn.apache.org/repos/asf/oodt/trunk/product/",
      "http://svn.apache.org/repos/asf/oodt/trunk/profile/",
      "http://svn.apache.org/repos/asf/oodt/trunk/protocol/",
      "http://svn.apache.org/repos/asf/oodt/trunk/pushpull/",
      "http://svn.apache.org/repos/asf/oodt/trunk/resource/",
      "http://svn.apache.org/repos/asf/oodt/trunk/sso/",
      "http://svn.apache.org/repos/asf/oodt/trunk/tools/",
      "http://svn.apache.org/repos/asf/oodt/trunk/webapp/",
      "http://svn.apache.org/repos/asf/oodt/trunk/workflow/",
      "http://svn.apache.org/repos/asf/oodt/trunk/xmlps/",
      "http://svn.apache.org/repos/asf/oodt/trunk/xmlquery/"
    ],
    "Categories": [
      "file",
      "management",
      "workflow",
      "resource",
      "automated",
      "remote data",
      "acquisition",
      "file",
      "crawling",
      "ingestion",
      "science",
      "algorithm",
      "wrapping",
      "integration"
    ],
    "Software": "Apache OODT"
  },
  {
    "Update_Date": "2011-11-20",
    "Public Code Repo": "https://sourceforge.net/projects/datacasting/files/latest/download",
    "Description": "Datacasting is a RSS publish-subscribe method for delivering Earth Science data. A Feed Reader provides feed filtering, data download, and the ability to mash-up data with information related to geophysical events.",
    "License": [
      "BSD"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://datacasting.jpl.nasa.gov/",
    "Languages": [
      "XML"
    ],
    "Contributors": [
      "jplsr"
    ],
    "Labor_Hours": 30,
    "Categories": [
      "datacasting",
      "RSS",
      "data",
      "filter",
      "geophysical events",
      "geophysics",
      "earth science"
    ],
    "Software": "Earth Science Datacasting"
  },
  {
    "Update_Date": "2014-07-08",
    "Public Code Repo": "https://sourceforge.net/projects/ion-dtn/files/latest/download",
    "Description": "The Interplanetary Overlay Network (ION) software distribution is an implementation of Delay-Tolerant Networking (DTN) architecture as described in Internet RFC 4838. It includes implementations of the DTN Bundle Protocol, the Licklider Transmission Protocol, and two CCSDS application protocols that have been adapted to run over the BP/LTP stack: the CCSDS File Delivery Protocol and Asynchronous Message Service.",
    "License": [
      "BSD"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://sourceforge.net/projects/ion-dtn/",
    "Languages": [
      "XML"
    ],
    "Contributors": [
      "jplsr",
      "hkruse",
      "sburleig",
      "shawnostermann"
    ],
    "Labor_Hours": 372512,
    "Categories": [
      "software",
      "distribution",
      "network",
      "interplanetary overlay network",
      "ION",
      "earth science"
    ],
    "Software": "Interplanetary Overlay Network (ION) Software Distribution (DTN)"
  },
  {
    "Update_Date": "2011-12-05",
    "Public Code Repo": "https://sourceforge.net/projects/dptoolkit/files/latest/download",
    "Description": "The Data Productivity Toolkit is a collection of linux command-line tools designed to facilitate the analysis of text-based data sets. Modeled after the general linux pipeline tools such as awk, grep, and sed, the kit provides powerful tools for selecting/combining data, performing statistics, and visualizing results. The tools are all written in python and in many instances provide a command-line API to basic python and numpy/scipy/matplotlib routines.",
    "License": [
      "BSD"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://sourceforge.net/projects/dptoolkit/",
    "Languages": [
      "Python"
    ],
    "Contributors": [
      "jplsr"
    ],
    "Labor_Hours": 80,
    "Categories": [
      "data",
      "productivity",
      "toolkit",
      "data collection"
    ],
    "Software": "Data Productivity Toolkit"
  },
  {
    "Update_Date": "2014-09-08",
    "Public Code Repo": "https://github.com/sunpy/sunpy",
    "Description": "The SunPy project is an effort to create an open-source software library for solar physics using the Python programming language. More information at http://www.sunpy.org.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://www.sunpy.org",
    "Languages": [
      "Python"
    ],
    "Contributors": [
      "segfaulthunter",
      "Cadair",
      "khughitt",
      "ehsteve",
      "wafels",
      "derdon",
      "ayshih",
      "DanRyanIrish",
      "aringlis",
      "rhewett",
      "drewleonard42",
      "kaichogami",
      "dpshelio",
      "VaticanCameos",
      "nabobalis",
      "mattearnshaw",
      "gunner272",
      "amras1",
      "CyclingNinja",
      "ndchorley",
      "quintusdias",
      "mjm159",
      "rubendv",
      "rajul-iitkgp",
      "Hypnus1803",
      "ankit-maverick",
      "ToyDragon",
      "larrymanley",
      "JordanBallew",
      "transientlunatic",
      "mateoi",
      "examon",
      "astrofrog",
      "bmampaey",
      "jaylenw",
      "airyens",
      "freekv"
    ],
    "Labor_Hours": 19840,
    "Categories": [
      "libary",
      "repository",
      "solar",
      "physics"
    ],
    "Software": "SunPy"
  },
  {
    "Update_Date": "2010-11-19",
    "Public Code Repo": "https://sourceforge.net/projects/save-ha",
    "Description": "Save is a lightweight framework for creating high availability systems. Save manages IP addresses shared between multiple servers with the same function and monitors the health of those servers to determine which should be actively servicing requests at any given time. Save has additional features to facilitate the administration of high availability systems. Synchronization mechanisms allow configuration files to be kept consistent between systems as well as allowing commands to be executed across all servers of a particular type. Archival mechanisms provide automatic version control of configuration files to aid in recovery in case of errant configuration. Validation mechanisms allow configuration files to be automatically checked for correctness before they are installed on all peer servers.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://save-ha.sourceforge.net",
    "Languages": [
      "Perl"
    ],
    "Contributors": [
      "pkolano"
    ],
    "Labor_Hours": 224,
    "Categories": [
      "framework",
      "health",
      "systems",
      "administration",
      "archive",
      "validation",
      "high availability"
    ],
    "Software": "Synchronization, Archival, Validation, and IP Exchange (Save)"
  },
  {
    "Update_Date": "2013-05-01",
    "Public Code Repo": "https://sourceforge.net/projects/mutil/files/latest/download",
    "Description": "Mutil is a set of standard utilities that employ multiple types of parallelism and other optimizations to achieve maximum performance on modern file systems. Multi-threading is used to ensure that nodes are kept as busy as possible. Double buffering allows individual operations within a single task to be overlapped using asynchronous I/O. Multi-node cooperation allows different nodes to take part in the same task. Split file processing allows multiple threads to operate concurrently on the same file. Finally, additional optimizations such as buffer management help eliminate other bottlenecks that can reduce performance. Mutil currently includes drop-in replacements for cp and md5sum from GNU coreutils, which have achieved 10/30x rates on one/many nodes.",
    "License": [
      "GPLv3"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://mutil.sourceforge.net",
    "Languages": [
      "Perl"
    ],
    "Contributors": [
      "pkolano"
    ],
    "License Link": "http://www.gnu.org/licenses/gpl.html",
    "Labor_Hours": 16,
    "License Description": "The latest version of the GNU GPL, this is a free software and copyleft license.",
    "Categories": [
      "file",
      "processing",
      "utilities",
      "nodes",
      "multi-thread",
      "optimization",
      "parallelism"
    ],
    "Software": "Multi-Threaded Multi-Node Utilities (Mutil)"
  },
  {
    "Update_Date": "2012-09-06",
    "Public Code Repo": "https://sourceforge.net/projects/mesh/files/latest/download",
    "Description": "Mesh is a secure, lightweight grid middleware that is based on the addition of a single sign-on capability to the built-in public key authentication mechanism of SSH using system call interposition. Resources may be added to a Mesh-based grid in a matter of minutes using just five small files and two environment variable settings. Mesh adheres to fundamental security principles and was designed to be compatible with strong security mechanisms including two-factor authentication, SSH bastions, and restrictive firewalls. Mesh uses a remote command model, which is based on stock SSH clients and the syntax and commands already understood by users, thus requires no additional software or knowledge to utilize effectively. Several existing services have been integrated with Mesh to provide resource discovery and query, high performance file transfer, and job management.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://mesh.sourceforge.net",
    "Languages": [
      "Perl",
      "C"
    ],
    "Contributors": [
      "pkolano"
    ],
    "Labor_Hours": 86005,
    "Categories": [
      "middleware",
      "ssh",
      "host"
    ],
    "Software": "Middleware Using Existing SSH Hosts (MESH)"
  },
  {
    "Update_Date": "2013-05-13",
    "Public Code Repo": "https://sourceforge.net/projects/ballast/files/latest/download",
    "Description": "Ballast is a tool for balancing user load across SSH servers based on configurable criteria such as CPU load and system availability. Ballast is invoked as part of the SSH login process, hence has access to the user name, which is not available in traditional load balancers. This gives ballast the unique ability to perform user-specific load balancing, which has several benefits including separating users who have historically generated high loads and providing a common login interface to users who may be separated based on other criteria such as system accessibility. Ballast includes a simple client, a lightweight data server, and a data collection agent.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://ballast.sourceforge.net",
    "Languages": [
      "Perl",
      "C"
    ],
    "Contributors": [
      "pkolano"
    ],
    "Labor_Hours": 688,
    "Categories": [
      "ballast",
      "ssh",
      "host",
      "clustering"
    ],
    "Software": "Balancing Load Across Systems (Ballast)"
  },
  {
    "Update_Date": "2014-08-12",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/LHD/LHD.zip",
    "Description": "Software implementation of JPL published paper for performing lossless hyper-spectral and milti-spectral data compression. The implementation was executed to confirm the results obtained by JPL independently. Implemented JPL published paper and its revised version presented to the CCSDS hyper/multi-spectral data compression working group. The implementation follows every step listed in the relevant papers and usess C-code for simplicity. The software takes 3-dimensional test data provided by the CCSDS working group and created predictor error results that can be further encoded with other known techniques.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/LHD",
    "Languages": [
      "C"
    ],
    "Contributors": [
      "pkolano"
    ],
    "Labor_Hours": 192,
    "Categories": [
      "lossless",
      "hyper-spectral",
      "milti-spectral",
      "data",
      "compression",
      "CCSDS"
    ],
    "Software": "Lossless Hyper-multi-spectral data compression software"
  },
  {
    "Update_Date": "2013-03-08",
    "Public Code Repo": "https://sourceforge.net/projects/s4pm/files/latest/download",
    "Description": "The Simple, Scalable, Script-based Science Processor for Measurements (S4PM) is a system for highly automated processing of science data, scalable up to large processing systems and scalable down to small, special-purpose processing strings.",
    "License": [
      "NASA Open Source"
    ],
    "Industry": [
      "cvdds"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/s4pm",
    "Languages": [
      "Perl"
    ],
    "Contributors": [
      "btrivedi",
      "clynnes",
      "sberrick"
    ],
    "Labor_Hours": 14608,
    "Categories": [
      "science",
      "process",
      "automation",
      "data",
      "simple",
      "scalable",
      "script-based",
      "measurements"
    ],
    "Software": "Simple, Scalable, Script-based Science Processor for Measurements (S4PM)"
  },
  {
    "Update_Date": "2014-09-16",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/G-SDSU/G-SDSU-core.tar.gz",
    "Description": "G-SDSU core modules enables users to insert their own satellite simulator to convert model-simulated atmosphere states to various types of satellite observable signals (radiance or backscattering signals), and to compare such data with comparable measurements collected by corresponding satellite level-1 measurement.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/G-SDSU/index.php",
    "Languages": [
      "C"
    ],
    "Contributors": [
      "opensource@gsfc.nasa.gov"
    ],
    "Labor_Hours": 3344,
    "Categories": [
      "modeling",
      "GPM",
      "satellite",
      "mission",
      "observation",
      "atmoshpere",
      "algorithm",
      "measurements"
    ],
    "Software": "Goddard Satellite Data Simulation Unit (G-SDSU)"
  },
  {
    "Update_Date": "2013-04-24",
    "Public Code Repo": "https://sourceforge.net/projects/visbard/files/latest/download",
    "Description": "ViSBARD (Visual System for Browsing, Analysis, and Retrieval of Data) is an interactive visualization and analysis tool for space physics data. It provides an integrated 3-D/2-D environment to analyze measurements across many spacecraft and MHD models.",
    "License": [
      "ALv2",
      "GPLv3"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://spdf.gsfc.nasa.gov/research/visualization/visbard/index.html",
    "Languages": [
      "C",
      "Java"
    ],
    "Contributors": [
      "boller8"
    ],
    "Labor_Hours": 325264,
    "Categories": [
      "visual",
      "system",
      "browse",
      "analysis",
      "retrieval",
      "data",
      "tool",
      "space",
      "physics",
      "MHD",
      "models"
    ],
    "Software": "Visual System for Browsing, Analysis and Retrieval of Data (ViSBARD)"
  },
  {
    "Update_Date": "2013-04-24",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/GSRadar/GS-Radar.tar",
    "Description": "This software enables easy comparison of ground- and space-based radar observations. The software was initially designed to compare ground radar reflectivity from operational, ground-based, S- and C-band meteorological radars with comparable measurements from the Tropical Rainfall Measuring Mission satellite's Precipitation Radar instrument. The software is also applicable to other ground-based and space-based radars. The software allows both ground and space based radar data to be compared for validation purposes.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/GSRadar/index.php",
    "Languages": [
      "C"
    ],
    "Contributors": [
      "kenneth.r.morris@nasa.gov",
      "mathew.r.schwaller@nasa.gov"
    ],
    "Labor_Hours": 6608,
    "Categories": [
      "ground",
      "space",
      "radar",
      "validation",
      "volume",
      "matching",
      "comparison",
      "software"
    ],
    "Software": "Ground and space radar volume matching and comparison software"
  },
  {
    "Update_Date": "2014-09-16",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/GEOS-5/GEOSagcm-Eros_7_24.tar.gz",
    "Description": "The Global Modeling and Assimilation Office (GMAO) has delivered the next generation general circulation model, GEOS-5. This system represents a new paradigm for systems development, in that GEOS-5 has been developed with the Earth System Modeling Framework (ESMF) for its internal architecture using the MAPL software toolkit developed for GEOS-5.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/GEOS-5/index.php",
    "Languages": [
      "C"
    ],
    "Contributors": [
      "Steven Pawson"
    ],
    "Labor_Hours": 239968,
    "Categories": [
      "Stand-alone",
      "Atmosphere",
      "Land",
      "Ocean",
      "Coupled",
      "CGM",
      "Climate",
      "Biology",
      "Model",
      "Numerical",
      "Weather",
      "Prediction",
      "Experimental",
      "Seasonal",
      "Forecasting",
      "GEOS-5",
      "software",
      "earth science",
      "circulation",
      "analysis"
    ],
    "Software": "GEOS-5 GCM Modeling Software"
  },
  {
    "Update_Date": "2016-10-26",
    "Public Code Repo": "https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2016a/files/latest/download",
    "Description": "The General Mission Analysis Tool (GMAT), developed at the Goddard Space Flight Center, is the worldâ€™s only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://gmat.gsfc.nasa.gov/",
    "Languages": [
      "C++"
    ],
    "Contributors": [
      "stevenhughes"
    ],
    "Labor_Hours": 33152,
    "Categories": [
      "Simulations",
      "visualization",
      "mathematics",
      "physics",
      "mission",
      "planning",
      "tool"
    ],
    "Software": "General Mission Analysis Tool (GMAT R2016a)"
  },
  {
    "Update_Date": "2015-11-02",
    "Public Code Repo": "https://sourceforge.net/projects/gmat/files/GMAT/GMAT-R2015a/files/latest/download",
    "Description": "The General Mission Analysis Tool (GMAT), developed at the Goddard Space Flight Center, is the worldâ€™s only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://gmat.gsfc.nasa.gov/",
    "Languages": [
      "C++"
    ],
    "Contributors": [
      "djcinsb",
      "jjkparker",
      "qure0013",
      "space_egd",
      "stevenhughes",
      "wendys-dev",
      "dcooley",
      "dktkgks",
      "hykim9501",
      "jbez",
      "lindajun",
      "mhkim0522",
      "shawnhoffman",
      "tgrubb",
      "tnguye2"
    ],
    "Labor_Hours": 438592,
    "Categories": [
      "Simulations",
      "visualization",
      "mathematics",
      "physics",
      "mission",
      "planning",
      "tool"
    ],
    "Software": "General Mission Analysis Tool (GMAT R2015a)"
  },
  {
    "Update_Date": "2014-05-13",
    "Public Code Repo": "https://sourceforge.net/projects/gmsec/files/latest/download",
    "Description": "The Goddard Mission Services Evolution Center (GMSEC) program was established in 2001 to coordinate ground and flight data systems development and services at GSFC with the ultimate goal to efficiently support current and future GSFC mission services. The GMSEC architecture is a ground systems architecture that spans the full mission lifecycle from development through operations. The architecture provides a secure, scalable and extensible communications and data system that supports all aspects of a mission from onboard processing through the Mission Operations Center (MOC) to public access on the Internet. The architecture includes an Application Programming Interface (API) and message bus to provide a publish and subscribe communication mechanism. The GMSEC architecture and source code are based on an enterprise architecture approach with a message-oriented cross-platform enterprise middleware (information software bus).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://sourceforge.net/projects/gmsec/",
    "Languages": [
      "C++",
      "C",
      "Java",
      "Perl"
    ],
    "Contributors": [
      "bwiegand",
      "mhandy"
    ],
    "Labor_Hours": 475120,
    "Categories": [
      "mission",
      "support",
      "GMSEC",
      "API",
      "MOC",
      "ground",
      "data",
      "flight",
      "systems",
      "middleware"
    ],
    "Software": "Goddard Mission Services Evolution Center Architecture (GMSEC) API"
  },
  {
    "Industries": [
      "Flight simulation"
    ],
    "Update_Date": "2014-11-18",
    "Public Code Repo": "https://github.com/nasa/DAVEtools",
    "Description": "A Java package, nominally built in NetBeans, that provides utilities for dynamic models written in ANSI/AIAA-S-119 DAVE-ML markup, including translation to Matlab(R) and Simulink(R). See http://www.daveml.org",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/DAVEtools/wiki",
    "Languages": [
      "Java"
    ],
    "Contributors": [
      "bjax"
    ],
    "Labor_Hours": 19024,
    "Categories": [
      "Simulation",
      "Modeling",
      "Standards"
    ],
    "Software": "Java-Based Software Tool for Dynamic Aerospace Vehicle Exchange Markup Files"
  },
  {
    "Update_Date": "2015-02-10",
    "Public Code Repo": "https://github.com/nasa/Trick",
    "Description": "The Trick Simulation Environment provides a framework and build utilities for creating high fidelity training and engineering simulations.  Trick simulations are designed for both real-time and non-realtime applications having both time-based scheduling requirements. Trick simulations may include math models, flight software, human input devices, and hardware control functions.  Trick provides the user with math model job scheduling, checkpoint/restore, data recording, batch input processing, and interactive variable manipulation.  Trick also includes tools to create plots and tables of simulation recorded data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Johnson Space Center",
    "External Link": "https://github.com/nasa/Trick/wiki",
    "Languages": [
      "C++",
      "C",
      "Java",
      "Python",
      "Perl"
    ],
    "Contributors": [
      "alexlin0",
      "jmpenn"
    ],
    "Labor_Hours": 143904,
    "Categories": [
      "Simulation",
      "Framework"
    ],
    "Software": "Trick 13 Simulation Environment"
  },
  {
    "Update_Date": "2017-02-20",
    "Public Code Repo": "https://github.com/nasa/TrickFMI",
    "Description": "This software supports FMI based model exchange with Trick based simulations. The Functional Mockup Interface (FMI) standard was developed in partnership with governmental, academic and commercial entities in the European Union. This standard is used to support the exchange of component models for complex system simulations throughout Europe and the United States. Trick simulations are used all across NASA for simulations that support human spaceflight activities. However, until now, there were no means to use FMI based models in a Trick based simulation or a method for providing Trick based models that were FMI compliant. This software provides implementation software to do both. There are two principal components to the software: A C based software implementation for wrapping Trick based C models that provide an FMI compliant interface; A collection of C++ classes that can be used in a Trick based simulation to use an FMI compliant model (FMU).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Johnson Space Center",
    "External Link": "https://github.com/nasa/TrickFMI/wiki",
    "Languages": [
      "C++",
      "C"
    ],
    "Contributors": [
      "ezcrues"
    ],
    "Labor_Hours": 3728,
    "Categories": [
      "Model Exchange",
      "Simulation",
      "Framework"
    ],
    "Software": "TrickFMI"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/MMM-Py",
    "Description": "The National Oceanic and Atmospheric Administration (NOAA) regularly produces national 3D radar reflectivity mosaics via its Multi-Radar/Multi-Sensor (MRMS) system. These mosaics are wonderful for storm and precipitation analysis and research, but they are distributed in odd formats that NOAA is ever changing. Sometimes you just want to read a file and make a plot! This is what MMM-Py is for. With it, you can read any version of the MRMS radar mosaics, past or present, and you can analyze, plot, subsection, and output custom mosaics of your own, which MMM-Py can ingest later. MMM-Py is free and open source. It is capable of producing publication-ready figures and analyses, but it also can do quicklook plots so you can check out the cool storm that just happened.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/MMM-Py",
    "Languages": [
      "Python"
    ],
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 2048,
    "Categories": [
      "Analysis",
      "Visualization",
      "Toolkit",
      "MRMS",
      "Radar",
      "NMQ"
    ],
    "Software": "Marshall MRMS Mosaic Python Toolkit (MMM-Py)"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/PyAMPR",
    "Description": "Download AMPR data from http://ghrc.nsstc.nasa.gov. AMPR brightness temperature data from NASA field projects are in ASCII format. This python script defines a class that will read in single file from an individual aircraft flight and pull out timing, brightness temperatures from each channel, geolocation, and other information and store them as attributes using numpy arrays of the appropriate type. The approach is to ingest the entire file as a text string and then parse and type convert as necessary. The file is read and the data are populated when the class is instantiated with the full path and name of an AMPR file. Numerous visualization methods are provided, including track plots, strip charts, and Google Earth KMZs. In addition, polarization deconvolution is available.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/PyAMPR",
    "Languages": [
      "Python"
    ],
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 2288,
    "Categories": [
      "Analysis",
      "Visualization",
      "Toolkit",
      "Radiometer",
      "Airborne",
      "Precipitation",
      "AMPR"
    ],
    "Software": "Python Advanced Microwave Precipitation Radiometer Data Toolkit (PyAMPR)"
  },
  {
    "Update_Date": "2015-03-17",
    "Public Code Repo": "https://github.com/nasa/PyTDA",
    "Description": "This software provides Python functions that will estimate turbulence from Doppler radar data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/PyTDA",
    "Languages": [
      "Python"
    ],
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 1648,
    "Categories": [
      "Analysis",
      "Doppler",
      "Toolkit",
      "Turbulence",
      "Radar"
    ],
    "Software": "Python Turbulence Detection Algorithm (PyTDA)"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/bigView.tar.gz",
    "Description": "BigView allows for interactive panning and zooming of images of arbitrary size on desktop PCs running linux. Additionally, it can work in a multi-screen environment where multiple PCs cooperate to view a single large image. Using this software, one can explore -- on relatively modest machines -- images such as the Mars Orbiter Camera mosaic [92160x33280 pixels].",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/bigview/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 24928,
    "Categories": [
      "image processing",
      "composite",
      "image",
      "linux",
      "PC",
      "bigview"
    ],
    "Software": "BigView"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/BlockGP.tar.gz",
    "Description": "Block GP is a Gaussian Process regression framework for multimodal data, that can be an order of magnitude more scalable than existing state-of-the-art nonlinear regression algorithms. The framework builds local Gaussian Processes on semantically meaningful partitions of the data and provides higher prediction accuracy than a single global model with very high confidence.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/block-gp/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 960,
    "Categories": [
      "guassian",
      "regression",
      "data",
      "multimodal",
      "algorithm",
      "block-GP",
      "scalable"
    ],
    "Software": "Block-GP: Scalable Gaussian Process Regression"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://sourceforge.net/projects/cfdutilities/files/latest/download",
    "Description": "The CFD Utility Software Library consists of nearly 30 libraries of Fortran 90 and 77 subroutines and almost 100 applications built on those libraries. Many of the utilities apply to multiblock structured grids and flow solutions, but numerous other reusable modules in such categories as interpolation, optimization, quadrature, rapid searching, and character manipulation appear from several decades of software development in the Aerodynamics Division and Space Technology Division at NASA Ames Research Center.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://sourceforge.net/projects/cfdutilities/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 1504,
    "Categories": [
      "CFD",
      "library",
      "data",
      "optimization",
      "interpolation",
      "application"
    ],
    "Software": "Computational Fluid Dynamics (CFD) Utility Software Library"
  },
  {
    "Update_Date": "2004-01-26",
    "Public Code Repo": "http://www.nas.nasa.gov/Resources/Software/Open-Source/Downloads/Code/code-1_0b1.tar.gz",
    "Description": "CODE is a software framework for control and observation in distributed environments. The basic functionality of the framework allows a user to observe a distributed set of resources, services, and applications. A user can also use the framework to manage distributed resources, services, and applications.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://www.nas.nasa.gov/Resources/Software/Open-Source/code.html",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 12640,
    "Categories": [
      "observation",
      "control",
      "distributed environments",
      "application"
    ],
    "Software": "CODE software framework"
  },
  {
    "Update_Date": "2015-05-04",
    "Public Code Repo": "https://github.com/nasa/CrisisMappingToolkit",
    "Description": "The Crisis Mapping Toolkit (CMT) is a collection of tools for processing geospatial data (images, satellite data, etc.) into cartographic products that improve understanding of large-scale crises, such as natural disasters. The cartographic products produced by CMT include flood inundation maps, maps of damaged or destroyed structures, forest fire maps, population density estimates, etc. CMT is designed to rapidly process large-scale data using Google Earth Engine and other geospatial data systems.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/CrisisMappingToolkit",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 9392,
    "Categories": [
      "map",
      "crisis mapping toolkit",
      "CMT",
      "data processing",
      "Google Earth",
      "geospatial data systems"
    ],
    "Software": "Crisis Mapping Toolkit (CMT) v1"
  },
  {
    "Update_Date": "2015-05-04",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/MPE_E_Std_API_Distribution_2010_08_25.zip",
    "Description": "The purpose of this Opensource forum is to promote the development of a JAVA based Application Programming Interface for the field of Mass Properties Engineering.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/e-standards-mass-properties-engineering/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 1216,
    "Categories": [
      "java",
      "data object manipulation",
      "mass",
      "properties",
      "engineering"
    ],
    "Software": "E-Standards for Mass Properties Engineering"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/gmp-1.0.0.tar.gz",
    "Description": "The Geometry Manipulation Protocol (GMP) is a library which serializes datatypes between XML and ANSI C data structures to support CFD applications. This library currently provides a description of geometric configurations, general moving-body scenarios (prescribed and/or 6-DOF), and control surface settings.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/gmp/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 20432,
    "Categories": [
      "earth science",
      "geometry",
      "XML",
      "CFD",
      "ANSI C",
      "library",
      "GMP"
    ],
    "Software": "Geometry Manipulation Protocol (GMP)"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/growler-0.3.5.tar.gz",
    "Description": "Growler is a C++-based distributed object and event architecture. It is written in C++, and supports serialization of C++ objects as part of its Remote Method Invocation, Event Channels, and in its Interface Definition Language. Its primary application has been in support of interactive, distributed visualization, computational steering, and concurrent visualization, but it is a general purpose system for distributed programming.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://growler.sourceforge.net/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 102032,
    "Categories": [
      "data visualization",
      "distributed",
      "object",
      "remote method invocation",
      "event channels",
      "IDL",
      "C++",
      "GMP"
    ],
    "Software": "Growler"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/IND2.1.2.1-NASA-OSA.tar.gz",
    "Description": "IND is applicable to most data sets consisting of independent instances, each described by a fixed length vector of attribute values. An attribute value may be a number, one of a set of attribute specific symbols, or omitted. One of the attributes is delegated the 'target' and IND grows trees to predict the target. Prediction can then be done on new data or the decision tree printed out for inspection.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/ind/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 14144,
    "Categories": [
      "IND",
      "decision tree",
      "prediction",
      "data processing",
      "manipulation"
    ],
    "Software": "IND: Creation and Manipulation of Decision Trees from Data"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-es-1.0.tar.gz",
    "Description": "The Execution Service allows users to submit, monitor, and cancel complex jobs. Each job consists of a set of tasks that perform actions such as executing applications and managing data. Each task is executed based on a starting condition that is an expression on the states of other tasks. This formulation allows tasks to be executed in parallel and also allows a user to specify tasks to execute when other tasks succeed, fail or are cancelled.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/ipg/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 25856,
    "Categories": [
      "IPG",
      "execution service",
      "data management",
      "data processing",
      "parallel"
    ],
    "Software": "IPG Execution Service"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/JavaGenes.0.7.68.tar.gz",
    "Description": "JavaGenes is a fairly general purpose evolutionary software system written in Java. It implements several versions of the genetic algorithm, simulated annealing, stochastic hill climbing and other search techniques. JavaGenes has been used to evolve molecules, atomic force field parameters, digital circuits, Earth Observing Satellite schedules, and antennas.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/javagenes/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 205936,
    "Categories": [
      "java",
      "javagenes",
      "genetic",
      "algorithm",
      "search",
      "EOS"
    ],
    "Software": "JavaGenes"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/projects/libibvpp",
    "Description": "Libibvpp is a C++ wrapper around libibverbs, which is part of the OpenFabrics software suite (www.openfabrics.org).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/libibvpp/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 24304,
    "Categories": [
      "libibvpp",
      "openfabrics",
      "C++",
      "wrapper",
      "libibverbs"
    ],
    "Software": "Libibvpp"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/L2-OSA-unix_2.7.8.2.tar.gz",
    "Description": "Livingstone2 is a reusable artificial intelligence (AI) software system designed to assist spacecraft, life support systems, chemical plants or other complex systems in operating robustly with minimal human supervision, even in the face of hardware failures or unexpected events. Livingstone2 diagnoses the current state of the spacecraft or other system and recommends commands or repair actions that will allow the system to continue operations.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/livingstone2/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 436176,
    "Categories": [
      "livingstone2",
      "artificial intelligence",
      "AI",
      "spacecraft",
      "life support",
      "autonomous",
      "diagnostics",
      "operation"
    ],
    "Software": "Livingstone2"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/Mariana_.tgz",
    "Description": "Mariana is an algorithm that efficiently optimizes the hyperparameters for Support Vector Machines for regression and classification.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/mariana/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 3456,
    "Categories": [
      "mariana",
      "algorithm",
      "classification",
      "regression",
      "hyperparameters"
    ],
    "Software": "Mariana"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/MST_v1-0b.tgz",
    "Description": "The MST is a simulation framework, supporting the development of autonomy technology for planetary exploration vehicles. The MST provides a software test bed which includes simulated robotic platforms, sensors, and environments.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/mission-simulation-toolkit/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 63872,
    "Categories": [
      "mission simulation toolkit",
      "MST",
      "autonomous",
      "planetary exploration",
      "robotics",
      "sensor",
      "test bed"
    ],
    "Software": "Mission Simulation ToolKit (MST)"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/projects/mkad",
    "Description": "The Multiple Kernel Anomaly Detection (MKAD) algorithm is designed for anomaly detection over a set of files.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/mkad/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 9648,
    "Categories": [
      "multiple kernel anomaly detection",
      "MKAD",
      "algorithm",
      "FOQA",
      "one class support vector machine",
      "OCSVM"
    ],
    "Software": "Multiple Kernel Anomaly Detection (MKAD) Algorithm"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/MFSim1_0.zip",
    "Description": "Multi-Fidelity Simulator, MFSim is a pluggable framework for creating an air traffic flow simulator at multiple levels of fidelity. The framework is designed to allow low-fidelity simulations of the entire US Airspace to be completed very quickly (on the order of seconds). The framework allows higher-fidelity plugins to be added to allow higher-fidelity simulations to occur in certain regions of the airspace concurrently with the low-fidelity simulation of the full airspace.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/mfsim/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 993056,
    "Categories": [
      "multi-fidelity",
      "simulator",
      "MFS",
      "MFSim",
      "air traffic flow",
      "airspace",
      "aviation"
    ],
    "Software": "Multi-Fidelity Simulator (MFSim)"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/nodemon-0.3.3.tar.gz",
    "Description": "NodeMon is a resource utilization monitor tailored to the Altix architecture, but is applicable to any Linux system or cluster. It allows distributed resource monitoring via the Growler software infrastructure. It is modular, with existing modules for monitoring of cpu, memory, network, and numalink activity.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/nodemon/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 23456,
    "Categories": [
      "nodemon",
      "resource",
      "utilization",
      "monitor",
      "growler",
      "modular"
    ],
    "Software": "NodeMon"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-pour-1.0.tar.gz",
    "Description": "Pour is a general-purpose information service framework designed to accommodate a wide variety of information types with support for high volume, low frequency periodic updates, user-specified updates, and automatic updates collected on-demand when needed. Information is stored exclusively in XML and retrieved using standard XPath queries over a single unified namespace independent of the information's source.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/pour/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 7920,
    "Categories": [
      "pour",
      "xml",
      "xpath",
      "information service"
    ],
    "Software": "Pour"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/robus2.zip",
    "Description": "The ROBUS-2 Protocol Processor (RPP) is a custom-designed hardware component implementing the functionality of the ROBUS-2 fault-tolerant communication system. The Reliable Optical Bus (ROBUS) is the core communication system of the Scalable Processor-Independent Design for Enhanced Reliability (SPIDER), a general-purpose fault-tolerant integrated modular architecture currently under development at NASA Langley Research Center. ROBUS is a time-division multiple access (TDMA) broadcast communication system with medium access control by means of time-indexed communication schedule. ROBUS-2 is a developmental version of the ROBUS providing guaranteed fault-tolerant services to the attached processing elements (PEs), in the presence of a bounded number of faults.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/robus-2/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 7408,
    "Categories": [
      "robus-2",
      "robus",
      "rpp",
      "spider",
      "processing elements",
      "TDMA",
      "fault tolerant",
      "fault-tolerant"
    ],
    "Software": "ROBUS-2"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/SequenceMiner.tar.gz",
    "Description": "sequenceMiner was developed to address the problem of detecting and describing anomalies in large sets of high-dimensional symbol sequences. sequenceMiner works by performing unsupervised clustering (grouping) of sequences using the normalized longest common subsequence (LCS) as a similarity measure, followed by a detailed analysis of outliers to detect anomalies. sequenceMiner utilizes a new hybrid algorithm for computing the LCS that has been shown to outperform existing algorithms by a factor of five. sequenceMiner also includes new algorithms for outlier analysis that provide comprehensible indicators as to why a particular sequence was deemed to be an outlier. This provides analysts with a coherent description of the anomalies identified in the sequence, and why they differ from more 'normal' sequences.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://c3.ndc.nasa.gov/dashlink/algorithm/sequenceminer-algorithm/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 1120,
    "Categories": [
      "sequenceMiner",
      "detection",
      "cluster",
      "longest common sequence",
      "LCS",
      "algorithm",
      "outlier"
    ],
    "Software": "sequenceMiner"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/shift-3.1.tgz",
    "Description": "Shift is a lightweight framework for high performance local and remote file transfers that provides resiliency across a wide variety of failure scenarios through various techniques. These include end-to-end integrity via cryptographic hashes, throttling of transfers to prevent resource exhaustion, balancing transfers across resources based on load and availability, and parallelization of transfers across multiple source and destination hosts for increased redundancy and performance.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/shift/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 6112,
    "Categories": [
      "shift",
      "file transfer",
      "data transfer",
      "parallel",
      "Self-Healing Independent File Transfer"
    ],
    "Software": "Self-Healing Independent File Transfer (Shift)"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-surfer-1.0.tar.gz",
    "Description": "Surfer is an extensible framework designed to select and rank grid resources where a resource is defined to be anything that may need selecting such as compute resources, storage resources, data resources, etc.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://www.nas.nasa.gov/~kolano/projects/surfer.html",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 17296,
    "Categories": [
      "surfer",
      "resource",
      "data",
      "ranking"
    ],
    "Software": "Surfer"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/ipg-swim-1.0.tar.gz",
    "Description": "Swim is a software information service for the grid built on top of Pour, which is an information service framework developed at NASA. Swim provides true software resource discovery integrated with the tools used by administrators to install software.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "http://people.nas.nasa.gov/~kolano/projects/swim.html",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 2192,
    "Categories": [
      "swim",
      "resource",
      "discovery",
      "information service"
    ],
    "Software": "Swim"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://ti.arc.nasa.gov/m/opensource/downloads/ikos/ikos_arbos.0.1.tar.gz",
    "Description": "IKOS is a C++ library designed to facilitate the development of sound static analyzers based on Abstract Interpretation. Specialization of a static analyzer for an application or family of applications is critical for achieving both precision and scalability. Developing such an analyzer is arduous and requires significant expertise in Abstract Interpretation. ",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/ikos/",
    "Contributors": [
      "Dennis Koga"
    ],
    "Labor_Hours": 9616,
    "Categories": [
      "C++",
      "library",
      "IKOS",
      "static analyzer",
      "application",
      "abstract interpretation"
    ],
    "Software": "Inference Kernel for Open Static Analyzers (IKOS)"
  },
  {
    "Update_Date": "2009-02-03",
    "Public Code Repo": "https://github.com/Buzz-Beater/SIAM-2007-Text-Mining",
    "Description": "This is the dataset used for the SIAM 2007 Text Mining Competition. This is a subset of the Aviation Safety Reporting System (ASRS) dataset.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://c3.nasa.gov/dashlink/resources/138/",
    "Contributors": [
      "Nikunj Oza"
    ],
    "Labor_Hours": 240,
    "Categories": [
      "aviation",
      "safety",
      "reporting",
      "system",
      "text mining"
    ],
    "Software": "SIAM 2007 Text Mining Competition data set"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/IRC/index.php#software",
    "Description": "IRC architecture is a flexible, platform-independent application framework that is well suited for the distributed control and monitoring of remote devices and sensors.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/IRC/index.php",
    "Contributors": [
      "Troy Ames"
    ],
    "Labor_Hours": 92736,
    "Categories": [
      "IRC",
      "control",
      "monitoring",
      "framework"
    ],
    "Software": "Interoperable Remote Component (IRC)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/JAT/index.php#software",
    "Description": "The Java Astrodynamics Toolkit (JAT) is an open source software library of reusable software components for space mission design, trajectory optimization, and analysis of navigation, guidance and control systems.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/JAT/index.php",
    "Contributors": [
      "David Gaylor"
    ],
    "Labor_Hours": 43872,
    "Categories": [
      "JAT",
      "astrodynamics",
      "navigation",
      "space mission design",
      "simulation"
    ],
    "Software": "Java Astrodynamics Toolkit (JAT)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://lis.gsfc.nasa.gov/sites/default/files/LIS/LIS_public_release_7_2r/LDT_public_release_7.2r.tar.gz",
    "Description": "The Land Information System Verification Toolkit (LVT) is a hybrid Fortran90 and C software tool designed to enable the evaluation, analysis and comparison of outputs generated by the Land Information System (LIS). LIS is a software framework to support land surface modeling and data assimilation.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/LVT/index.php",
    "Contributors": [
      "Christa Peters-Lidard"
    ],
    "Labor_Hours": 63296,
    "Categories": [
      "LVT",
      "LIS",
      "land surface",
      "verification",
      "data analysis"
    ],
    "Software": "Land Information System Verification Toolkit (LVT)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/CodeV%20v2007a.zip",
    "Description": "Matlab-CodeV toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/Matlab_Code_V/index.php",
    "Contributors": [
      "Joseph Howard"
    ],
    "Labor_Hours": 880,
    "Categories": [
      "matlab",
      "CodeV",
      "optical",
      "modeling",
      "data conversion"
    ],
    "Software": "Matlab-CodeV Toolkit"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/Matlab/Matlab_OSLO.zip",
    "Description": "Matlab-OSLO toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/Matlab/index.php",
    "Contributors": [
      "Joseph Howard"
    ],
    "Labor_Hours": 464,
    "Categories": [
      "matlab",
      "OSLO",
      "optical",
      "modeling",
      "data conversion"
    ],
    "Software": "Matlab-OSLO Toolkit"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/15151%20ZEMAX%20v2007a.zip",
    "Description": "Matlab-Zemax toolkit: software enabling rapid transfer of optical modeling data into the Matlab environment for custom performance analyses, integrated modeling, wavefront sensing and control operations, and systems modeling.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/Matlab_Zemax/index.php",
    "Contributors": [
      "Joseph Howard"
    ],
    "Labor_Hours": 96,
    "Categories": [
      "matlab",
      "zemax",
      "optical",
      "modeling",
      "data conversion"
    ],
    "Software": "Matlab-zemax Toolkit"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/metacheck/index.php#software",
    "Description": "Metadata Check is a command-line tool to check EOS metadata with metadata descriptor. The tool takes metadata and its descriptor as input and generates a output file containing the check results.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/metacheck/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 4928,
    "Categories": [
      "metadata",
      "EOS",
      "data validation"
    ],
    "Software": "Metadata Check"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/mystran/index.php#software",
    "Description": "MYSTRAN provides a way to perform static and modal analysis of structures using classical FEA techniques.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/mystran/index.php",
    "Contributors": [
      "Timothy Carnahan"
    ],
    "Labor_Hours": 126144,
    "Categories": [
      "model analysis",
      "FEA",
      "Finite Element Analysis",
      "computer aided engineering"
    ],
    "Software": "MYSTRAN"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/ODL_XML/odl_java.tgz",
    "Description": "Converts an HDF-EOS ODL metadata file into appropriate XML. Written in Java.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/ODL_XML/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 10096,
    "Categories": [
      "data conversion",
      "XML",
      "ODL"
    ],
    "Software": "ODL to XML Converter"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/paramesh/paramesh3.3_beta.tar.gz",
    "Description": "PARAMESH is a package of Fortran 90 subroutines designed to provide an application developer with an easy route to extend an existing serial code which uses a logically cartesian structured mesh into a parallel code with adaptive mesh refinement (AMR).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/paramesh/index.php",
    "Contributors": [
      "Peter MacNiece"
    ],
    "Labor_Hours": 83648,
    "Categories": [
      "data conversion",
      "adaptive mesh refinement",
      "AMR"
    ],
    "Software": "PARAMESH"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/FUNIT/pFUnit.tar",
    "Description": "pFunit is a Fortran analog to various other xUnit testing frameworks which have been developed within the software community,and is intended to enable test driven development (TDD) within the scientific/technical programming community.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/FUNIT/index.php",
    "Contributors": [
      "Thomas Clune"
    ],
    "Labor_Hours": 2272,
    "Categories": [
      "testing",
      "test driven development",
      "software development"
    ],
    "Software": "pFUnit"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/RETRO/index.php#software",
    "Description": "Requirements Tracing On target (RETRO) assists users in tracing textual software engineering artifacts to each other using standard information retrieval techniques.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/RETRO/index.php",
    "Contributors": [
      "Jane Hayes"
    ],
    "Labor_Hours": 12736,
    "Categories": [
      "RETRO",
      "requirements tracing",
      "software development",
      "information retrieval"
    ],
    "Software": "Requirements Tracing On Target (RETRO)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/UFM/UFM.zip",
    "Description": "The User-friendly Metadata (UFM) tool functions as a filter, taking input from standard input (STDIN) and writing output to standard output (STDOUT) and/or standard error (STDERR).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/UFM/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 22384,
    "Categories": [
      "UFM",
      "metadata",
      "STDIN",
      "standard",
      "input",
      "output"
    ],
    "Software": "User Friendly Metadata (UFM)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://github.com/nasa-gibs/worldview",
    "Description": "Interactive satellite imagery browsing and downloading tool.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/worldview/index.php",
    "Contributors": [
      "Ryan Boller"
    ],
    "Labor_Hours": 86144,
    "Categories": [
      "data visualization",
      "imagery",
      "satellite"
    ],
    "Software": "Worldview satellite imagery browsing and downloading tool"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/xml2he/xml2he5.tar.gz",
    "Description": "Program that takes an XML representation of the contents of an HDF-EOS file and recreates the file from that description.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/xml2he/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 1856,
    "Categories": [
      "XML",
      "HDF",
      "EOS",
      "converter",
      "data conversion"
    ],
    "Software": "XML to HDF-EOS Converter"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/xml2odl/xml2odl.zip",
    "Description": "Converts an XML file to an HDF-EOS ODL metadata file.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/xml2odl/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 592,
    "Categories": [
      "XML",
      "ODL",
      "converter",
      "data conversion"
    ],
    "Software": "XML to ODL Converter"
  },
  {
    "Update_Date": "2015-02-10",
    "Public Code Repo": "ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz",
    "Description": "CFITSIO is a library of C and Fortran subroutines for reading and writing data files in FITS (Flexible Image Transport System) data format. CFITSIO provides simple high-level routines for reading and writing FITS files that insulate the programmer from the internal complexities of the FITS format. CFITSIO also provides many advanced features for manipulating and filtering the information in FITS files.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://heasarc.gsfc.nasa.gov/docs/software/fitsio/fitsio.html",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 115248,
    "Categories": [
      "data validation",
      "FITS",
      "flexible image transport system"
    ],
    "Software": "CFITSIO"
  },
  {
    "Update_Date": "2015-03-10",
    "Public Code Repo": "https://github.com/ericmandel/funtools",
    "Description": "This is a small C library for FITS I/O originally written by John Roll at SAO. It is now maintained and distributed as part of the FUNTOOLS utility package.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/ericmandel/funtools",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 139248,
    "Categories": [
      "data validation",
      "FITS",
      "flexible image transport system",
      "SAO",
      "FUNTOOLS"
    ],
    "Software": "fitsy/funtools"
  },
  {
    "Update_Date": "2007-01-22",
    "Public Code Repo": "ftp://ftp.eso.org/pub/eclipse/latest/eclipse-main-5.0.0.tar.gz",
    "Description": "The qfits library is a small, portable C library that provides low level support for accessing FITS images, headers and tables.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://www.eso.org/sci/software/eclipse/qfits/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 49264,
    "Categories": [
      "data validation",
      "FITS",
      "flexible image transport system",
      "qfits"
    ],
    "Software": "qfits"
  },
  {
    "Update_Date": "2011-12-09",
    "Public Code Repo": "http://heasarc.gsfc.nasa.gov/fitsio/CCfits/CCfits-2.4.tar.gz",
    "Description": "The CCfits library is build on top of CFITSIO and provides an interface that allows the user to manipulate FITS data through high-level object-oriented building blocks.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://heasarc.gsfc.nasa.gov/fitsio/CCfits/",
    "Contributors": [
      "Phil Newman"
    ],
    "Labor_Hours": 58112,
    "Categories": [
      "data validation",
      "data",
      "CFITSIO",
      "FITS",
      "flexible image transport system",
      "SAO",
      "CCfits"
    ],
    "Software": "CCfits Library"
  },
  {
    "Update_Date": "1997-10-01",
    "Public Code Repo": "http://www.cv.nrao.edu/fits/src/c++fits-09.076.tar.gz",
    "Description": "The AIPS++ FITS library is available separately from the AIPS++ distribution.  Currently there is limited documentation.  This defines a set of C++ objects to read and write FITS files.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://www.cv.nrao.edu/fits/src/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 5680,
    "Categories": [
      "data validation",
      "data",
      "FITS",
      "flexible image transport system",
      "AIPS++FITS",
      "AIPS++"
    ],
    "Software": "AIPS++FITS Library"
  },
  {
    "Update_Date": "2013-11-30",
    "Public Code Repo": "https://github.com/wlandsman/IDLAstro",
    "Description": "TThe IDL Astronomy Library contains four different sets of procedures for reading, writing, and modifying FITS files. The reason for having four different methods of FITS I/O with IDL is partly historical, as different groups developed the software independently. However, each method also has its own strengths and weakness for any particular task. For example, the procedure MRDFITS() -- which can read a FITS table into an IDL structure --is the easiest procedure for analyzing FITS files at the IDL prompt level (provided that one is comfortable with IDL structures). But mapping a table into an IDL structure includes extra overhead, so that when performing FITS I/O at the procedure level, it may be desirable to use more efficient procedures such as FITS_READ and FTAB_EXT.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://idlastro.gsfc.nasa.gov/fitsio.html",
    "Contributors": [
      "Theodore Gull"
    ],
    "Labor_Hours": 32768,
    "Categories": [
      "data conversion",
      "data",
      "MRDFITS",
      "MWRFITS",
      "FITS",
      "flexible image transport system",
      "IDL",
      "IDLAstro",
      "FX*",
      "FITS_*",
      "FTAB_*",
      "READFITS",
      "WRITEFITS"
    ],
    "Software": "IDLAstro"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "https://github.com/nom-tam-fits/nom-tam-fits",
    "Description": "A full function 100% Java library for reading and writing FITS files.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://heasarc.gsfc.nasa.gov/docs/heasarc/fits/java/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 35632,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "java"
    ],
    "Software": "nom-tam-fits"
  },
  {
    "Update_Date": "2008-05-16",
    "Public Code Repo": "https://github.com/Starlink/starjava",
    "Description": "STIL/starlink is a pure Java library for generic input, output and processing of tabular data. It presents to the application programmer a view of a table which looks the same regardless of whether it came from a FITS file, a VOTable, an ASCII text file, a query on a relational database, or whatever.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/Starlink/starjava",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 2145056,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "java",
      "binary",
      "STIL",
      "starlink"
    ],
    "Software": "Starlink/starjava"
  },
  {
    "Update_Date": "2015-04-16",
    "Public Code Repo": "https://github.com/astrojs/fitsjs",
    "Description": "A standalone JavaScript library for reading the FITS astronomical file format. This library is built for modern browsers supporting the DataView object. These include at least Chrome 9, Firefox 15, and Safari 6. This library may be used to read various forms of the FITS format. This implementation is under active development. In its current state it supports the following: reading of multiple header data units, reading of FITS images, reading of data cubes, reading of binary tables, reading of ASCII Tables, and decompressing images using the Rice algorithm. ",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/astrojs/fitsjs/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 4432,
    "Categories": [
      "data compression",
      "data",
      "FITS",
      "flexible image transport system",
      "javascript",
      "binary",
      "ASCII",
      "rice algorithm"
    ],
    "Software": "fitsjs"
  },
  {
    "Update_Date": "2013-06-06",
    "Public Code Repo": "http://search.cpan.org/~pratzlaff/Astro-FITS-CFITSIO-1.10/CFITSIO.pm",
    "Description": "A Perl module incorporating the CFITSIO library has been developed using XS wrappers. Most useful CFITSIO calls have direct Perl counterparts. Users will need the C version of CFITSIO to link to.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://search.cpan.org/~pratzlaff/Astro-FITS-CFITSIO-1.10/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 5088,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "CFITSIO",
      "perl"
    ],
    "Software": "CFITSIO.pm"
  },
  {
    "Update_Date": "2014-12-30",
    "Public Code Repo": "http://www.cpan.org/modules/by-module/PDL/Data-Frame-0.003.tar.gz",
    "Description": "A FITS reader is provided within the Perl Data Language module.  It handles FITS images and binary tables. PDL is a Perl module providing mechanisms to manipulate arrays of data efficiently.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://www.cpan.org/modules/by-module/PDL/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 352,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "CFITSIO",
      "perl",
      "binary"
    ],
    "Software": "PDL FITS capabilities"
  },
  {
    "Update_Date": "2015-05-06",
    "Public Code Repo": "http://fits.gsfc.nasa.gov/software/mfitsio-1.2.4-src.tar.gz",
    "Description": "Damian Eads (at Los Alamos at that time) wrote a MatLab interface to the CFITSIO library using a tool called 'mex'. MFITSIO supports reading and writing FITS images, image subsets, and headers. (UPDATE, June 2013: MFITSIO is no longer available from the Los Alamos web site, however, the last version (1.2.4) of the MFITSIO source code .tar file has been retrieved from the Internet Archive WayBack Machine and made available here. The mfitsio interface has not been maintained for many years, and some users have reported problems with installing the software.)",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://fits.gsfc.nasa.gov/fits_libraries.html#mfitsio",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 944,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "MFITSIO",
      "matlab"
    ],
    "Software": "MFITSIO"
  },
  {
    "Update_Date": "2014-04-30",
    "Public Code Repo": "http://fits.gsfc.nasa.gov/software/gfitsio_v5.2_Apr_2014.zip",
    "Description": "George Gatling (NRL, email = george.gatling  'at' nrl.navy.mil) wrote an interface to the CFITSIO library for LabVIEW 2013 or later under Microsoft Windows . It supports reading and writing FITS images and ASCII and binary tables.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://fits.gsfc.nasa.gov/fits_libraries.html#LabVIEW",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 3216,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "GFITSIO",
      "binary",
      "Labview"
    ],
    "Software": "GFITSIO"
  },
  {
    "Update_Date": "2014-07-17",
    "Public Code Repo": "http://docs.astropy.org/en/stable/io/fits/index.html#module-astropy.io.fits",
    "Description": "PyFITS is a set of Python modules which read and write most FITS formats.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://www.stsci.edu/institute/software_hardware/pyfits/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 11728,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "python",
      "binary"
    ],
    "Software": "PyFITS"
  },
  {
    "Update_Date": "2015-04-17",
    "Public Code Repo": "https://github.com/esheldon/fitsio",
    "Description": "fitsio is a full featured python library to read and write data to FITS files. This is a python extension written in c and python. Data are read into numerical python arrays. A version of cfitsio is bundled with this package, which is used, in particular, to read and write images in tile-compressed format.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/esheldon/fitsio",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 118336,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "python",
      "cfitsio",
      "fitsio"
    ],
    "Software": "Python/fitsio"
  },
  {
    "Update_Date": "2009-04-08",
    "Public Code Repo": "https://pypi.python.org/packages/source/p/pfits/pfits-0.0.2.tar.gz",
    "Description": "This package uses the CFITSIO library to interface to FITS files from Python. Particular attention has been paid to supporting ASCII and BINARY tables with fixed and variable-length entries. Data I/O is handled through numpy arrays. Note: this library appears to not have been updated since 2009 and may no longer be supported.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://pypi.python.org/pypi/pfits",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 70416,
    "Categories": [
      "data conversion",
      "data",
      "FITS",
      "flexible image transport system",
      "python",
      "ASCII",
      "PFITS",
      "binary"
    ],
    "Software": "PFITS"
  },
  {
    "Update_Date": "2016-11-26",
    "Public Code Repo": "http://www.astro.umd.edu/~harris/r/FITSio_2.0-0.zip",
    "Description": "FITSio is a contributed R package for reading and writing FITS images and reading binary tables within the R software environment. It has no dependencies other than the base R installation. The FITSio contributed package source code is available directly from the R project web site under the 'contributed extension packages' link.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://fits.gsfc.nasa.gov/fits_libraries.html#Rlang",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 32,
    "Categories": [
      "data visualization",
      "data",
      "FITS",
      "flexible image transport system",
      "R language",
      "FITSio"
    ],
    "Software": "fitsio"
  },
  {
    "Update_Date": "2012-02-21",
    "Public Code Repo": "https://www.spacetelescope.org/static/projects/fits_liberator/v301files/FITSLiberator3.zip",
    "Description": "Liberator is a free plug-in for Adobe Photoshop or Photoshop Elements 2 for manipulating FITS images with those programs. A color composite 'Action' file is also available to simplify the process of creating color composite images from 3 separate red, green, and blue images.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "http://www.spacetelescope.org/projects/fits_liberator/",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 256,
    "Categories": [
      "data visualization",
      "image processing",
      "data",
      "FITS",
      "flexible image transport system",
      "ESA",
      "ESO",
      "liberator",
      "adobe"
    ],
    "Software": "ESA/ESO/NASA FITS Liberator"
  },
  {
    "Update_Date": "2014-02-12",
    "Public Code Repo": "https://github.com/siravan/fits",
    "Description": "Package fits reads and processes FITS files. It is written in pure golang and is not a wrapper around another library or a direct translation of another library to golang. The main purpose is to provide a native golang solution to reading FITS file and to assess the suitability of golang for scientific and numerical applications.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/siravan/fits",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 544,
    "Categories": [
      "data processing",
      "data",
      "FITS",
      "flexible image transport system",
      "golang",
      "go"
    ],
    "Software": "golang fits reader"
  },
  {
    "Update_Date": "2014-07-09",
    "Public Code Repo": "https://github.com/astrogo/cfitsio",
    "Description": "A set of CGo bindings to some of the most commonly used routines in the CFITSIO library (written in C).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/astrogo/cfitsio",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 4176,
    "Categories": [
      "data processing",
      "data",
      "FITS",
      "flexible image transport system",
      "golang",
      "wrapper",
      "C",
      "CFITSIO",
      "go"
    ],
    "Software": "golang wrapper"
  },
  {
    "Update_Date": "2015-02-06",
    "Public Code Repo": "https://github.com/astrogo/fitsio",
    "Description": "Go package to read and write FITS files. It is written in pure golang and is not a wrapper around another library.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/astrogo/fitsio",
    "Contributors": [
      "William D. Pence"
    ],
    "Labor_Hours": 5984,
    "Categories": [
      "data processing",
      "data",
      "FITS",
      "flexible image transport system",
      "golang",
      "go"
    ],
    "Software": "native golang fits package"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/ace/#software",
    "Description": "aCe (Architecture Adaptive Computing Environment) is a project to develop a programming environment that can be supported on all computing architectures. aCe was developed around a parallel super-set of ANS C.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/ace/aCe_Distro_Notes.txt",
    "Languages": [
      "C"
    ],
    "Contributors": [
      "John Dorband"
    ],
    "Labor_Hours": 113456,
    "Categories": [
      "Parallel Programming",
      "C",
      "ANS C"
    ],
    "Software": "Architecture Adaptive Computing Environment (ACE)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/Alias/alias2_1.tar",
    "Description": "The Advanced Land Image Assessment Systems (ALIAS) supports radiometric and geometric image processing for the Advanced Land Imager (ALI) instrument on board NASAâ€™s Earth Observing-1 (EO-1) satellite. ALIAS consists of two processing subsystems for radiometric and geometric processing of the ALIâ€™s multispectral imagery. The radiometric processing subsystem characterizes and corrects, where possible, radiometric qualities including: detector operability; gain; bias; coherent, impulse and random noise; signal-to-noise ratios (SNR); saturation levels; striping and banding; and the stability of detector performance. The geometric processing subsystem and analysis capabilities support sensor alignment calibrations; sensor chip assembly (SCA)-to-SCA alignments and related issues; geodetic accuracy assessments; modulation transfer function (MTF) characterizations; and perform image-to-image characterizations. The ALIAS also characterizes and corrects band-to-band registration, and performs systematic, precision and terrain correction of ALI images. The ALIAS can geometrically correct and automatically mosaic the SCA image strips into a seamless, map-projected image. The ALIAS was developed through collaboration between NASA and the U.S. Geological Survey (USGS).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/Alias/Alias.zip",
    "Contributors": [
      "Vicki Zanoni"
    ],
    "Labor_Hours": 315552,
    "Categories": [
      "image processing",
      "Advanced Land Imager",
      "EO-1"
    ],
    "Software": "ALIAS"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/ut-assert/ut-assert%20v1_0%2011-24-14.zip",
    "Description": "The ut-assert unit test tools provide a unit test framework and a collection of utilities that are designed to facilitate unit testing.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/ut-assert/index.php",
    "Contributors": [
      "David McComas"
    ],
    "Labor_Hours": 1616,
    "Categories": [
      "regression testing",
      "unit test",
      "assert"
    ],
    "Software": "Assert-Based Unit Test Tools (UT-Assert)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/CEOP/CEOP.tar.gz",
    "Description": "A gateway using OPeNDAP, implemented as a plug-in to the Hyrax server, for accessing WCS data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/CEOP/index.php",
    "Contributors": [
      "Christopher Lynnes"
    ],
    "Labor_Hours": 23488,
    "Categories": [
      "networking",
      "opendap",
      "ACCESS",
      "earth science data"
    ],
    "Software": "CEOP Satellite Data Server"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://sourceforge.net/projects/coreflightexec",
    "Description": "The Core Flight Executive (cFE) is an application development and run-time environment. The cFE provides a set of core services including Software Bus (messaging), Time, Event (Alerts), Executive (startup and runtime), and Table services.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/cfe/index.php",
    "Contributors": [
      "Susan Strege"
    ],
    "Labor_Hours": 235312,
    "Categories": [
      "programming",
      "environment",
      "application",
      "core flight"
    ],
    "Software": "Core Flight Executive (cFE)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/HSEG/core_rhsegV1.47.tar.gz",
    "Description": "The RHSEG software provides hierarchical segmentation (pre-processing) of image and image-like data. The software significantly improves the extraction of patterns from complex data sets and is optimized for speed and accuracy. This algorithm provides the user with precise control for selecting the desired level of detail from the hierarchy of results.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/HSEG/index.php",
    "Contributors": [
      "James Tilton"
    ],
    "Labor_Hours": 17184,
    "Categories": [
      "image processing",
      "RHSEG",
      "application",
      "object based image analysis"
    ],
    "Software": "Core RHSEG Software Package"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/DQSS/dqss_64.tar",
    "Description": "The Data Quality Screening Service (DQSS) is designed to help automate the filtering of remote sensing data on behalf of science users.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/DQSS/index.php",
    "Contributors": [
      "Christopher Lynnes"
    ],
    "Labor_Hours": 10544,
    "Categories": [
      "data filtering",
      "remote sensing",
      "quality"
    ],
    "Software": "Data Quality Screening Service (DQSS)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/ECS_Metadata_validate/schemavalidator.zip",
    "Description": "The ECS Schema Validation tool validates an XML Document based on the BMGT Granule or Collection Schema, and generate reports listing all invalid elements.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/ECS_Metadata_validate/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 13792,
    "Categories": [
      "data validation",
      "validator",
      "EOS"
    ],
    "Software": "ECS Metadata Validator"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/edg/edg.zip",
    "Description": "The Earth Observing System Data Gateway (EDG) was developed in response to the earth science community's need for a one-stop-shopping interface to search for data and order data granules from distributed data archives. This innovation enables users to explore, discover, and order available data from geographically distributed data providers through a standard interface.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/edg/index.php",
    "Contributors": [
      "Robert Harberts"
    ],
    "Labor_Hours": 233888,
    "Categories": [
      "data interchange",
      "interface",
      "Earth science"
    ],
    "Software": "EDG"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/emtg/index.php#software",
    "Description": "Goddard's autonomous low-thrust trajectory optimization tool. EMTG is capable of designing complex low-thrust trajectories with minimal input from the user.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/emtg/index.php",
    "Contributors": [
      "Jacob Englander"
    ],
    "Labor_Hours": 18000,
    "Categories": [
      "trajectory design",
      "interplanetary space",
      "space science"
    ],
    "Software": "Evolutionary Mission Trajectory Generator (EMTG)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/NFMW/nfmw-20081204.zip",
    "Description": "The NFMW reads Earth science models and produces web pages that display the desired area, time, and elevation, using WMS (Web Map Service).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/NFMW/index.php",
    "Contributors": [
      "Eric Sokolowsky"
    ],
    "Labor_Hours": 24304,
    "Categories": [
      "web map service",
      "earth science",
      "data visualization"
    ],
    "Software": "Forecast Model Web Map Service (NFMW)"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/GPMV/GPM_VN_visualization_master.tar",
    "Description": "The GPM displays grand- and space-based radar observations for easy comparison and validation. Inteded for meteorologists and other sciences; not end users.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/GPMV/index.php",
    "Contributors": [
      "Mathew Schwaller"
    ],
    "Labor_Hours": 6128,
    "Categories": [
      "meteorology",
      "earth science",
      "data visualization",
      "GVS",
      "GPM"
    ],
    "Software": "Global Precipitation Mission (GPM) Visualization Tool for Validation Network Geometrically-Matched Ground- and Space-based Radar Data"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/GPM/GPMGV_VN_IDL_CODE.tar",
    "Description": "The GPM Collects various data sets from TRMM spacecraft, re-samples it, and generates statistics.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/GPM/index.php",
    "Contributors": [
      "Mathew Schwaller"
    ],
    "Labor_Hours": 5712,
    "Categories": [
      "TRMM",
      "earth science",
      "data processing",
      "GVS",
      "GPM"
    ],
    "Software": "Global Precipitation Radar (GPM) Space and Ground Radar Comparison"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php#software",
    "Description": "The HDF-EOS2 and HDF-EOS5 Compatibility Library provides a consistent API to both EOS-2 and EOS-5 APIs, which are slightly different. The HDF-EOS5 Validator validates an XML description of an HDF-EOS file against that file.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/HDF-EOS2/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 3328,
    "Categories": [
      "HDF-EOS2",
      "HDF-EOS5",
      "EOS",
      "EOSDIS",
      "validator"
    ],
    "Software": "HDF-EOS2 and HDF-EOS5 Compatibility Library"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/hemu/HEMU.zip",
    "Description": "HDF-EOS Metadata Updater updates metadata inside an HDF-EOS file.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/hemu/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 10432,
    "Categories": [
      "updater",
      "HDF-EOS",
      "EOS",
      "EOSDIS",
      "data file manipulator"
    ],
    "Software": "HDF-EOS Metadata Updater"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/hdfeos5-netcdf.tar",
    "Description": "The HDF-EOS to netCDF Convertor takes an HDF-EOS dataset and outputs a netCDF file that preserves as much as possible of the dataset's data and metadata using the CF conventions for netCDF.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/hdfeos2netcdf/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 544,
    "Categories": [
      "updater",
      "HDF-EOS",
      "EOS",
      "EOSDIS",
      "data conversion"
    ],
    "Software": "HDF-EOS to netCDF Convertor"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/heserve/heserve.zip",
    "Description": "The HDF-EOS Web Server converts HDF-EOS metadata into human-readable HTML and publishes it to a local web server (which must be pre-configured).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/heserve/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 1248,
    "Categories": [
      "server",
      "HDF-EOS",
      "EOS",
      "EOSDIS",
      "data conversion"
    ],
    "Software": "HDF-EOS Web Server"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/schemavalidator.zip",
    "Description": "The HDFEOS XML DTD and Schemas is a set of DTD and schemas for HDFEOS files.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/XML_DTD_Schemas/index.php",
    "Contributors": [
      "Richard Ullman"
    ],
    "Labor_Hours": 13792,
    "Categories": [
      "server",
      "HDF-EOS",
      "EOS",
      "EOSDIS",
      "data validation"
    ],
    "Software": "HDFEOS XML DTD and Schemas"
  },
  {
    "Update_Date": "2015-02-27",
    "Public Code Repo": "https://opensource.gsfc.nasa.gov/projects/HDF/HDF.zip",
    "Description": "This is a Java language software plug-in to The HDF Group's (formerly of NCSA at University of Illinois at Urbana-Champaign) HDFView which provides an HDF-EOS interface for both versions of HDF (4 and 5) of HDF-EOS. Browse and edit functions are provided.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://opensource.gsfc.nasa.gov/projects/HDF/index.php",
    "Contributors": [
      "Dan Marinelli"
    ],
    "Labor_Hours": 208,
    "Categories": [
      "HDF-EOS",
      "EOS",
      "EOSDIS",
      "data validation"
    ],
    "Software": "HDFView HDF-EOS Plug-in"
  },
  {
    "Update_Date": "2016-02-01",
    "Public Code Repo": "https://github.com/nasa/RtRetrievalFramework",
    "Description": "This software retrieves a set of atmospheric/surface/instrument parameters from a simultaneous fit to spectra from multiple absorption bands. The software uses an iterative, non-linear retrieval technique (optimal estimation). After the retrieval process has converged, the software performs an error analysis. The products of the software include all quantities needed to understand the information content of the measurement, its uncertainty, and its dependence on interfering atmospheric properties. Spectra from ground-based or space-based measurement with arbitrary observation geometry can be analyzed. The retrieved parameters can be chosen from a large set of atmospheric (e.g., volume mixing ratio of gases or aerosol optical depth), surface (e.g., Lambertian reflection), and instrument (e.g., spectral shift or instrument line shape parameters) parameters. The software uses an accurate, state-of-the-art, multiple-scattering radiative transfer code combined with an efficient polarization approximation to simulate measured spectra. The software enables fast and highly accurate simulations of broad spectral ranges by an optional parallelization of the frequency processing in the radiative transfer model. The framework was written with flexibility in mind. New algorithms and instruments are added by creating additional classes that implement the defined interfaces. Bindings are available for both Python and Lua.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa/RtRetrievalFramework",
    "Contributors": [
      "mcduffie",
      "mikesmyth"
    ],
    "Labor_Hours": 1764272,
    "Categories": [
      "Framework",
      "Radiative Transfer",
      "Forward Model",
      "Atmosphere",
      "Retrieval",
      "Earth Science",
      "C++",
      "Python",
      "Lua"
    ],
    "Software": "RT Retrieval Framework"
  },
  {
    "Update_Date": "2016-02-05",
    "Public Code Repo": "https://github.com/nasa/nasa-latex-docs",
    "Description": "This is a flexible LaTeX document template designed to separate content from styling and remove all of the grunt work associated with creating professional documents. Can be used for technical reports as well as public documents such as research papers and conference papers.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Johnson Space Center",
    "External Link": "https://github.com/nasa/nasa-latex-docs/wiki",
    "Contributors": [
      "walshahi"
    ],
    "Labor_Hours": 944,
    "Categories": [
      "LaTeX",
      "TeX",
      "Documents",
      "Reports",
      "Papers"
    ],
    "Software": "NASA LaTeX Docs"
  },
  {
    "Update_Date": "2016-04-05",
    "Public Code Repo": "https://github.com/nasa/isle",
    "Description": "This web application allows inventories of assets to be managed. Assets along with their specifications are added to the system and then used by users via a check-in/check-out function. The inventory can be browsed by category or using search. Users are given various roles within the system to allow them to perform certain functions such as view-only, check-in/check-out, modify, and full-control. Inventory managers can add and track detailed information on all inventory assets including manufacturer, storage location, custom attributes, and relationships with other assets. Assets can be found by browsing by category, search, location, or current user. Assets are checked out to specified locations by users.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/isle",
    "Contributors": [
      "bruffridge",
      "bggardner"
    ],
    "Labor_Hours": 25968,
    "Categories": [
      "Web",
      "PHP",
      "MySQL",
      "Inventory"
    ],
    "Software": "Inventory System for Lab Equipment (ISLE)"
  },
  {
    "Update_Date": "2016-06-16",
    "Public Code Repo": "https://github.com/nasa/idf",
    "Description": "IDF provides an extensible framework for mapping inputs from physical devices (joysticks, rudder pedals, control panels, custom devices) to developer-defined domain-specific virtual controller interfaces (flight, robotics, camera).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Johnson Space Center",
    "External Link": "https://github.com/nasa/idf",
    "Contributors": [
      "dbankieris"
    ],
    "Labor_Hours": 7664,
    "Categories": [
      "Framework"
    ],
    "Software": "Input Device Framework (IDF)"
  },
  {
    "Update_Date": "2016-07-13",
    "Public Code Repo": "https://github.com/nasa/CompDam_DGD",
    "Description": "A continuum damage mechanics material model for fiber-reinforced composite materials. Compatible with Abaqus/Explicit.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/CompDam_DGD",
    "Contributors": [
      "Frank Leone",
      "Andrew Bergan",
      "Carlos DÃ¡vila"
    ],
    "Labor_Hours": 4752,
    "Categories": [
      "FEA",
      "Abaqus",
      "Progressive Damage",
      "Continuum Mechanics",
      "Composite Materials",
      "Fortran"
    ],
    "Software": "Composite Damage (CompDam) Progressive Damage Analysis Software"
  },
  {
    "Update_Date": "2016-02-11",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/projects/kalman",
    "Description": "The Kalman Filter Code Augmentation release is a modification of Kalman Filter Toolbox, written by Kevin Murphy, 1998. It extends the existing open source software's capabilities and functionality by bookkeeping more detailed information on internal data structures, as well as ensuring the consistency of mathematical conventions used by subroutines that are part of a third-party tool called ASOS as part of the modification. Additional convergence criteria have also been included, as well as the possibility for establishing additional constraints and modelling paradigms.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/kalman",
    "Contributors": [
      "rodney.martin@nasa.gov"
    ],
    "Labor_Hours": 176,
    "Categories": [
      "model development",
      "code augmentation"
    ],
    "Software": "Kalman Filter Code Augmentation"
  },
  {
    "Update_Date": "2016-02-11",
    "Public Code Repo": "https://ti.arc.nasa.gov/opensource/projects/roc",
    "Description": "ROC (Receiver Operating Characteristic) curve Code Augmentation is a modification of ROC Curve code originally authored by G.C. Cawley that provides additional functionality. The inclusion of more detailed bookkeeping of new and existing internal data structures that provide more visibility into various performance measures is one of the new features.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://ti.arc.nasa.gov/opensource/projects/roc",
    "Contributors": [
      "rodney.martin@nasa.gov"
    ],
    "Labor_Hours": 32,
    "Categories": [
      "model development",
      "code augmentation"
    ],
    "Software": "ROC Curve Code Augmentation"
  },
  {
    "Update_Date": "2016-09-06",
    "Public Code Repo": "https://github.com/nasa/MINX",
    "Description": "MINX, which stands for MISR INteractive eXplorer, is an interactive visualization and analysis program written in IDL and designed to make MISR data more accessible to science users. Its principal use is to retrieve heights and motion for aerosol plumes and clouds using stereoscopic methods.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://misr.jpl.nasa.gov/",
    "Contributors": [
      "David Nelson",
      "Sebastian Val"
    ],
    "Labor_Hours": 31056,
    "Categories": [
      "Toolkit",
      "Visualization",
      "Analysis"
    ],
    "Software": "MINX"
  },
  {
    "Update_Date": "2019-02-27",
    "Public Code Repo": "https://github.com/nasa/podaacpy",
    "Description": "Podaacpy is a python utility library for interacting with NASA JPLs PO.DAAC.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://podaacpy.readthedocs.io/en/latest/",
    "Contributors": [
      "lewismc",
      "Omkar20895",
      "jarifibrahim",
      "agoodm",
      "noah-de",
      "kant"
    ],
    "Labor_Hours": 720,
    "Categories": [
      "Framework",
      "Toolkit",
      "Web",
      "Python",
      "Subsetting",
      "Dataset Search"
    ],
    "Software": "Podaacpy"
  },
  {
    "Update_Date": "2019-02-27",
    "Public Code Repo": "https://github.com/nasa/podaac_tools_and_services",
    "Description": "A meta-repository which essentially lists code related to all tools and services software for NASA JPL's PO.DAAC",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa/podaac_tools_and_services",
    "Contributors": [
      "lewismc"
    ],
    "Labor_Hours": 1,
    "Categories": [
      "podaac",
      "tools",
      "services",
      "oceanography",
      "ocean-surface-topography",
      "ost",
      "sea-surface-temperature",
      "sst",
      "ocean-winds",
      "sea-surface-salinity",
      "sss",
      "gravity",
      "ocean-circulation",
      "sea",
      "sea-ice",
      "physical-oceanography"
    ],
    "Software": "PO.DAAC Tools and Services"
  },
  {
    "Update_Date": "2016-09-23",
    "Public Code Repo": "https://github.com/NASAWorldWindResearch/SpaceBirds",
    "Description": "SpaceBirds, a new innovative application intended as both a visual and educational application as well as a powerful tracking tool, can be used by professionals, students, and enthusiasts alike. The app is developed using NASA Web World Wind, and consists of an easy to use interface that allows the user to display all known tracked orbital objects and ground stations, and display their relative information, such as type, orbital period, low, medium, and high earth orbit, country of origin, and use, all in a 3D environment.",
    "License": [
      "CC0"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWindResearch/SpaceBirds/archive/master.zip",
    "Contributors": [
      "bwstewart389",
      "Beak-man",
      "farahsalah",
      "Gagaus"
    ],
    "Labor_Hours": 223440,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "orbital dynamics",
      "application"
    ],
    "Software": "NASA WorldWind Research: SpaceBirds"
  },
  {
    "Update_Date": "2016-09-21",
    "Public Code Repo": "https://github.com/NASAWorldWindResearch/Quake-Hunter",
    "Description": "3D visualization of earthquakes using their actual depth below the surface.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWindResearch/Quake-Hunter/archive/master.zip",
    "Contributors": [
      "KhaledSharif",
      "Beak-man",
      "farahsalah",
      "Gagaus",
      "bench4ng",
      "PJHogan"
    ],
    "Labor_Hours": 1632,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "orbital dynamics",
      "application"
    ],
    "Software": "NASA WorldWind Research: Quake-Hunter"
  },
  {
    "Update_Date": "2016-09-14",
    "Public Code Repo": "https://github.com/NASAWorldWindResearch/WorldWeather",
    "Description": "The largest three-dimensional web-based interactive browser of satellite, weather, climate, and other time-aware geospatial data on the web, built upon NASA's revolutionary WorldWind technology.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWindResearch/WorldWeather/archive/master.zip",
    "Contributors": [
      "KhaledSharif",
      "Beak-man",
      "farahsalah"
    ],
    "Labor_Hours": 44816,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "weather",
      "climate",
      "geospatial data",
      "application"
    ],
    "Software": "NASA WorldWind Research: WorldWeather"
  },
  {
    "Update_Date": "2016-09-09",
    "Public Code Repo": "https://github.com/NASAWorldWindResearch/WorldWindExplorer",
    "Description": "A geo-browser app framework based on NASA Web World Wind.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWindResearch/WorldWindExplorer/archive/master.zip",
    "Contributors": [
      "emxsys"
    ],
    "Labor_Hours": 110032,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "weather",
      "climate",
      "geospatial data",
      "application"
    ],
    "Software": "NASA WorldWind Research: WorldWindExplorer"
  },
  {
    "Update_Date": "2016-08-06",
    "Public Code Repo": "https://github.com/NASAWorldWindResearch/EarthquakeApp",
    "Description": "Magnetic Field Data Anomaly Detection Analysis Sandbox. Earthquake Signal Precursors, ESP, detection and forecast. This project aims to apply Dr. Friedemann Freundâ€™s theory of earthquake precursor science. Dr. Freund's theory states that as stresses in the Earthâ€™s crust increase during the time leading up to a major earthquake, atomic-scale defects in the mineral grains and along the boundaries between mineral grains become activated. The ultimate goal of this project is to observe live anomalous EM field fluctuations and accurately forecast an earthquake within a specified geographical range.",
    "License": [
      "CC0"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWindResearch/EarthquakeApp/archive/master.zip",
    "Contributors": [
      "KhaledSharif",
      "farahsalah",
      "Gagaus",
      "bench4ng",
      "PJHogan"
    ],
    "Labor_Hours": 53200,
    "Categories": [
      "WorldWind",
      "magnetic field data",
      "satellite",
      "earthquake",
      "electromagnetic radiation",
      "application"
    ],
    "Software": "NASA WorldWind Research: EarthquakeApp"
  },
  {
    "Update_Date": "2016-09-28",
    "Public Code Repo": "https://github.com/OpenMDAO/testflo",
    "Description": "A simple python testing framework that can run unit tests under MPI (or not).",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/testflo/archive/master.zip",
    "Contributors": [
      "naylor-b",
      "swryan",
      "kmarstellar"
    ],
    "Labor_Hours": 752,
    "Categories": [
      "python",
      "openmdao",
      "unit testing",
      "MPI"
    ],
    "Software": "OpenMDAO: testflo"
  },
  {
    "Update_Date": "2016-09-28",
    "Public Code Repo": "https://github.com/OpenMDAO/OpenMDAO",
    "Description": "OpenMDAO is a high-performance computing platform for systems analysis and optimization that enables you to decompose your models, making them easier to build and maintain, while still solving them in a tightly-coupled manner with efficient parallel numerical methods.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/OpenMDAO/archive/master.zip",
    "Contributors": [
      "naylor-b",
      "swryan",
      "kmarstellar",
      "Kenneth-T-Moore",
      "dwmunster",
      "JustinSGray",
      "hschilling",
      "crobinsonut",
      "thearn",
      "adamnagel",
      "relf",
      "timothy-thomas",
      "fcapristan",
      "fzahle",
      "jaredthomas68",
      "volgy",
      "amoondra",
      "ksmyth",
      "shamsheersc19",
      "pziegfeld",
      "sanbales",
      "lattmann",
      "jonathonw"
    ],
    "Labor_Hours": 58912,
    "Categories": [
      "python",
      "openmdao",
      "systems analysis",
      "optimization"
    ],
    "Software": "OpenMDAO"
  },
  {
    "Update_Date": "2016-09-14",
    "Public Code Repo": "https://github.com/OpenMDAO/benchmark",
    "Description": "Prototype of a benchmarking/regression tool.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/benchmark/archive/master.zip",
    "Contributors": [
      "swryan",
      "kmarstellar"
    ],
    "Labor_Hours": 656,
    "Categories": [
      "python",
      "openmdao",
      "benchmark",
      "regression"
    ],
    "Software": "OpenMDAO: benchmark"
  },
  {
    "Update_Date": "2016-08-11",
    "Public Code Repo": "https://github.com/OpenMDAO/CADRE",
    "Description": "OpenMDAO plug-in.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/CADRE/archive/master.zip",
    "Contributors": [
      "swryan",
      "kmarstellar"
    ],
    "Labor_Hours": 2496,
    "Categories": [
      "python",
      "openmdao",
      "benchmark",
      "regression"
    ],
    "Software": "OpenMDAO: Cadre"
  },
  {
    "Update_Date": "2016-06-10",
    "Public Code Repo": "https://github.com/OpenMDAO/NRELTraining",
    "Description": "An old problem used for NREL Training, converted to OpenMDAO 1.x",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/NRELTraining/archive/master.zip",
    "Contributors": [
      "jcchin",
      "thearn",
      "Kenneth-T-Moore"
    ],
    "Labor_Hours": 3968,
    "Categories": [
      "python",
      "openmdao",
      "NREL",
      "training"
    ],
    "Software": "OpenMDAO: NRELTraining"
  },
  {
    "Update_Date": "2016-04-11",
    "Public Code Repo": "https://github.com/OpenMDAO/MBI",
    "Description": "MBI sub-branch of the OpenMDAO repository.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/MBI/archive/master.zip",
    "Contributors": [
      "hwangjt",
      "naylor-b",
      "JustinSGray",
      "hschilling",
      "thearn"
    ],
    "Labor_Hours": 320,
    "Categories": [
      "fortran",
      "openmdao",
      "NAS",
      "supercomputer"
    ],
    "Software": "OpenMDAO: MBI"
  },
  {
    "Update_Date": "2016-01-20",
    "Public Code Repo": "https://github.com/OpenMDAO/flops_wrapper",
    "Description": "OpenMDAO component wrapper for FLOPS.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/flops_wrapper/archive/master.zip",
    "Contributors": [
      "fcapristan",
      "kmarsteller",
      "setowns1",
      "hschilling",
      "Kenneth-T-Moore",
      "pziegfeld"
    ],
    "Labor_Hours": 2416,
    "Categories": [
      "python",
      "openmdao",
      "flops"
    ],
    "Software": "OpenMDAO: flops_wrapper"
  },
  {
    "Update_Date": "2015-09-03",
    "Public Code Repo": "https://github.com/OpenMDAO/OpenMDAO-Framework",
    "Description": "A python based open-source (Apache 2.0) engineering analysis framework designed to facilitate the use of MDAO. To add issues, visit our user forums at http://www.openmdao.org/forum . NOTE: this version is no longer being developed. The current active version can be found here: https://github.com/OpenMDAO/OpenMDAO.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/OpenMDAO-Framework/archive/dev.zip",
    "Contributors": [
      "naylor-b",
      "swryan",
      "setowns1",
      "hschilling",
      "Kenneth-T-Moore",
      "pziegfeld",
      "JustinSGray",
      "justinopenmdao",
      "thearn",
      "crobinsonut",
      "cnkavanaugh",
      "cwmine",
      "jcchin",
      "dykeag",
      "eshendricks",
      "relf",
      "andrewning",
      "fzahle",
      "youngklee"
    ],
    "Labor_Hours": 102368,
    "Categories": [
      "python",
      "openmdao",
      "framework",
      "MDAO"
    ],
    "Software": "OpenMDAO: OpenMDAO-Framework"
  },
  {
    "Update_Date": "2015-03-24",
    "Public Code Repo": "https://github.com/OpenMDAO/OpenMDAO-Procedures",
    "Description": "Procedures for OpenMDAO maintainers.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/OpenMDAO-Procedures/archive/master.zip",
    "Contributors": [
      "kmarsteller",
      "naylor-b",
      "Kenneth-T-Moore",
      "pziegfeld"
    ],
    "Labor_Hours": 256,
    "Categories": [
      "python",
      "openmdao",
      "mdao",
      "procedures",
      "maintainers"
    ],
    "Software": "OpenMDAO: OpenMDAO-Procedures"
  },
  {
    "Update_Date": "2015-02-17",
    "Public Code Repo": "https://github.com/OpenMDAO/airline-allocation",
    "Description": "Airline allocation problem.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/airline-allocation/archive/master.zip",
    "Contributors": [
      "swryan",
      "crobinsonut",
      "hschilling"
    ],
    "Labor_Hours": 1040,
    "Categories": [
      "python",
      "openmdao",
      "mdao",
      "airline",
      "allocation"
    ],
    "Software": "OpenMDAO: OpenMDAO-airline-allocation"
  },
  {
    "Update_Date": "2014-08-20",
    "Public Code Repo": "https://github.com/OpenMDAO/openmdao_testapp",
    "Description": "Web app to manage openmdao automated testing.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/openmdao_testapp/archive/master.zip",
    "Contributors": [
      "swryan",
      "crobinsonut",
      "hschilling"
    ],
    "Labor_Hours": 272,
    "Categories": [
      "python",
      "openmdao",
      "mdao",
      "application",
      "testing"
    ],
    "Software": "OpenMDAO: openmdao_testapp"
  },
  {
    "Update_Date": "2014-07-16",
    "Public Code Repo": "https://github.com/OpenMDAO/marathon-aircraft",
    "Description": "Aero-Velo Marathon Aircraft.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/marathon-aircraft/archive/master.zip",
    "Contributors": [
      "treforevans",
      "JustinSGray"
    ],
    "Labor_Hours": 224,
    "Categories": [
      "python",
      "openmdao",
      "mdao",
      "aeronautics",
      "aircraft"
    ],
    "Software": "OpenMDAO: marathon-aircraft"
  },
  {
    "Update_Date": "2014-04-18",
    "Public Code Repo": "https://github.com/OpenMDAO/pyV3D",
    "Description": "Python web-based geometry viewer.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/pyV3D/archive/master.zip",
    "Contributors": [
      "treforevans",
      "JustinSGray"
    ],
    "Labor_Hours": 9440,
    "Categories": [
      "C",
      "openmdao",
      "mdao",
      "geometry",
      "viewer"
    ],
    "Software": "OpenMDAO: pyV3D"
  },
  {
    "Update_Date": "2014-04-18",
    "Public Code Repo": "https://github.com/OpenMDAO/pygem",
    "Description": "Python wrappers for the GEM libraries diamond and quartz.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/pygem/archive/master.zip",
    "Contributors": [
      "naylor-b",
      "Kenneth-T-Moore"
    ],
    "Labor_Hours": 13248,
    "Categories": [
      "C",
      "openmdao",
      "mdao",
      "gem",
      "wrapper"
    ],
    "Software": "OpenMDAO: pygem"
  },
  {
    "Update_Date": "2013-12-05",
    "Public Code Repo": "https://github.com/OpenMDAO/GEM",
    "Description": "Geometry Environment for MDAO.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/GEM/archive/master.zip",
    "Contributors": [
      "naylor-b",
      "JustinSGray"
    ],
    "Labor_Hours": 17024,
    "Categories": [
      "C",
      "openmdao",
      "mdao",
      "gem",
      "wrapper"
    ],
    "Software": "OpenMDAO: GEM"
  },
  {
    "Update_Date": "2013-01-24",
    "Public Code Repo": "https://github.com/OpenMDAO/EGADS",
    "Description": "EGADS: Engineering Geometry Aerospace Design System.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/EGADS/archive/master.zip",
    "Contributors": [
      "haimes",
      "JustinSGray"
    ],
    "Labor_Hours": 34128,
    "Categories": [
      "C",
      "openmdao",
      "mdao",
      "geometry",
      "wrapper",
      "aerospace"
    ],
    "Software": "OpenMDAO: EGADS"
  },
  {
    "Update_Date": "2013-12-04",
    "Public Code Repo": "https://github.com/OpenMDAO/SimplePylab",
    "Description": "Simple script to create virtual environment with numpy, scipy, matplotlib and ipython.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/SimplePylab/archive/master.zip",
    "Contributors": [
      "kmarsteller"
    ],
    "Labor_Hours": 816,
    "Categories": [
      "python",
      "openmdao",
      "mdao",
      "gem",
      "geometry"
    ],
    "Software": "OpenMDAO: SimplePylab"
  },
  {
    "Update_Date": "2013-12-04",
    "Public Code Repo": "https://github.com/OpenMDAO/EngSketchPad",
    "Description": "ESP: The Engineering Sketch Pad.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/OpenMDAO/EngSketchPad/archive/master.zip",
    "Contributors": [
      "JustinSGray"
    ],
    "Labor_Hours": 48432,
    "Categories": [
      "python",
      "openmdao",
      "mdao"
    ],
    "Software": "OpenMDAO: EngSketchPad"
  },
  {
    "Update_Date": "2013-12-02",
    "Public Code Repo": "https://github.com/JustinSGray/pyCycle",
    "Description": "This plugin provides basic thermodynamic cycle modeling tools for OpenMDAO. It's main feature is the inclusion of a FlowStation variable that provides access to isentropic flow relationships. This is an OpenMDAO plugin, so you need to have already installed a version of OpenMDAO.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/JustinSGray/pyCycle/archive/master.zip",
    "Contributors": [
      "JustinSGray",
      "cheesie67",
      "thearn",
      "kmarsteller",
      "jcchin"
    ],
    "Labor_Hours": 3952,
    "Categories": [
      "python",
      "openmdao",
      "mdao",
      "plugin",
      "modeling"
    ],
    "Software": "PyCycle - An Cycle Modeling Tool For Design With Gradient Based Optimization"
  },
  {
    "Update_Date": "2017-01-20",
    "Public Code Repo": "https://github.com/nasa/GSAP",
    "Description": "The Generic Software Architecture for Prognostics (GSAP) is a framework for applying prognostics. It makes applying prognostics easier by implementing many of the common elements across prognostic applications. The standard interface enables reuse of prognostic algorithms and models across systems using the GSAP framework.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/GSAP/archive/master.zip",
    "Contributors": [
      "teubert",
      "matthewjdaigle",
      "jason-watkins"
    ],
    "Labor_Hours": 7952,
    "Categories": [
      "c++",
      "framework",
      "library",
      "Prognostics",
      "PHM",
      "Health Management",
      "Health Monitoring"
    ],
    "Software": "GSAP: General Software Architecture for Prognostics"
  },
  {
    "Update_Date": "2017-11-09",
    "Public Code Repo": "https://github.com/nasa/RVLib",
    "Description": "The RandomVariable Library is an C++ open source library for representing statistical uncertainty in a precise, readable, and usable manner. Value uncertainty can be represented with a parametric distribution such as Gaussian or a nonparametric distribution such as a weighted sample set. The library enables sampling from a parametric or fitting to a parametric distribution. Calculations may also be performed on multiple RandomVariable objects by sampling/overlaying techniques.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/RVLib/archive/master.zip",
    "Contributors": [
      "cullo7",
      "shankarsankararaman",
      "teubert"
    ],
    "Labor_Hours": 544,
    "Categories": [
      "c++",
      "library",
      "statistics",
      "uncertainty"
    ],
    "Software": "C++ Random Variable Library"
  },
  {
    "Update_Date": "2017-03-07",
    "Public Code Repo": "https://github.com/nasa/sitepod/",
    "Description": "Sitepod; A Sitemap Generator.",
    "License": [
      "GPLv3"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa/sitepod/",
    "Contributors": [
      "lewismc",
      "eniad "
    ],
    "Labor_Hours": 1632,
    "Categories": [
      "PHP",
      "Sitemap",
      "Web",
      "WebCrawler"
    ],
    "Software": "Sitepod"
  },
  {
    "Update_Date": "2017-08-16",
    "Public Code Repo": "https://github.com/nasa/pyCMR",
    "Description": "Python client library that abstracts CMR API calls for search, ingest, update, and deletion of collections and granules.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/cmr/wiki",
    "Contributors": [
      "manilmaskey, amarouane"
    ],
    "Labor_Hours": 1056,
    "Categories": [
      "APL Client Library",
      "Client SDK"
    ],
    "Software": "pyCMR"
  },
  {
    "Update_Date": "2017-03-31",
    "Public Code Repo": "https://github.com/nasa/mmt",
    "Description": "The Metadata Management Tool is a web application to assist users in managing metadata on various Nasa.gov applications.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/mmt",
    "Contributors": [
      "mreese84"
    ],
    "Labor_Hours": 266128,
    "Categories": [
      "CMR",
      "Ruby",
      "application"
    ],
    "Software": "Metadata Management Tool (MMT)"
  },
  {
    "Update_Date": "2017-05-01",
    "Public Code Repo": "https://github.com/nasa/CCDD",
    "Description": "The Core Flight System (CFS) Command and Data Dictionary (CDD) utility, or CCDD, is a software tool for managing the data structures for CFS and CFS applications, including telemetry data structures, command information, and other data pertinent to a CFS project.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Johnson Space Center",
    "External Link": "https://github.com/nasa/CCDD",
    "Contributors": [
      "KevinMcCluney"
    ],
    "Labor_Hours": 512576,
    "Categories": [
      "CFS",
      "java",
      "SQL"
    ],
    "Software": "CFS Command and Data Dictionary Tool (CCDDT)"
  },
  {
    "Update_Date": "2017-03-03",
    "Public Code Repo": "https://github.com/nasa/MAV",
    "Description": "Modeling, Analysis, and Visualization (MAV) of ATM concepts",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/MAV",
    "Contributors": [
      "ksutka"
    ],
    "Labor_Hours": 86736,
    "Categories": [
      "Toolkit",
      "Analysis",
      "Visualization"
    ],
    "Software": "MAV"
  },
  {
    "Update_Date": "2017-02-27",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/CBCHI",
    "Description": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI) takes in raw Landsat 8 surface reflectance products and produces two maps to be opened in ArcMap that can be used to identify chlorophyll hotspots. It also creates a true color image.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/CBCHI",
    "Contributors": [
      "kdottiemo"
    ],
    "Labor_Hours": 64,
    "Categories": [
      "Landsat",
      "imagery",
      "application"
    ],
    "Software": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI)"
  },
  {
    "Update_Date": "2017-04-25",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/VOCAL",
    "Description": "Visualization of CALIPSO (VOCAL). A CALIPSO Cross Cutting tool for visualizing data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/VOCAL",
    "Contributors": [
      "kdottiemo, Smewhen"
    ],
    "Labor_Hours": 3600,
    "Categories": [
      "visualization",
      "python",
      "application"
    ],
    "Software": "Visualization of CALIPSO (VOCAL)"
  },
  {
    "Update_Date": "2017-03-21",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/MASC",
    "Description": "This code removes clouds, cloud shadow, water, and snow pixels from Landsat scenes using the cloud mask layer that is provided with Landsat data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/MASC",
    "Contributors": [
      "kdottiemo"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "Landsat",
      "mask layer",
      "application"
    ],
    "Software": "Move Away Superfluous Clouds (MASC)"
  },
  {
    "Update_Date": "2017-05-05",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/GC-ReDI",
    "Description": "This Google Earth Engine software quantifies the decreasing water surface area in Lake Mead and the lower Grand Canyon and assesses the resulting changes in land cover â€“specifically, riparian vegetation and riparian sediment. The software provides images, statistics, and graphs to understand the drought-induced changes.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/GC-ReDI",
    "Contributors": [
      "kdottiemo"
    ],
    "Labor_Hours": 928,
    "Categories": [
      "imagery",
      "visualization",
      "application"
    ],
    "Software": "GC-ReDI"
  },
  {
    "Update_Date": "2017-05-31",
    "Public Code Repo": "https://github.com/nasa/MultiDop",
    "Description": "MultiDop is a Python-based interface between the C-based DDA code developed at University of Oklahoma and the Python Atmospheric Radiation Measurement Radar Toolkit (Py-ART) software developed at Argonne National Lab. Use this software to perform 3D wind analyses using 2-3 independent Doppler radars.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/MultiDop/wiki",
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 3536,
    "Categories": [
      "Earth Science",
      "Toolkit",
      "Meteorology",
      "Radar",
      "Doppler",
      "Winds"
    ],
    "Software": "Multiple-Doppler Radar Analysis Toolkit (MultiDop)"
  },
  {
    "Update_Date": "2017-07-13",
    "Public Code Repo": "https://github.com/nasa/Kepler-FLTI",
    "Description": " Illustrate using the Flux-Level Transit Injection (FLTI) Tests of the Kepler pipeline for Data Release 25.  This code generates the figures in the documentation of FLTI, Burke, C.J. and Catanzarite, J. 2017, Planet Detection Metrics: Per-Target Flux-Level Transit Injection Tests of TPS for Data Release 25, KSCI-19109-001",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/Kepler-FLTI",
    "Contributors": [
      "Christopher J. Burke"
    ],
    "Labor_Hours": 112,
    "Categories": [
      "Kepler"
    ],
    "Software": "Kepler-FLTI"
  },
  {
    "Update_Date": "2017-07-13",
    "Public Code Repo": "https://github.com/nasa/KeplerPORTs",
    "Description": "Illustrate making use of numerous Kepler Planet Occurrence Rate Data Products for Data Release 25 and SOC 9.3 Kepler Pipeline version.  This code generates a detection contour according to the documentation Burke, C.J. and Catanzarite, J. 2017, Planet Detection Metrics: Per-Target Detection Contours for Data Release 25, KSCI-19111-001",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/KeplerPORTs",
    "Contributors": [
      "Christopher J. Burke"
    ],
    "Labor_Hours": 224,
    "Categories": [
      "Kepler"
    ],
    "Software": "KeplerPORTs"
  },
  {
    "Update_Date": "2017-06-12",
    "Public Code Repo": "https://github.com/nasa/kepler-robovetter",
    "Description": "The Kepler DR25 Robovetter code. The Robovetter dispositions Kepler Threshold Crossing Events (TCEs) into Planet Candidates (PCs) and False Positives (FPs) using sophisticated vetting metrics and decision-tree logic.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/nasa/kepler-robovetter",
    "Contributors": [
      "Jeff Coughlin"
    ],
    "Labor_Hours": 464,
    "Categories": [
      "Kepler",
      "DR25",
      "Transits",
      "Vetting"
    ],
    "Software": "Kepler DR25 Robovetter"
  },
  {
    "Update_Date": "2017-12-08",
    "Public Code Repo": "https://github.com/nasa/openvsp3plugin",
    "Description": "The OpenVSP3Plugin is a JAVA software tool that allows for the interface between OpenVSP and an analysis framework such as Phoenix Integrationâ€™s ModelCenter or the NASA developed OpenMDAO software. The OpenVSP3Plugin is designed to work on any computer desktop platform (Mac, Linux, and Windows) that has a local installation of JAVA.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/openvsp3plugin",
    "Contributors": [
      "jrwelstead",
      "jfenbert"
    ],
    "License Link": "https://www.apache.org/licenses/LICENSE-2.0",
    "Labor_Hours": 1392,
    "License Description": "This free software license includes certain patent termination and indemnification provisions, compatible with GPL3.",
    "Categories": [
      "OpenVSP",
      "Geometry",
      "OpenMDAO",
      "ModelCenter"
    ],
    "Software": "OpenVSP3Plugin"
  },
  {
    "Update_Date": "2016-06-19",
    "Public Code Repo": "https://github.com/NASAWorldWind/WebWorldWind",
    "Description": "NASA World Wind in Java for HTML5",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWind/WebWorldWind",
    "Contributors": [
      "balhar-jakub",
      "tag3",
      "servetg",
      "strikerM",
      "revo09",
      "pdavidc",
      "emxsys",
      "GabrielePrestifilippo",
      "zglueck",
      "carla-orru",
      "AkeluX",
      "RandolphKim",
      "revision0"
    ],
    "Labor_Hours": 79696,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "orbital dynamics",
      "web application"
    ],
    "Software": "WebWorldWind"
  },
  {
    "Update_Date": "2016-06-19",
    "Public Code Repo": "https://github.com/NASAWorldWind/NASAWorldWind.github.io",
    "Description": "NASA World Wind organization website",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWind/NASAWorldWind.github.io",
    "Contributors": [
      "pdavidc",
      "zglueck"
    ],
    "Labor_Hours": 80,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "orbital dynamics",
      "github"
    ],
    "Software": "NASAWorldWind.github.io"
  },
  {
    "Update_Date": "2016-06-19",
    "Public Code Repo": "https://github.com/NASAWorldWind/WorldWindAndroid",
    "Description": "NASA World Wind in Java for Android",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWind/WorldWindAndroid",
    "Contributors": [
      "pdavidc",
      "emxsys",
      "zglueck",
      "Beak-man"
    ],
    "Labor_Hours": 39104,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "orbital dynamics",
      "android",
      "application"
    ],
    "Software": "WorldWindAndroid"
  },
  {
    "Update_Date": "2016-06-19",
    "Public Code Repo": "https://github.com/NASAWorldWind/WorldWindServerKit",
    "Description": "NASA World Wind map server kit",
    "License": [
      "GPLv2"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWind/WorldWindServerKit",
    "Contributors": [
      "pdavidc",
      "emxsys"
    ],
    "Labor_Hours": 178336,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "orbital dynamics",
      "server kit",
      "GeoServer",
      "java"
    ],
    "Software": "WorldWindServerKit"
  },
  {
    "Update_Date": "2016-06-19",
    "Public Code Repo": "https://github.com/NASAWorldWind/WorldWindJava",
    "Description": "NASA World Wind in Java",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://github.com/NASAWorldWind/WorldWindJava",
    "Contributors": [
      "pdavidc",
      "emxsys",
      "zglueck",
      "tag3",
      "moovida"
    ],
    "Labor_Hours": 316160,
    "Categories": [
      "WorldWind",
      "visual simulation",
      "satellite",
      "orbital dynamics",
      "web application",
      "java"
    ],
    "Software": "WorldWindJava"
  },
  {
    "Update_Date": "2016-06-22",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/GATER",
    "Description": "Geographic Applications for Transitioning Everglades Regions (GATER). Meant for running within the Google Earth Engine API, this JavaScript code provides an algorithm for cloud removal from Landsat scenes, and runs a classification scheme which classifies mangrove extent within Everglades National Park.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/GATER",
    "Contributors": [
      "kdottiemo",
      "egotschalk"
    ],
    "Labor_Hours": 15376,
    "Categories": [
      "Geographic Applications for Transitioning Everglades Regions",
      "Google Earth API",
      "JavaScript",
      "algorithm",
      "cloud removal",
      "Landsat scenes",
      "classification scheme",
      "Everglades National Park"
    ],
    "Software": "GATER"
  },
  {
    "Update_Date": "2016-06-22",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/SWIM",
    "Description": "This tool allows users to identify surface water from the most current imagery available, or to monitor temporal changes of surface water in their management area.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-19013-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov",
      "Kathleen Moore"
    ],
    "Labor_Hours": 3456,
    "Categories": [
      "current imagery",
      "temporal changes",
      "surface water"
    ],
    "Software": "SWIM"
  },
  {
    "Update_Date": "2016-06-23",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/ESVIA",
    "Description": "Elkhorn Slough Vegetation Imagery Assessment (ESVIA). This suite of Google Earth Engine Javascript code analyzes vegetation change in a historical time-series using Landsat, as well as current-day vegetation productivity using Sentinel 2A imagery. Included in the scripts are operations such as image acquisition, image processing, and application.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-19012-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov",
      "kdottiemo"
    ],
    "Labor_Hours": 144,
    "Categories": [
      "Google Earth",
      "java",
      "vegetation",
      "vegetation imagery",
      "vegetation change",
      "landsat",
      "Sentinel 2A imagery"
    ],
    "Software": "ESVIA"
  },
  {
    "Update_Date": "2016-06-23",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/PiCo",
    "Description": "Pixelwise Correlation-Based Landscape Classification (PiCo). PiCo, an R script, automates and regionalizes the Climate Landscape Response (CLaRe) metrics developed by Wallace et al 2016. This script performs a pixel-wise regression analysis to produce rasters whose correlation values can be evaluated to target buffelgrass.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-19015-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov",
      "kdottiemo"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "R",
      "climate",
      "pixel-wise regression analysis",
      "buffelgrass",
      "pixel-wise",
      "correlation-based",
      "landscape"
    ],
    "Software": "PiCo"
  },
  {
    "Update_Date": "2016-06-23",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/POPP",
    "Description": "Palm Oil Plantation Predictor (POPP). This Python software automates the process of downloading, atmospherically correcting, and processing raster data in order to identify potential palm oil plantations.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-18862-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov",
      "kdottiemo",
      "kylepeterson777"
    ],
    "Labor_Hours": 32,
    "Categories": [
      "palm oil",
      "plantation",
      "python",
      "atmospherically",
      "raster"
    ],
    "Software": "POPP"
  },
  {
    "Update_Date": "2016-06-23",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/CBCHI",
    "Description": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI) takes in raw Landsat 8 surface reflectance products and produces two maps to be opened in ArcMap that can be used to identify chlorophyll hotspots. It also creates a true color image.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-18794-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov",
      "kdottiemo"
    ],
    "Labor_Hours": 64,
    "Categories": [
      "Chesapeake Bay",
      "chlorophyll",
      "Landsat 8",
      "ArcMap"
    ],
    "Software": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI)"
  },
  {
    "Update_Date": "2018-07-16",
    "Public Code Repo": "https://github.com/Goddard-Fortran-Ecosystem/gFTL",
    "Description": "This project provides Fortran templates for defining software containers.   Of necessity the capabilities are a bit manual as compared to C++ STL, but still quite useful.  Container types supported for now are Vector, Set, and Map.   Contained objects can be specified as any intrinsic type or derived type.   This includes deferred length strings and/or unlimited polymorphic entities.   The container can contain a single static type or allow for subtypes.   In the polymorphic case, the container can either keep deep copies (allocatable) or shallow references (pointer).",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://github.com/Goddard-Fortran-Ecosystem/gFTL/wiki",
    "Languages": [
      "Fortran"
    ],
    "Contributors": [
      "tclune",
      "doronf-cortica"
    ],
    "License Link": "https://www.apache.org/licenses/LICENSE-2.0",
    "Labor_Hours": 6832,
    "License Description": "This free software license includes certain patent termination and indemnification provisions, compatible with GPL3.",
    "Categories": [
      "Templates",
      "Fortran",
      "Containers"
    ],
    "Software": "The Goddard Fortran Template Library"
  },
  {
    "Update_Date": "2017-12-01",
    "Public Code Repo": "https://github.com/nasa/SAFE-DART",
    "Description": "Software Architecture Framework for Extensibility using Dynamic Assembly of Reflective Types (SAFE-DART) is a framework for Qt-based C++ applications which simplifies the process of writing modular object-oriented code.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/SAFE-DART",
    "Contributors": [
      "JordanRHiggins"
    ],
    "Labor_Hours": 960,
    "Categories": [
      "C++",
      "Framework",
      "Qt"
    ],
    "Software": "SAFE-DART"
  },
  {
    "Update_Date": "2018-01-18",
    "Public Code Repo": "https://github.com/nasa/ISS_Camera_Geolocate",
    "Description": "Python software library that facilitates the geolocation of photographs and video frames from the International Space Station (ISS).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/ISS_Camera_Geolocate/wiki",
    "Contributors": [
      "tjlang"
    ],
    "Labor_Hours": 384,
    "Categories": [
      "Earth Science",
      "Toolkit",
      "Meteorology",
      "Cameras",
      "ISS",
      "Photographs"
    ],
    "Software": "ISS Camera Geolocate"
  },
  {
    "Update_Date": "2018-01-30",
    "Public Code Repo": "https://github.com/nasa/gfr",
    "Description": "GFR (Glenn Flux Reconstruction) is a high-order computational fluid dynamics (CFD) Fortran code for large-eddy simulations. It is based on the simple and efficient flux reconstruction method and accurate to arbitrary order through a user-supplied input parameter. It is currently capable of using unstructured grids containing quadrilateral and hexahedra elements. The current release only supports UNIX-like operating systems.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/nasa/gfr",
    "Languages": [
      "Fortran"
    ],
    "Contributors": [
      "scspiegel"
    ],
    "Labor_Hours": 38464,
    "Categories": [
      "CFD",
      "LES",
      "Flux Reconstruction",
      "Fortran"
    ],
    "Software": "GFR"
  },
  {
    "Update_Date": "2018-03-08",
    "Public Code Repo": "https://github.com/nasa/MISR-View",
    "Description": "misr_view is a graphical user interface-driven display and analysis tool for use with MISR files that use the HDF-EOS 'grid' interface. The display and analysis tools include simultaneous display of several data planes through color assignment, contrast enhancement, pseudo coloring, data value query, image rotation, creation of stereo anaglyphs, zooming, linked analysis and view windows, vector overlays and map projections.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://misr.jpl.nasa.gov/",
    "Languages": [
      "IDL"
    ],
    "Contributors": [
      "Charles Thompson",
      "Jeffery Hall"
    ],
    "Labor_Hours": 15920,
    "Categories": [
      "Visualization",
      "Analysis",
      "Earth Science"
    ],
    "Software": "MISR View"
  },
  {
    "Update_Date": "2018-03-13",
    "Public Code Repo": "http://senssoft.incubator.apache.org/releases/",
    "Description": "Apache SensSoft is a user activity logging and analytics system that enables developers to instrument and extract design and user insights from their applications. SensSoft incorporates a number of components that work together to provide user-experience researchers, project managers and software developers insights about how web applications are used. UserALE.js is an open source tool to quickly and efficiently instrument a JavaScript frontend application.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://senssoft.incubator.apache.org/",
    "Languages": [
      "JavaScript"
    ],
    "Contributors": [
      "Lewis.J.Mcgibbney@jpl.nasa.gov"
    ],
    "Labor_Hours": 576,
    "Categories": [
      "Logging",
      "Analytics",
      "Instrumentation"
    ],
    "Software": "Apache SensSoft (Incubating) UserALE.js"
  },
  {
    "Update_Date": "2018-03-13",
    "Public Code Repo": "https://github.com/ESIPFed/sweet",
    "Description": "Apache SensSoft is a user activity logging and analytics system that enables developers to instrument and extract design and user insights from their applications. SensSoft incorporates a number of components that work together to provide user-experience researchers, project managers and software developers insights about how web applications are used. UserALE.js is an open source tool to quickly and efficiently instrument a JavaScript frontend application.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/ESIPFed/sweet",
    "Languages": [
      "W3C Turtle"
    ],
    "Contributors": [
      "Lewis.J.Mcgibbney@jpl.nasa.gov"
    ],
    "Labor_Hours": 96,
    "Categories": [
      "Ontology",
      "Earth System Science"
    ],
    "Software": "SWEET Ontology Suite"
  },
  {
    "Update_Date": "2017-11-16",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/LCD",
    "Description": "The Normalized Difference Vegetation Index (NDVI) for the study time period is calculated and then compared to the maximum and minimum NDVI from a baseline range of years in order to calculate Relative Greenness (RG). The change in RG from the previous year is found, and this allows the user to identify abrupt change in vegetation.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/LCD",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 500,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "LCD"
  },
  {
    "Update_Date": "2018-03-19",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/LUCT",
    "Description": "We used the Google Earth Engine Code interface to create a classification of land use on the United States Virgin Islands (USVI). We used six classes: water, low density residential, high-density residential, forest/shrub, agriculture and barren. We included DEM, classification points, and landsat imagery bands to analyze the imagery.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/LUCT",
    "Languages": [
      "JavaScript"
    ],
    "Contributors": [
      "JDilger"
    ],
    "Labor_Hours": 208,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "LUCT"
  },
  {
    "Update_Date": "2018-01-08",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/SET",
    "Description": "Beta version of the Skyglow Estimation Toolbox. Documentation -> https://nasa-develop.github.io/SET/",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/SET",
    "Contributors": [
      "rba.eos@gmail.com",
      "Stanley Yu",
      "kenton.w.ross@nasa.gov",
      "Margaret Mulhern"
    ],
    "Labor_Hours": 20320,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "SET"
  },
  {
    "Update_Date": "2018-03-02",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/COVER",
    "Description": "This code develops calibration models using linear regression models with in-situ field data. The calibration models are then used to predict biomass (log), nitrogen percent, and nitrogen content for Landsat images from 2006-2016. Model results and data tables are output as separate files for each field season (i.e. winter and spring seasons).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/COVER",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 90,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "COVER"
  },
  {
    "Update_Date": "2018-02-02",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/WRIT",
    "Description": "For the AcoFixDual_Tool: Geolocates and rescales ACOLITE output to make it useful in ArcMap.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/WRIT",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 40,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "WRIT"
  },
  {
    "Update_Date": "2017-11-17",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/SAVeTrEE",
    "Description": "SAVeTrEE is a script within Google Earth Engine for classifying areas of vegetation mortality. It prompts the user for a year, duration, and spectral index for which a mortality map should be produced, then fits a trend line to an imagery time sequence of vegetative spectral index values calculated from Landsat multispectral data.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/SAVeTrEE",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 160,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "SAVeTrEE"
  },
  {
    "Update_Date": "2017-11-20",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/RIFRAF",
    "Description": "This software was created to address concerns of fire managers in the Missouri River Basin. Previously, fire managers inferred a regional fire risk from separate sources, (i.e. temperature maps, drought indices, and precipitation averages).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/RIFRAF",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 100,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "RIFRAF"
  },
  {
    "Update_Date": "2017-08-30",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/HAE",
    "Description": "Using the cloud-based computing power of Google Earth Engine (GEE), the Hydrologic Anomaly Index (HAE) is capable of uploading and analyzing large amounts of Earth observation climate data for the purpose of hydrologic analysis and monitoring. The end-user will be able to pull from and modify a library of scripts that are stored in Earth Engine, as well as upload and access data stored on a private data catalog. The final stage of development of the tool will include a more user-friendly application built using Googleâ€™s App Engine, in which users will be able to display data products and interactive maps.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/HAE",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 500,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "HAE"
  },
  {
    "Update_Date": "2017-08-07",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/CCROP",
    "Description": "Cover Crop Remotely Observed Performance (CCROP): The Maryland Department of Agriculture (MDA) is interested in verifying winter cover crop implementation and analyzing cover crop productivity using satellite imagery.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/CCROP",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 30,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "CCROP"
  },
  {
    "Update_Date": "2017-08-07",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/FAULT",
    "Description": "Flood Analysis Utilizing Landsat and ArcMap Tools (FAULT): This product was created in an effort to automate flood analysis throughout the Mississippi River Basin.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/NASA-DEVELOP/FAULT",
    "Contributors": [
      "jordan.s.vaa@nasa.gov"
    ],
    "Labor_Hours": 120,
    "Categories": [
      "Data & Image Processing"
    ],
    "Software": "FAULT"
  },
  {
    "Update_Date": "2013-12-05",
    "Public Code Repo": "https://github.com/nasajpl/tiledwms",
    "Description": "Tiled WMS is a software package consisting of image formatting and serving modules which facilitate the deployment of a web service capable of efficiently serving standards-based requests for georeferenced raster imagery at multiple spatial resolutions including, but not limited to, full spatial resolution. The software was originally developed at the Jet Propulsion Laboratory (JPL) to serve global daily composites of MODIS imagery. Since then, it has been deployed and repurposed in other installations, including at the Physical Oceanography Distributed Active Archive Center (PO.DAAC) in support of the State of the Oceans (SOTO) visualization tool (http://podaac-tools.jpl.nasa.gov/soto/), the Lunar Mapping and Modeling Project (LMMP) (http://lmmp.nasa.gov), and GIBS. Tiled WMS has also been used to serve data from JPL for NASA WorldWind and to produce movies at the Hayden Planetarium.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasajpl/tiledwms",
    "Contributors": [
      "jtroberts",
      "jeffreyrhall"
    ],
    "Labor_Hours": 2144,
    "Categories": [
      "Global Imagery Browse Services",
      "GIBS"
    ],
    "Software": "tiledwms"
  },
  {
    "Update_Date": "2018-04-12",
    "Public Code Repo": "https://github.com/nasa-jpl/T-ENTacle",
    "Description": "Extracting structured information from PDFs - and later, diagrams",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-jpl/T-ENTacle",
    "Contributors": [
      "wmb@waynemosesburke.com",
      "adidier17",
      "asitang",
      "vlall"
    ],
    "Labor_Hours": 2496,
    "Categories": [
      "Extract information"
    ],
    "Software": "T-ENTacle"
  },
  {
    "Update_Date": "2017-09-12",
    "Public Code Repo": "https://github.com/nasa-jpl/ASSESS",
    "Description": "Automatic Semantic Search Engine for Suitable Standards (ASSESS)",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-jpl/ASSESS",
    "Contributors": [
      "wmb@waynemosesburke.com",
      "adidier17",
      "giuseppetotaro"
    ],
    "Labor_Hours": 8208,
    "Categories": [
      "Automatic",
      "Semantic",
      "Search Engine"
    ],
    "Software": "ASSESS"
  },
  {
    "Update_Date": "2018-04-16",
    "Public Code Repo": "https://github.com/nasa-jpl/LiveView",
    "Description": "LiveView2 is a Qt frontend GUI for cuda_take, it displays focal plane data and basic analysis (such as the std. dev, dark subtraction, FFT, Spectral Profile, and Video Savant*-like* playback). Plots are implemented using the QCustomPlot library, which generates live color maps, bar graphs, and line graphs within the Qt C++ environment.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/nasa-jpl/LiveView",
    "Contributors": [
      "Elliott Liggett",
      "jackiryan"
    ],
    "Labor_Hours": 27072,
    "Categories": [
      "Qt frontend GUI",
      "focal plane",
      "QCustomPlot",
      "Qt",
      "C++"
    ],
    "Software": "LiveView"
  },
  {
    "Update_Date": "2017-08-02",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analysis",
    "Description": "The ontology analysis workflow is intended for validating ontologies based on the core IMCE ontologies. It uses OWL ontologies (TODO: OML AS INPUT) as input, and produces test reports in the quasi-standard JUnit format. The following will walk through the environment setup, and give instructions on how to run the workflow (a) locally and (b) on a CI system such as Jenkins.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analysis",
    "Contributors": [
      "StevenJenkinsJPL",
      "sjiherzig"
    ],
    "Labor_Hours": 336,
    "Categories": [
      "ontology analysis",
      "OWL ontologies",
      "ontology",
      "JUint",
      "Jenkins",
      "local",
      "JRuby",
      "SBT",
      "Java 8 (JDK)",
      "Make"
    ],
    "Software": "Ontology Analysis"
  },
  {
    "Update_Date": "2018-01-31",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.public",
    "Description": "JPL's IMCE ontologies for Model-Based Systems Engineering",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.public",
    "Contributors": [
      "StevenJenkinsJPL",
      "sjiherzig",
      "NicolasRouquette"
    ],
    "Labor_Hours": 177232,
    "Categories": [
      "ontology",
      "model-based",
      "systems engineering",
      "engineering"
    ],
    "Software": "Ontology Public"
  },
  {
    "Update_Date": "2018-04-14",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.workflow",
    "Description": "The ontology processing and profile generation workflow is intended for validating and generating MagicDraw-compatible SysML profiles for core IMCE ontologies. It uses OWL ontologies (TODO: OML AS INPUT) as input. The following will walk through the environment setup, and give instructions on how to run the workflow (a) locally and (b) on a CI system such as Jenkins.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.workflow",
    "Contributors": [
      "StevenJenkinsJPL",
      "sjiherzig",
      "NicolasRouquette",
      "bsatoriu"
    ],
    "Labor_Hours": 5536,
    "Categories": [
      "MagicDraw-compatible",
      "SysML profiles",
      "OWL ontologies",
      "ontology processing",
      "ontology profile generation"
    ],
    "Software": "Ontology Workflow"
  },
  {
    "Update_Date": "2018-04-12",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml",
    "Description": "Eclipse Tycho-based organization of the Ontological Modeling Language (OML)",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml",
    "Contributors": [
      "NicolasRouquette",
      "dyates"
    ],
    "Labor_Hours": 151232,
    "Categories": [
      "Eclipse Tycho-based organization",
      "Ontological Modeling Language",
      "OML"
    ],
    "Software": "Ontological Modeling Language (OML) Platform & Core Features"
  },
  {
    "Update_Date": "2018-04-11",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.tables",
    "Description": "Definition of the normalized schema tables for JPL's Ontological Modeling Framework (OMF) at https://jpl-imce.github.io/gov.nasa.jpl.imce.oml.tables/.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.tables",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 16400,
    "Categories": [
      "normalized schema tables",
      "Ontological Modeling Framework (OMF)",
      "OML"
    ],
    "Software": "Normalized Database Schema Tables for JPL's Ontological Modeling Language (OML)"
  },
  {
    "Update_Date": "2018-04-11",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.development.generators",
    "Description": "The Xcore OMF metamodel/schema is intended to be a single source for several derived artifacts whose contents is a projection of the OMF metamodel/schema. Among such artifacts, the cross-platform normalized database schema tables provide a single source specification for normalized database schema tables cross-compiled for several environments, including JVM (pure Java, pure Scala, mixed Java+Scala), JavaScript (Node.js), mixed (ScalaJS).",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.development.generators",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 10336,
    "Categories": [
      "cross-platform",
      "normalized database schema",
      "tables",
      "Ontological Modeling Framework (OMF)",
      "OML"
    ],
    "Software": "Xtend generators for JPL's Ontological Modeling Framework (OMF)"
  },
  {
    "Update_Date": "2018-04-10",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.xml.catalog.scope",
    "Description": "This is an enhancement of the Apache XML Commons Resolver library implementation of the OASIS XML Catalog 1.1 specification. OML uses an OASIS XML Catalog to establish a mapping between external URI references (i.e., http URIs) and corresponding local URI references (i.e., file URIs). Stanford's Protege Desktop uses OASIS XML Catalogs for the same purpose.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.xml.catalog.scope",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 288,
    "Categories": [
      "Apache",
      "XML",
      "Commons",
      "Resolver",
      "Library"
    ],
    "Software": "gov.nasa.jpl.imce.xml.catalog.scope"
  },
  {
    "Update_Date": "2018-03-08",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.frameless",
    "Description": "This Scala library provides a strongly typed API for processing Ontological Modeling Language data on Apache Spark using the expressive type extensions provided by Frameless.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.frameless",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 7072,
    "Categories": [
      "Scala",
      "API",
      "Library",
      "Ontological Modeling Framework",
      "OMF"
    ],
    "Software": "Scala/Frameless-based API for the Ontological Modeling Language"
  },
  {
    "Update_Date": "2018-03-08",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.binding.owlapi",
    "Description": "The OWL API binding for OMF implements the OMF Core functional API using the OWL API. This particular binding captures the conventions and restrictions on the use of OWL2-DL adopted for the development of JPL's Integrated Model-Centric Engineering (IMCE) ontologies.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.binding.owlapi",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 10080,
    "Categories": [
      "OWL",
      "API",
      "binding",
      "Ontological Modeling Language",
      "OML"
    ],
    "Software": "OWL API binding for OMF (Ontological Modeling Framework)"
  },
  {
    "Update_Date": "2018-03-08",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.core",
    "Description": "The OMG core functional API adopts techniques from the field of functional programming languages, particularly Scala, for specifying the vocabulary of ontological modeling as a set of abstract types (that is, no commitment implied or assumed about any implementation of these abstract types) and a set of functional operations on these abstract types (that is, operations in the mathematical sense of pure functions that compute output values based on input values). This functional paradigm for specifying a domain allows a clean separation between the domain of ontological modeling (i.e., the focus of the OMF Core Functional API) from specific bindings for standards-based technology frameworks such as W3C's OWL, OMG's UML/SysML and, potentially, others. More importantly, the functional nature of this OMF Core API allows decoupling algorithms for analyzing, constructing, auditing, verifying, reasoning about OMF ontological models independently of the particular technology in which these ontological models are represented.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.omf.scala.core",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 4656,
    "Categories": [
      "functional programming",
      "API",
      "ontological modeling",
      "abstract types",
      "ontological models"
    ],
    "Software": "OMF (Ontological Modeling Framework) Core Functional API"
  },
  {
    "Update_Date": "2018-03-08",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.resolver",
    "Description": "This library provides an implementation of the OML Resolver API.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.resolver",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 3392,
    "Categories": [
      "library",
      "symbol table",
      "resolver",
      "JSON",
      "serialization",
      "ontological models"
    ],
    "Software": "Symbol table resolver for the JSON serialization of JPL's Ontological Modeling Framework Schema."
  },
  {
    "Update_Date": "2018-03-01",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.doc",
    "Description": "The documentation about the Ontological Modeling Language specification",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.doc",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 992,
    "Categories": [
      "Ontological Modeling Language",
      "OML",
      "document"
    ],
    "Software": "JPL's Ontological Modeling Language Specification Document"
  },
  {
    "Update_Date": "2018-02-06",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.fuseki",
    "Description": "Configuration for setting up a Fuseki server for the IMCE ontology workflows",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.fuseki",
    "Contributors": [
      "NicolasRouquette",
      "StevenJenkinsJPL"
    ],
    "Labor_Hours": 32,
    "Categories": [
      "server",
      "configuration",
      "Fuseki",
      "IMCE",
      "ontology",
      "workflow"
    ],
    "Software": "Configuration for setting up a Fuseki server for the IMCE ontology workflows"
  },
  {
    "Update_Date": "2017-12-28",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.third_party.other_scala_libraries",
    "Description": "Aggregate of Akka, Play, Scalaz, ScalaCheck, ScalaTest, Spray libraries",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.third_party.other_scala_libraries",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 32,
    "Categories": [
      "aggregate",
      "library",
      "libraries"
    ],
    "Software": "IMCE Third-Party Other Scala Libraries"
  },
  {
    "Update_Date": "2017-11-29",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.sbt.plugin",
    "Description": "This sbt plugin aggregates a few community plugins used across several projects in JPL's Integrated Model-Centric Engineering initiative and in OMG's Tool Infrastructure Working Group. There is an inherent tradeoff between maintaining slight variations of similar build configurations across multiple projects (i.e. no common sbt plugin) and defining a common sbt plugin reused across multiple projects to simplify their build configurations. Conceptually, the scope and purpose of this sbt plugin is very similar to the elegant nice-sbt-settings. Practically, nice-sbt-settings is indeed nicer.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.sbt.plugin",
    "Contributors": [
      "NicolasRouquette",
      "sjiherzig",
      "dwijnand"
    ],
    "Labor_Hours": 688,
    "Categories": [
      "aggregate",
      "sbt plugin",
      "community plugin"
    ],
    "Software": "JPL's IMCE SBT Plugin for Java, Scala, AspectJ projects"
  },
  {
    "Update_Date": "2017-10-18",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.third_party.owlapi_libraries",
    "Description": "This project builds an aggregate of the OWL API published by several organizations, including: net.sourceforge.owlapi (the official OWL API as the de-facto reference implementation of the W3C OWL Functional Syntax Specification), and org.openrdf.sesame (the Eclipse RDF4J Sesame implementation of W3C Resource Description Framework, RDF)",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.third_party.owlapi_libraries",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "aggregate",
      "libraries"
    ],
    "Software": "IMCE Third-Party OWLAPI Libraries"
  },
  {
    "Update_Date": "2017-10-06",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.third_party.scala_graph_libraries",
    "Description": "This project builds an aggregates of several Scala libraries for graph data structures published by several organizations: com.assembla.scala-incubator (In-memory graph library intended to fit seamlessly into the Scala Collection Library), and net.liftweb (The JSON library from the Lift web framework for Scala).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.third_party.scala_graph_libraries",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 32,
    "Categories": [
      "aggregate",
      "libraries",
      "scala",
      "graph"
    ],
    "Software": "IMCE Third-Party Scala Graph Libraries"
  },
  {
    "Update_Date": "2017-09-28",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analyzed",
    "Description": "There is no description for this software",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.analyzed",
    "Contributors": [
      "none listed"
    ],
    "Labor_Hours": 96,
    "Categories": [
      "ontologies"
    ],
    "Software": "gov.nasa.jpl.imce.ontologies.loadprod"
  },
  {
    "Update_Date": "2017-03-01",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.plugin",
    "Description": "The IMCE Dynamic Scripts plugin is compatible with any edition of MagicDraw 18.0.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.plugin",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 4992,
    "Categories": [
      "IMCE",
      "dynamic",
      "scripts",
      "plugin",
      "MagicDraw"
    ],
    "Software": "IMCE Dynamic Scripts plugin for MagicDraw 18"
  },
  {
    "Update_Date": "2018-05-01",
    "Public Code Repo": "http://www.apache.org/dyn/closer.lua/climate/1.3.0/climate-1.3.0-rc1.zip",
    "Description": "Apache Open Climate Workbench is an effort to develop software that performs climate model evaluation using model outputs from a variety of different sources the Earth System Grid Federation, the Coordinated Regional Climate Downscaling Experiment, the U.S. National Climate Assessment and the North American Regional Climate Change Assessment Program and temporal/spatial scales with remote sensing data from NASA, NOAA and other agencies. The toolkit includes capabilities for rebinning, metrics computation and visualization.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "http://www.apache.org/dyn/closer.lua/climate/1.3.0/climate-1.3.0-rc1.zip",
    "Contributors": [
      "lewis.j.mcgibbney@jpl.nasa.gov"
    ],
    "Labor_Hours": 15232,
    "Categories": [
      "climate",
      "climate change",
      "model",
      "NOAA",
      "earth",
      "downscaling",
      "assessment"
    ],
    "Software": "Apache Open Climate Workbench 1.3.0"
  },
  {
    "Update_Date": "2017-09-05",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.launcher",
    "Description": "This launcher application follows the guidelines for starting MagicDraw 18.5 in a configuration for running MagicDraw 18.5 with the IMCE DynamicScripts plugin for MagicDraw 18.5. installed outside of the MagicDraw installation folder.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.dynamic_scripts.magicdraw.launcher",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 208,
    "Categories": [
      "launcher",
      "IMCE",
      "MagicDraw",
      "DynamicScripts",
      "plugin"
    ],
    "Software": "Launcher for IMCE's MagicDraw DynamicScripts Plugin"
  },
  {
    "Update_Date": "2017-02-28",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.magicdraw.library.enhanced_api#imce-magicdraw-library-for-aspectj-based-md-api-enhancements",
    "Description": "To enable these enhancements at runtime in MD, this library uses the so-called load-time weaving strategy. AspectJ is an aspect-oriented extension to Java. Because AspectJ operates at the level of bytecode, it is also applicable to other languages like Scala that compile to the JVM.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.magicdraw.library.enhanced_api#imce-magicdraw-library-for-aspectj-based-md-api-enhancements",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 176,
    "Categories": [
      "AspectJ",
      "IMCE",
      "MagicDraw",
      "enhancement",
      "browser",
      "diagram",
      "load-time",
      "weaving"
    ],
    "Software": "IMCE MagicDraw Library for AspectJ-based MD API enhancements"
  },
  {
    "Update_Date": "2017-08-30",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.dynamic_scripts.generic_dsl",
    "Description": "A textual DSL for specifying browser, diagram & contextualized actions in a modeling tool. This project defines a tool-neutral, generic DSL for specifying 'dynamic scripts'. A dynamic script specifies the location of a modeling function compiled for the JVM that can be invoked for modeling elements matching the applicability criteria specified in the script. The genericity of this DSL is that the applicability criteria can be specified in terms of references to tool-neutral identifiers of metaclasses, stereotypes and library types and the context where scripts are to be made available to users is specified in terms of generic notions of model browser and diagrams; user-interface notions that are widely common to graphical modeling tools.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.dynamic_scripts.generic_dsl",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 480,
    "Categories": [
      "tool-neutral",
      "generic",
      "DSL",
      "dynamic scripts",
      "browser",
      "diagram",
      "modeling",
      "textual"
    ],
    "Software": "JPL Dynamic Scripts Generic DSL"
  },
  {
    "Update_Date": "2017-08-29",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.batch",
    "Description": "This program will execute the profile generator application (gov.nasa.jpl.imce.profileGenerator.application), and will package the results. It depends on both the profile generator application and the ontology bundles produced.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.batch",
    "Contributors": [
      "NicolasRouquette",
      "sjiherzig"
    ],
    "Labor_Hours": 80,
    "Categories": [
      "profile",
      "generator",
      "batch",
      "execution",
      "application"
    ],
    "Software": "Profile Generator - Batch Execution"
  },
  {
    "Update_Date": "2017-06-27",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor",
    "Description": "This repository contains the files required for creating a docker image with required software for ontology processing.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 128,
    "Categories": [
      "docker",
      "image",
      "ontology",
      "processing"
    ],
    "Software": "Ontology Processor"
  },
  {
    "Update_Date": "2017-06-01",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor",
    "Description": "This repository provides mapping from OTI models (i.e., OMG Tool-neutral Interface for UML) to generic OMF (Ontological Modeling Framework).",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.ontologies.processor",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 1488,
    "Categories": [
      "mapping",
      "OTI",
      "OMG",
      "tool-neutral",
      "UML",
      "generic",
      "OMF",
      "Ontological",
      "Modeling",
      "Framework"
    ],
    "Software": "Mapping from OTI models to Generic OMF"
  },
  {
    "Update_Date": "2017-05-09",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.core",
    "Description": "This repository provides simplified OML for exercising Xcore/Xtext/Xtend code generation and building using gradle.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.core",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 87104,
    "Categories": [
      "Xcore",
      "Xtext",
      "Xtend",
      "gradle",
      "OML",
      "Ontological",
      "Modeling",
      "Language"
    ],
    "Software": "Ontological Modeling Language core build (Xcore, Xtext, Xtend)"
  },
  {
    "Update_Date": "2017-04-18",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.application",
    "Description": "Generator from Ontological Modeling Framework (OMF) vocabularies to profiles extending UML/SysML",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.application",
    "Contributors": [
      "NicolasRouquette",
      "sjiherzig"
    ],
    "Labor_Hours": 1168,
    "Categories": [
      "UML/SysML",
      "profiles",
      "vocabularies",
      "generator",
      "OMF",
      "Ontological",
      "Modeling",
      "Framework"
    ],
    "Software": "A MagicDraw DynamicScript application for executing the IMCE profile generator from OMF bundles"
  },
  {
    "Update_Date": "2017-04-04",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.templates.scala.g8",
    "Description": "The IMCE Project Template is a Giter8 template project serving as the basis for new Scala projects within the IMCE build ecosystem. Meant for developers familiar with or new to the IMCE platform, this repository contains reference guides and general purpose build and publish scripts for integration with IMCE accounts on Travis CI, Bintray and Github.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.templates.scala.g8",
    "Contributors": [
      "sjiherzig"
    ],
    "Labor_Hours": 48,
    "Categories": [
      "Giter8",
      "template",
      "project",
      "IMCE",
      "Scala",
      "TravisCI",
      "Bintray",
      "GitHub"
    ],
    "Software": "IMCE Project Template"
  },
  {
    "Update_Date": "2017-03-01",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.specification.parent",
    "Description": "This is a multi-project of mostly Xcore/Xtext/Xtend sources used to generate several components (abstract syntax metamodel; concrete syntax parser, doc, ...). There are several Xtend-based code generators that produce Scala source code.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.oml.specification.parent",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 6496,
    "Categories": [
      "Xtend",
      "generator",
      "scala",
      "composite",
      "IMCE",
      "integrated",
      "model",
      "centric",
      "engineering",
      "OML",
      "ontological",
      "modeling",
      "language"
    ],
    "Software": "Composite project for JPL's Integrated Model-Centric Engineering (IMCE) Ontological Modeling Language (OML) Specification"
  },
  {
    "Update_Date": "2016-12-13",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.metrology.isoiec80000.magicdraw.library",
    "Description": "This contains changes from previous versions. In IMCE.ISO80000-5 Thermodynamics::Units -- 'cubic metre ratio per pascasl' has a slot value: hasReducedFactors=false -- 'metre coefficient per kelvin' has a slot value: hasReducedFactors=false",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.metrology.isoiec80000.magicdraw.library",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "ISO",
      "IEC",
      "MagicDraw",
      "Library",
      "IMCE",
      "integrated",
      "model",
      "centric",
      "engineering"
    ],
    "Software": "ISO/IEC 80000 MagicDraw library resource from JPL's Integrated Model-Centric Engineering (IMCE)"
  },
  {
    "Update_Date": "2017-01-12",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.third_party.jena_libraries",
    "Description": "This project builds an aggregate of several Apache Jena libraries published by the following organizations: 1) org.apache.jena A Java framework for building Semantic Web & Linked Data applications 2) org.apache.httpcomponents Toolset of low-level Java components focused on HTTP and associated protocols 3) xerces XML parsers for Java.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.third_party.jena_libraries",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "aggregate",
      "Apache",
      "Jena",
      "libraries"
    ],
    "Software": "IMCE Third-Party Jena Libraries"
  },
  {
    "Update_Date": "2017-01-11",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.magicdraw.projectUsageIntegrityChecker",
    "Description": "Project Usage Integrity Checker for MagicDraw 18",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.magicdraw.projectUsageIntegrityChecker",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 7024,
    "Categories": [
      "usage",
      "integrity",
      "checker",
      "MagicDraw"
    ],
    "Software": "Project Usage Integrity Checker for MagicDraw 18"
  },
  {
    "Update_Date": "2016-11-18",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.semmle",
    "Description": "Configuration for Semmle Analysis of JPL's open-source projects",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.semmle",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 96,
    "Categories": [
      "semmle",
      "analysis",
      "open-source"
    ],
    "Software": "Configuration for Semmle Analysis of JPL's open-source projects"
  },
  {
    "Update_Date": "2016-11-04",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.spark.data",
    "Description": "This is a prototype to explore SPARK idioms for loading & analyzing OMF Schema tabular data.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.spark.data",
    "Contributors": [
      "NicolasRouquette"
    ],
    "Labor_Hours": 112,
    "Categories": [
      "prototype",
      "SPARK",
      "OMF",
      "schema",
      "tabular"
    ],
    "Software": "Prototyping SPARK-based analysis of IMCE OMF Schema data"
  },
  {
    "Update_Date": "2016-11-26",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.profile",
    "Description": "Model for representing SysML profiles, used as an intermediate format in the profile generation process.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.profile",
    "Contributors": [
      "NicolasRouquette",
      "sjiherzig"
    ],
    "Labor_Hours": 272,
    "Categories": [
      "profile",
      "generator",
      "SysML"
    ],
    "Software": "Profile Generator - Profile Model"
  },
  {
    "Update_Date": "2016-10-26",
    "Public Code Repo": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.bundle",
    "Description": "Model for representing digest bundles, used as an intermediate format in the profile generation process.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/gov.nasa.jpl.imce.profileGenerator.model.bundle",
    "Contributors": [
      "NicolasRouquette",
      "sjiherzig"
    ],
    "Labor_Hours": 208,
    "Categories": [
      "digest",
      "bundles",
      "profile"
    ],
    "Software": "Profile Generator - Bundle Model"
  },
  {
    "Update_Date": "2016-10-24",
    "Public Code Repo": "https://github.com/JPL-IMCE/imce.third_party.aspectj_libraries",
    "Description": "This project builds an aggregate of the AspectJ libraries published by the following organization: org.aspectj A seamless aspect-oriented extension to the Java programming language.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://github.com/JPL-IMCE/imce.third_party.aspectj_libraries",
    "Contributors": [
      "NicolasRouquette",
      "sjiherzig"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "aggregate",
      "AspectJ",
      "libraries",
      "Java"
    ],
    "Software": "IMCE Third-Party AspectJ Libraries"
  },
  {
    "Update_Date": "2018-06-26",
    "Public Code Repo": "https://github.com/OpenMDAO/dymos",
    "Description": "Dymos is a library for solving general optimal control problems within the context of multidisciplinary optimization via the OpenMDAO multidisciplinary optimization framework.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Glenn Research Center",
    "External Link": "https://github.com/OpenMDAO/dymos",
    "Contributors": [
      "robfalck",
      "JustinSGray"
    ],
    "Labor_Hours": 2500,
    "Categories": [
      "python",
      "openmdao",
      "optimal control",
      "trajectory optimization"
    ],
    "Software": "Dymos"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/nasa/LH2Sim",
    "Description": "'Simulation of Cryogenic Tank with Temperature Stratification' is a MATLAB-based simulation of temperature stratification effects for cryogenic fluid in a tank. It is a reduced dynamical model describing temperature stratification effects driven by natural convection in a liquid hydrogen cryogenic tank. It accounts for storage, loading, and unloading of cryogenic fluid.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://software.nasa.gov/software/ARC-17900-1",
    "Contributors": [
      "Christopher Teubert",
      "Matthew Daigle"
    ],
    "Labor_Hours": 416,
    "Categories": [
      "cryogenic",
      "temperature",
      "stratification",
      "MATLAB",
      "fluid",
      "hydrogen"
    ],
    "Software": "Simulation of Cryogenic Tank with Temperature Stratification"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/spacetelescope/jwst_backgrounds",
    "Description": "jwst_backgrounds is a a simple program to predict the levels of background emission in JWST observations, for use in proposal planning. It accesses a precompiled background cache prepared by Space Telescope Science Institute. The background cache is hosted by the Mikulski Archive for Space Telescopes (MAST), so you need internet access to run the tool with the remote cache. It is possible to download the full background cache to your local machine. Instructions for downloading the background cache can be found at http://archive.stsci.edu/archive_news/2017/08-Aug/index.html#article1.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Ames Research Center",
    "External Link": "https://jwst.stsci.edu/news-events/news/News%20items/the-jwst-backgrounds-tool-is-now-available",
    "Contributors": [
      "Klaus Pontoppidan",
      "janerigby"
    ],
    "Labor_Hours": 304,
    "Categories": [
      "Mikulski",
      "Archive",
      "Space",
      "Telescopes",
      "Mikulski Archive for Space Telescopes",
      "MAST",
      "python",
      "predict",
      "background",
      "emission",
      "observations"
    ],
    "Software": "JWST Background Tools"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/CurtTilmes/perl6-dbpg",
    "Description": "PostgreSQL (https://www.postgresql.org) is an Open Source Relational Database Management System (RDBMS). It includes a C library (libpq) for interacting with the server over the network (https://www.postgresql.org/docs/10/static/libpq.html). This module provides a rich interface to the PostgreSQL libpq library for Perl 6. It includes capabilities for prepared query caching, database connection caching, exception handling, flexible type conversion (including Boolean, Date, DateTime, Byte Arrays, etc. as well as custom types), bulk data copy in and out, listen/notify, transactions, and cursors for large query processing.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://software.nasa.gov/software/GSC-18031-1",
    "Contributors": [
      "Curt Tilmes",
      "Fritz Zaucker"
    ],
    "Labor_Hours": 752,
    "Categories": [
      "PostgreSQL",
      "Open",
      "Source",
      "Relational",
      "Database",
      "Management",
      "System",
      "RDBMD",
      "C library",
      "C",
      "caching",
      "conversion",
      "processing"
    ],
    "Software": "Perl 6 DBPg PostgreSQL module"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/CurtTilmes/perl6-epoll",
    "Description": "A simple wrapper exposing the Linux epoll(7) I/O event notification facility within Perl 6.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://software.nasa.gov/software/GSC-18030-1",
    "Contributors": [
      "Curt Tilmes"
    ],
    "Labor_Hours": 80,
    "Categories": [
      "Perl 6",
      "linux",
      "notification",
      "wrapper"
    ],
    "Software": "Perl 6 epoll"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/nasa/gFTL",
    "Description": "This innovation creates the capability for Fortran software developers to routinely declare and use specialized software containers for arbitrary types of data. The capability is somewhat analogous to that of the C Standard Template Library but with important differences. Although the number of containers are expected to grow, the current supported cases are Vector, Map, and Set. Contained items can be of any intrinsic type or user-defined derived type. The user can also indicate that the contained objects are polymorphic and/or pointers with corresponding implications for the semantics of using those containers.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://software.nasa.gov/software/GSC-17742-1",
    "Contributors": [
      "tclune"
    ],
    "Labor_Hours": 6688,
    "Categories": [
      "Fortran",
      "software",
      "containers"
    ],
    "Software": "Fortran Template Library (gFTL) for managing collections of objects via software containers"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://sourceforge.net/projects/gmat/files/latest/download",
    "Description": "The General Mission Analysis Tool (GMAT) is the world's only enterprise, multi-mission, open source software system for space mission design, optimization, and navigation. The system supports missions in flight regimes ranging from low Earth orbit to lunar, libration point, and deep space missions. GMAT is developed by a team of NASA, private industry, public, and private contributors and is used for real-world mission support, engineering studies, as a tool for education, and public engagement.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Goddard Space Flight Center",
    "External Link": "https://software.nasa.gov/software/GSC-18094-1",
    "Contributors": [
      "gsfc-softwarerequest@mail.nasa.gov"
    ],
    "Labor_Hours": 37504,
    "Categories": [
      "open",
      "space",
      "mission",
      "orbit",
      "non-linear",
      "optimizer",
      "Solar Dynamics Observatory",
      "SDO",
      "Solar and Heliospheric Observatory",
      "SOHO",
      "Advanced Composition Explorer",
      "ACE",
      "Wind",
      "Transiting Exoplanet Survey Satellite",
      "TESS",
      "Lunar Reconnaissance Orbiter",
      "LRO"
    ],
    "Software": "General Mission Analysis Tool (GMAT) Version R2018a"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/nasa/DON-Federate-HLA2MPC",
    "Description": "HLA2MPC provides the link between HLA (High Level Architecture, IEEE 1516) Simulation Federation data and any MPC 3 compliant simulation or visualization tool. One such tool is DON, the Distributed Observer Network, now in version 3.1. DON 3.1 is available in the Software catalog at https://software.nasa.gov/software/KSC-13775.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Kennedy Space Center",
    "External Link": "https://software.nasa.gov/software/KSC-14109",
    "Contributors": [
      "ksc-dl-software-request@mail.nasa.gov"
    ],
    "Labor_Hours": 9232,
    "Categories": [
      "High",
      "Level",
      "Architecture",
      "HLA"
    ],
    "Software": "DON-Federate-HLA2MPC"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/nasa/kodiak",
    "Description": "Kodiak is a software implementation of a branch-and-bound algorithm for rigorous approximations of expressions involving nonlinear real arithmetic. It includes an optimizer for nonlinear real functions, a solver for nonlinear inequalities, and an Application Programming Interface (API) to integrate directly with other software verification tools. Kodiak's Boolean Checker Software Module is an implementation of a general mixed boolean/real expression checker that is integrated into Kodiak's global optimization solver.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://shemesh.larc.nasa.gov/fm/Kodiak/0",
    "Contributors": [
      "cesar.a.munoz@nasa.gov"
    ],
    "Labor_Hours": 5344,
    "Categories": [
      "branch",
      "bound",
      "algorithm",
      "approximation",
      "expression",
      "non-linear",
      "real",
      "arithmetic",
      "optimizer",
      "inequalities",
      "API",
      "application",
      "programming",
      "interface",
      "boolean",
      "checker",
      "Global Optimization",
      "Rigurous Polynomial Approximations",
      "Interval Arithmetic",
      "Non-linear Arithmetic"
    ],
    "Software": "Kodiak's Boolean Checker Software Module"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/nasa/SROMPy",
    "Description": "The Stochastic Reduced Order Models with Python (SROMPy) software package is code written in Python to help solve uncertainty quantification and propagation problems. Stochastic Reduced Order Models (SROMs) are low-dimensional, discrete representations of a given random vector being modeled that facilitate efficient stochastic calculations. SROMs can be viewed as a smart Monte Carlo method - using the concept for uncertainty propagation is similarly straightforward, but can significantly reduce computation time. An SROM is formed for a given target random vector by solving an optimization problem that determines it's parameters by minimizing the error between the statistics of the SROM and the target. Once the SROM is formed, it can be use to efficiently perform a probabilistic analysis. The SROMPy software package is a tool to solve the optimization problem efficiently to generate an SROM that can be used to propagate uncertainty through a given model.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-19359-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov"
    ],
    "Labor_Hours": 1008,
    "Categories": [
      "stochastic",
      "reduced",
      "order",
      "models",
      "python",
      "propagation",
      "low-dimensional",
      "discrete",
      "representations",
      "random",
      "vector",
      "calculations"
    ],
    "Software": "Stochastic Reduced Order Models with Python (SROMPy)"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/nasa/PLEXIL5",
    "Description": "The Plan Execution Interchange Language (PLEXIL) is an open source synchronous language developed by NASA for commanding and monitoring autonomous systems. PLEXIL Formal Interactive Verification Environment (PLEXIL5) is a tool that implements a formal executable semantics of PLEXIL. PLEXIL5 includes a graphical interface that enable access to formal verification techniques such as model-checking, symbolic execution, theorem proving, and static analysis of plans. The graphical environment supports formula editing and visualization of counterexamples, interactive simulation of plans at different granularity levels, and random initialization of external environment variables.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-19339-1",
    "Contributors": [
      "cesar.a.munoz@nasa.gov"
    ],
    "Labor_Hours": 42320,
    "Categories": [
      "Formal",
      "Interactive",
      "Verification",
      "Environment",
      "Plan",
      "Execution",
      "Interchange",
      "Language",
      "PLEXIL5",
      "sychronous",
      "autonomous"
    ],
    "Software": "Formal Interactive Verification Environment for the Plan Execution Interchange Language (PLEXIL5)"
  },
  {
    "Update_Date": "2017-07-16",
    "Public Code Repo": " https://github.com/nasa/AprilNav",
    "Description": "AprilNav is a mobile indoor real-time landmark navigation system.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Marshall Space Flight Center",
    "External Link": "https://github.com/nasa/AprilNav",
    "Languages": [
      "C++",
      "python"
    ],
    "Contributors": [
      "gretastudier",
      "tkschuler"
    ],
    "Labor_Hours": 600,
    "Categories": [
      "Tools",
      "Autonomous Systems",
      "Navigation"
    ],
    "Software": "AprilNav"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://software.nasa.gov/software/LAR-19128-1",
    "Description": "This is a training tool for individuals to learn how to develop software with NASA-developed Core Flight software (CFS) framework. No agreement is necessary through this catalog. Software is available at open source site.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Johnson Space Center",
    "External Link": "https://software.nasa.gov/software/LAR-19128-1",
    "Contributors": [
      "jsc-ttco-software-request@mail.nasa.gov"
    ],
    "Labor_Hours": 1,
    "Categories": [
      "core",
      "flight",
      "software",
      "training",
      "framework"
    ],
    "Software": "CFS-101 Training"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/NASA-DEVELOP/MARSHe",
    "Description": "This tool includes three general types of scripts. The first one extracts average NDVI values from Landsat 5 and Landsat 8 image collections for specified reference dates (typically a period of 10-15 years). Anomalies in NDVI values are then derived from Landsat 5 & 8 reference image collections from later dates (typically the year after the reference period to present). Various graphs and charts are produced showing positive and negative NDVI changes for specified points. The results are also visualized on the map as either areas of NDVI gain (displayed in green) or NDVI loss (displayed in red). The second types of scripts included scripts that perform unsupervised classifications to determine marsh extent for a variety of years and were made by applying a mask over the specified study area that incorporates elevation data to exclude regions over a specified height above average sea-level. These scripts require the user to choose classified pixel clusters that represent marsh land cover by using the Google Earth Inspector tab and then entering those values into the script to generate the marsh extent maps. Results of these scripts include classification maps for various years (2000, 2005, 2010, 2015, etc.). The user can then decide to export those results into either their Assets or their Drive, or both. A third type of script is used for statistics regarding the classified maps generated in the classification scripts. These statistics include total pixel number and total marsh area calculated into square meters after the marsh extent pixels are clipped to our study area (the State of Maryland).",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-19211-1",
    "Contributors": [
      "larc-sra@mail.nasa.gov"
    ],
    "Labor_Hours": 16,
    "Categories": [
      "marsh",
      "remote",
      "sensing",
      "health",
      "evaluation",
      "Landsat 5",
      "Landsat 8",
      "image"
    ],
    "Software": "MaRSHE- Marsh Remote Sensing Health Evaluation"
  },
  {
    "Update_Date": "2018-08-21",
    "Public Code Repo": "https://github.com/nasa/TLNS3D",
    "Description": "This software was developed to solve Reynolds-averaged Navier-Stokes Equations to simulate turbulent, viscous flows over three-dimensional configurations. A general multiblock grid is used to model complex configurations. A multi-stage Runge-Kutta pseudo-time stepping scheme is coupled with residual smoothing and multigrid acceleration techniques to form an efficient algorithm. TLNS3D-MB was the first CFD code to demonstrate grid independent convergence rate for transonic viscous flows over wing/fuselage configurations.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-16666-GS",
    "Contributors": [
      "larc-sra@mail.nasa.gov"
    ],
    "Labor_Hours": 29952,
    "Categories": [
      "Reynolds-averaged",
      "Reynolds",
      "averaged",
      "Navier-Stokes",
      "Navier",
      "Stokes",
      "equations",
      "simulate",
      "turbulent",
      "viscous",
      "three-dimensional",
      "configurations"
    ],
    "Software": "TLNS3D"
  },
  {
    "Update_Date": "2018-09-27",
    "Public Code Repo": "https://github.com/googlecreativelab/access-mars",
    "Description": "The Curiosity rover has been on the surface of Mars for over five years. In that time, it has sent over 200,000 photos back to Earth. Using these photos, engineers at JPL have reconstructed the 3D surface of Mars for their scientists to use as a mission planning tool â€“ surveying the terrain and identifying geologically significant areas for Curiosity to investigate further. And now you can explore the same Martian surface in your browser in an immersive WebVR experience. Access Mars features four important mission locations: the Landing Site, Pahrump Hills, Marias Pass, and Murray Buttes. Additionally, users can visit Curiosity's 'Current Location' for a look at where the rover has been in the past two to four weeks. And while you explore it all, JPL scientist Katie Stack Morgan will be your guide, teaching you about key mission details and highlighting points of interest.",
    "License": [
      "ALv2"
    ],
    "NASA Center": "Jet Propulsion Laboratory",
    "External Link": "https://accessmars.withgoogle.com/",
    "Contributors": [
      "jeremyabel",
      "mannytan",
      "ryburke",
      "kellyannl",
      "amenzies"
    ],
    "Labor_Hours": 60208,
    "Categories": [
      "Mars",
      "WebVR",
      "Curiosity Rover"
    ],
    "Software": "Access Mars"
  },
  {
    "Update_Date": "2018-11-14",
    "Public Code Repo": "https://github.com/nasa/NASA-Acronyms",
    "Description": "This is a tool for defining over 25,000 NASA acronyms.",
    "License": [
      "MIT"
    ],
    "NASA Center": "Kennedy Space Center",
    "External Link": "https://nasaacronyms.com/",
    "Contributors": [
      "maliska"
    ],
    "Labor_Hours": 78128,
    "Categories": [
      "search",
      "tool",
      "nasa",
      "acronym"
    ],
    "Software": "NASA Acronyms"
  },
  {
    "Update_Date": "2018-10-23",
    "Public Code Repo": "https://github.com/T-infinity/miniapps",
    "Description": "HyperSolve AD Mini-App uses an in-house developed AD tool that is based on operator-overloading to compute linearizations of a given function.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://software.nasa.gov/software/LAR-19476-1",
    "Contributors": [
      "kbthomp1"
    ],
    "Labor_Hours": 320,
    "Categories": [
      "operator",
      "overloading",
      "linearization",
      "function"
    ],
    "Software": "HyperSolve AD Mini-App"
  },
  {
    "Update_Date": "2018-11-08",
    "Public Code Repo": "https://github.com/nasa/mlmcpy",
    "Description": "Python module for applying the Multi-Level Monte Carlo (MLMC) method for uncertainty propagation.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/mlmcpy",
    "Contributors": [
      "lukemorrill",
      "jwarner308"
    ],
    "Labor_Hours": 784,
    "Categories": [
      "multi",
      "level",
      "monte",
      "carlo",
      "python",
      "uncertainty"
    ],
    "Software": "Multi-Level Monte Carlo"
  },
  {
    "Update_Date": "2018-11-14",
    "Public Code Repo": "https://github.com/nasa/SMCPy",
    "Description": "Python module for uncertainty quantification using a parallel sequential Monte Carlo sampler",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/SMCPy",
    "Contributors": [
      "peleser"
    ],
    "Labor_Hours": 1120,
    "Categories": [
      "uncertainty quantification",
      "parameter estimation",
      "model calibration"
    ],
    "Software": "Sequential Monte Carlo Sampling with Python"
  },
  {
    "Update_Date": "2018-11-14",
    "Public Code Repo": "https://github.com/nasa/bingo",
    "Description": "Bingo is an open source package for performing symbolic regression. Its emphasis lies on the efficient use of HPC resources. For the most part, things should work \"out of the box\", with a few dependencies that are standard in many python installs.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/bingo",
    "Contributors": [
      "gbomarito"
    ],
    "Labor_Hours": 34480,
    "Categories": [
      "symbolic regression",
      "HPC"
    ],
    "Software": "Bingo"
  },
  {
    "Update_Date": "2019-02-15",
    "Public Code Repo": "https://github.com/nasa/fprock",
    "Description": "FPRoCk is a software library for checking satisfiability of a set of mixed real and floating-point constraints. If this set of constraints has at least one solution, it returns one of the solutions, otherwise it returns UNSAT indicating that the set is unsatisfiable.",
    "License": [
      "NASA Open Source"
    ],
    "NASA Center": "Langley Research Center",
    "External Link": "https://github.com/nasa/fprock",
    "Contributors": [
      "cesar.a.munoz@nasa.gov"
    ],
    "Labor_Hours": 500,
    "Categories": [
      "satisfiability (SAT) checker",
      "floating-point SAT solver",
      "real-number SAT solver",
      "mixed floating-point/real constraints"
    ],
    "Software": "FPRoCK"
  }
]